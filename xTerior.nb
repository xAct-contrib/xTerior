Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["xTerior",
 FontSlant->"Italic",
 FontColor->RGBColor[
  1, 0, 0]]], "Title",ExpressionUUID->"4e1cc389-d608-47a5-9bb1-e4c12ec33170"],

Cell[TextData[{
 StyleBox["Exterior Calculus for ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xAct",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "Subtitle",ExpressionUUID->"120875e7-0243-47ef-84a8-9b2182c9e7ce"],

Cell[TextData[{
 StyleBox["Alfonso Garc\[IAcute]a-Parrado\n",
  FontSize->18],
 StyleBox["agparrado@uco.es",
  FontSize->14],
 StyleBox["\n",
  FontSize->18],
 StyleBox["Universidad de C\[OAcute]rdoba, Spain",
  FontSize->14],
 StyleBox["\n",
  FontSize->18],
 "\n",
 StyleBox["Leo C. Stein\n",
  FontSize->18],
 StyleBox["leo.stein@gmail.com\nU of MS, MS, United States\n",
  FontSize->14],
 "\n",
 StyleBox["(c) 2013-2019, under GPL\n\nhttp://www.xAct.es/\n\
http://groups.google.com/group/xAct\nhttps://github.com/xAct-contrib",
  FontSize->14]
}], "Subsubtitle",ExpressionUUID->"e3e08196-1f9d-4e51-bf7e-4010e73871d2"],

Cell[TextData[{
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is a package for exterior calculus in xAct.\n\n",
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is distributed under the GNU General Public License, and runs on top of ",
 StyleBox["xTensor ",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 "and ",
 StyleBox["xCoba",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " which are free packages for fast manipulation of abstract and component \
tensor expressions. All packages can be downloaded from ",
 ButtonBox["http://www.xact.es/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.xact.es"], None},
  ButtonNote->"http://www.xact.es"]
}], "Text",ExpressionUUID->"e6f42bae-aa49-4e2d-be48-1027ce768067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateList", "[", 
  "]"}]], "Input",ExpressionUUID->"1d8bdb2f-d22b-4ed3-b6b3-4140bdc9db06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2019", ",", "5", ",", "17", ",", "10", ",", "18", ",", 
   "21.717493`8.089384673635037"}], 
  "}"}]], "Output",ExpressionUUID->"b542be37-8838-46ac-9849-07844baaace4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xAct`xTerior`$xTensorVersionExpected", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<1.1.2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`$Version", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<0.9.1\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"20d26fcd-48a2-4b17-9fc9-6e59a5608f6e"],

Cell[CellGroupData[{

Cell[TextData[{
 "1. ",
 StyleBox["Initialization",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"cccd7807-ed69-419e-b8c7-ead7acb029d4"],

Cell[CellGroupData[{

Cell["1.0. TODO list", \
"Subsubsection",ExpressionUUID->"45f6af58-dc24-440d-801e-bd7f857659de"],

Cell[TextData[{
 StyleBox["TODO : ",
  FontWeight->"Bold"],
 "\n-Add some option to DefDiffForm which allows the user to include the \
degree in the printing output.\n-In the definition of the connection forms \
there are no checks about the manifolds in which the covariant derivatives \
are defined and they may well be defined in different tangent bundles.\n\
-ContractBasis and ToBasis commute with the exterior derivative. Implement \
it. This is partially done."
}], "Text",ExpressionUUID->"663ceec4-4677-40e3-b5b1-c570cd486b98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Diff", "[", 
  RowBox[{
   RowBox[{"FBasis", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "B"}], "]"}], ",", "cd"}], 
  "]"}]], "Input",ExpressionUUID->"1f9886a5-412b-41c0-8c5a-c80e7184277e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{
    SuperscriptBox["d", "\[EmptyDownTriangle]"], "[", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"\[Theta]", 
         StyleBox[GridBox[{
            {
             StyleBox["1",
              FontColor->RGBColor[1., 0., 0.]]},
            {" "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                Offset[0.]}}, "RowsIndexed" -> {}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Coframe[$CellContext`M][{1, $CellContext`B}],
     Editable->False], "]"}],
   ShowAutoStyles->False,
   AutoSpacing->False],
  xAct`xTerior`Diff[
   xAct`xTerior`Coframe[$CellContext`M][{1, $CellContext`B}], $CellContext`cd],
  Editable->
   False]], "Output",ExpressionUUID->"0e832a01-dc19-475b-aaf3-df90687ba4d8"]
}, Open  ]],

Cell[TextData[StyleBox["There\[CloseCurlyQuote]s a bug here, this should have \
expressed the exterior covariant derivative in terms of the usual exterior \
derivative.",
 FontWeight->
  "Bold"]], "Text",ExpressionUUID->"b5e87afe-bf41-49b3-ab49-7732dff90c6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeExtD", "[", 
  RowBox[{"%", ",", "cd", ",", "PD"}], 
  "]"}]], "Input",ExpressionUUID->"080acd95-e02c-4f12-83ad-1114b8f6aaea"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{"d", "[", 
    InterpretationBox[
     StyleBox[GridBox[{
        {"\[Theta]", 
         StyleBox[GridBox[{
            {
             StyleBox["1",
              FontColor->RGBColor[1., 0., 0.]]},
            {" "}
           },
           GridBoxSpacings->{"Columns" -> {
               Offset[0.], {
                Offset[0.034999999999999996`]}, 
               Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                Offset[0.]}}, "RowsIndexed" -> {}}],
          FontSize->Rational[39, 4]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.034999999999999996`]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      ShowAutoStyles->False,
      AutoSpacing->False],
     xAct`xTerior`Coframe[$CellContext`M][{1, $CellContext`B}],
     Editable->False], "]"}],
   ShowAutoStyles->False,
   AutoSpacing->False],
  xAct`xTerior`Diff[
   xAct`xTerior`Coframe[$CellContext`M][{1, $CellContext`B}], xAct`xTensor`PD],
  Editable->
   False]], "Output",ExpressionUUID->"0967c08b-ff63-4885-95d2-59035d5ebc3d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.1. GPL", \
"Subsubsection",ExpressionUUID->"dbbd054e-2550-4054-8a3d-7cac0ed2c855"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"xTerior", ":", " ", 
    RowBox[{
    "exterior", " ", "calculus", " ", "in", " ", "Differential", " ", 
     "Geometry"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Copyright", " ", 
     RowBox[{"(", "C", ")"}], " ", "2013"}], "-", 
    RowBox[{"2019", " ", "Alfonso", " ", "Garcia"}], "-", 
    RowBox[{"Parrado", " ", "Gomez"}], "-", 
    RowBox[{"Lobo", " ", "and", " ", "Leo", " ", 
     RowBox[{"C", ".", " ", "Stein"}]}]}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "program", " ", "is", " ", "free", " ", "software"}], ";", 
     " ", 
     RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
      RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", " ",
       "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", "General",
       " ", "Public", " ", "License", " ", "as", " ", "published", " ", "by", 
      " ", "the", " ", "Free", " ", "Software", " ", "Foundation"}], ";", " ", 
     RowBox[{
     "either", " ", "version", " ", "2", " ", "of", " ", "the", " ", 
      "License"}]}], ",", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
     "later", " ", 
     RowBox[{
     "version", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "program", " ", "is", " ", "distributed", " ", "in", " ", "the", 
     " ", "hope", " ", "that", " ", "it", " ", "will", " ", "be", " ", 
     "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\[IndentingNewLine]", "MERCHANTABILITY", " ", "or", " ", 
      "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      
      RowBox[{
      "details", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "You"}], 
      " ", "should", " ", "have", " ", "received", " ", "a", " ", "copy", " ",
       "of", " ", "the", " ", "GNU", " ", "General", " ", "Public", " ", 
      "License", " ", "along", " ", "with", " ", "this", " ", "program"}], 
     ";", " ", 
     RowBox[{"if", " ", "not"}]}], ",", " ", 
    RowBox[{
    "write", " ", "to", " ", "the", " ", "Free", " ", "Software", " ", 
     "Foundation"}], ",", " ", 
    RowBox[{"Inc", "."}], ",", " ", 
    RowBox[{
     RowBox[{"59", " ", "Temple", " ", "Place"}], "-", 
     RowBox[{"Suite", " ", "330"}]}], ",", " ", "Boston", ",", " ", 
    RowBox[{
     RowBox[{"MA", " ", "02111"}], "-", "1307"}], ",", " ", 
    RowBox[{"USA", "."}]}], " ", "\[IndentingNewLine]", "*)"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"77401627-6baa-4e57-89b4-5fe39eb881ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.2. Info package", \
"Subsubsection",ExpressionUUID->"83d7e063-1977-4b42-a3f6-56adc139b823"],

Cell["\<\
(* :Title: xTerior *)

(* :Author: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein *)

(* :Summary: exterior calculus in Differential Geometry *)

(* :Brief Discussion:
   - xTerior extends xAct to work with differentiable forms in general \
manifolds.
   - Introduces the exterior algebra, the exterior derivative, the Hodge \
dual, the connection and curvature forms for an arbitrary connection, the \
exterior covariant derivative.
   
*)
  
(* :Context: xAct`xTerior` *)

(* :Package Version: 0.9.1 *)

(* :Copyright: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein (2013-2019) \
*)

(* :History: See xTerior.History *)

(* :Keywords: *)

(* :Source: xTerior.nb *)

(* :Warning: *)

(* :Mathematica Version: 9.0 and later *)

(* :Limitations:
\t- ?? *)\
\>", "Input",
 PageWidth:>PaperWidth,
 CellMargins->{{60, -272}, {Inherited, Inherited}},
 InitializationCell->
  True,ExpressionUUID->"10d1cc07-8b30-47b8-a79f-4f5f1e1676bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3. BeginPackage", \
"Subsubsection",ExpressionUUID->"84b43dae-3ec3-4261-b23b-f80079a72f7d"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xAct`xTerior`Private`xTeriorSymbols", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", "]"}], ",", 
         RowBox[{"Names", "[", "\"\<xAct`xTerior`Private`*\>\"", "]"}]}], 
        "]"}], ",", 
       RowBox[{
       "\"\<$Version\>\"", "|", "\"\<xAct`xTerior`$Version\>\"", "|", 
        "\"\<$xTensorVersionExpected\>\"", "|", 
        "\"\<xAct`xTerior`$xTensorVersionExpected\>\""}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unprotect", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Clear", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"20a199a3-66fe-4e02-ba0a-2e072670c343"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Unevaluated", "[", "xAct`xCore`Private`$LastPackage", "]"}], "===",
      "xAct`xCore`Private`$LastPackage"}], ",", 
    RowBox[{
    "xAct`xCore`Private`$LastPackage", "=", "\"\<xAct`xTerior`\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"42b499de-9aa9-4710-943b-906aedecdbab"],

Cell[CellGroupData[{

Cell[BoxData["xAct`xCore`Private`$LastPackage"], \
"Input",ExpressionUUID->"99606d0e-7a21-4ee6-ac66-e0000ae51bb1"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], \
"Output",ExpressionUUID->"f5ef71cb-5e30-46e9-8140-ac4aaea9cfa5"]
}, Open  ]],

Cell[TextData[{
 "Explicit (not hidden) import of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["xPerm",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["xCore",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ": ",
 StyleBox["Alfonso: do we need xCoba ?",
  FontWeight->"Bold"]
}], "Text",ExpressionUUID->"57dfb127-2491-442f-8067-06402a33972f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<xAct`xTerior`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<xAct`xCoba`\>\"", ",", "\"\<xAct`xTensor`\>\"", ",", 
     "\"\<xAct`xPerm`\>\"", ",", "\"\<xAct`xCore`\>\""}], "}"}]}], 
  "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"228199c8-2940-42d3-87f8-0d8dd8dd9ce7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"99e66d7f-5a54-4aec-b8c9-b70b31d0abe5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  
  Editable->
   False]], "Print",ExpressionUUID->"fd47e884-cf18-4b96-ab88-5a945e0af1a6"],

Cell[BoxData["\<\"CopyRight (C) 2003-2018, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], \
"Print",ExpressionUUID->"976cda9d-fbd5-4f24-a69d-5d1b0180d033"],

Cell[BoxData["\<\"Connecting to external mac executable...\"\>"], \
"Print",ExpressionUUID->"6b6a2114-17ac-4d32-babd-fe01ec5c5689"],

Cell[BoxData["\<\"Connection established.\"\>"], \
"Print",ExpressionUUID->"219da0f1-b971-4d72-a0b6-74506e741081"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"2c7cc299-cfb4-41b0-9c2b-599b96350e43"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.1.3", ", ", {2018, 2, 28}],
  Editable->
   False]], "Print",ExpressionUUID->"25df4efc-2990-4144-bd4d-fa31ff7cb8ae"],

Cell[BoxData["\<\"CopyRight (C) 2002-2018, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], \
"Print",ExpressionUUID->"f1c5f2be-d543-4f3f-952d-008c4a93e79a"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"0bee0b22-4640-41a3-9fbb-53fc6c325f3f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xCoba`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.4\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2018", ",", "2", ",", "28"}], "}"}]}],
  SequenceForm["Package xAct`xCoba`  version ", "0.8.4", ", ", {2018, 2, 28}],
  
  Editable->
   False]], "Print",ExpressionUUID->"7ba2f517-528a-4b0a-9a5a-8a25b5212d07"],

Cell[BoxData["\<\"CopyRight (C) 2005-2018, David Yllanes and Jose M. \
Martin-Garcia, under the General Public License.\"\>"], \
"Print",ExpressionUUID->"875c5aa9-5ae2-4ad2-a00b-fc13a8177b87"]
}, Open  ]],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], \
"Output",ExpressionUUID->"d02b4971-aaee-4b3b-a7bf-cf0ed69033b6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Not", "@", 
    RowBox[{"OrderedQ", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"{", 
        RowBox[{
        "xAct`xTerior`$xTensorVersionExpected", ",", 
         "xAct`xTensor`$Version"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"General", "::", "versions"}], ",", "\"\<xTensor\>\"", ",", 
      "xAct`xTensor`$Version", ",", "xAct`xTerior`$xTensorVersionExpected"}], 
     "]"}]}]}], "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"06eeb845-65cc-4db3-8b9b-6e2abba8fbf9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "xAct`xCore`Private`bars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package xAct`xTerior`  version \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<, \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<Copyright (C) 2013-2019, Alfonso Garcia-Parrado Gomez-Lobo and Leo C. \
Stein, under the General Public License.\>\"", "]"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"cc3444ca-d4ae-42b1-8749-a5c25b79a0ca"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"c69c4d23-1a63-4602-bbb7-3965f249ed1b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.9.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2019", ",", "5", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTerior`  version ", "0.9.1", ", ", {2019, 5, 17}],
  Editable->
   False]], "Print",ExpressionUUID->"746632a3-1389-450a-beaf-18accbd8e58e"],

Cell[BoxData["\<\"Copyright (C) 2013-2019, Alfonso Garcia-Parrado Gomez-Lobo \
and Leo C. Stein, under the General Public License.\"\>"], \
"Print",ExpressionUUID->"099416ca-1c3d-4a13-bc15-be1128839455"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We specify the context xAct`xTerior` to avoid overriding the Disclaimer of \
the other packages. However we need to turn off the message General:shdw \
temporarily:\
\>", "Text",ExpressionUUID->"3311c729-c758-4da5-aec2-fd6c3a76e028"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`Disclaimer", "[", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<These are points 11 and 12 of the General Public \
License:\\n\\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO \
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT \
WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES \
PROVIDE THE PROGRAM `AS IS\.b4 WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED \
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO \
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM \
PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \
CORRECTION.\\n\\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO \
IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY \
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR \
DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES \
ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT \
LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED \
BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER \
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \
POSSIBILITY OF SUCH DAMAGES.\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"937fc9b6-9e28-46d4-a77f-00148726cf23"],

Cell[TextData[{
 "If ",
 StyleBox["xTerior",
  FontSlant->"Italic"],
 " is not being called from other package then write this GPL short \
disclaimer:"
}], "Text",ExpressionUUID->"8c6b0c0c-8531-4248-aeda-cdcc3b0b3442"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
   "xAct`xCore`Private`$LastPackage", "===", "\"\<xAct`xTerior`\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unset", "[", "xAct`xCore`Private`$LastPackage", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<These packages come with ABSOLUTELY NO WARRANTY; for details type \
Disclaimer[]. This is free software, and you are welcome to redistribute it \
under certain conditions. See the General Public License for details.\>\"", 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"542f7d5f-0667-41d3-8f58-9f07a1662b2b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"6e60f639-c33a-4b81-a9bb-fd19fdca60fc"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], \
"Print",ExpressionUUID->"842d3923-3378-4fd9-9585-21df1c1dc63e"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",ExpressionUUID->"d908caed-d854-4292-90c3-a5f89bdade93"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that symbols in the Global` context cannot be accessed right now.\
\>", "Text",ExpressionUUID->"973a3bf5-0d3f-4889-87e2-a7eab840d310"],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], \
"Input",ExpressionUUID->"4abbb7a8-6d36-4825-8dd8-e9d478f97141"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`xTerior`\"\>", ",", "\<\"xAct`xCoba`\"\>", 
   ",", "\<\"xAct`xTensor`\"\>", ",", "\<\"xAct`xPerm`\"\>", 
   ",", "\<\"xAct`xCore`\"\>", ",", "\<\"System`\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"dcf189a5-3844-40e5-8a35-1deecbcece78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], \
"Input",ExpressionUUID->"f033ba62-3935-4e0c-a4c2-ad0cd20a7df0"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], \
"Output",ExpressionUUID->"5bbd78a3-4c4d-4aa9-a602-9c41b66bec99"]
}, Open  ]],

Cell["Established connection to external executable?", \
"Text",ExpressionUUID->"b3b92326-1dce-4d90-b4ad-40d4d07e2e4a"],

Cell[CellGroupData[{

Cell[BoxData["$xpermQ"], \
"Input",ExpressionUUID->"a7da7d46-3634-4120-a781-e7fa69ca784c"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"50b2ea5f-c192-479e-a5ec-8e0f6cc69a64"]
}, Open  ]],

Cell[TextData[{
 "Private functions of ",
 StyleBox["xTensor",
  FontSlant->"Italic"],
 " used here :\n      ??"
}], "Text",ExpressionUUID->"f4d433dc-0f29-42c3-80af-f17e2fdeb347"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.4. Non-standard setup", \
"Subsubsection",ExpressionUUID->"b15ad128-fa3a-4fcb-9ce9-68156ee45aeb"],

Cell["Screen all dollar indices:", \
"Text",ExpressionUUID->"b8f415ce-4605-405f-9b08-26a94959d37d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PrePrint", "=", "ScreenDollarIndices"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"3db26783-010f-474e-9576-66e3e8868799"],

Cell["Switch off messages issued by ManifoldOfCovD acting on PD.", \
"Text",ExpressionUUID->"7b8d60bd-22a0-4e2e-9b1c-171117e7d163"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "PD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PD", "/:", 
  RowBox[{
   RowBox[{"ManifoldOfCovD", "@", "PD"}], "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "PD"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"245739e7-5162-4c7e-94a8-d7ae7e08a635"],

Cell["\<\
Timings will be shown if they are above 1 Second (Only for this notebook; \
this is not included in the package):\
\>", "Text",ExpressionUUID->"8c4ea1e1-2f98-491a-842b-ce1119a84fc2"],

Cell[BoxData[
 RowBox[{"<<", 
  "xAct/ShowTime1.m"}]], \
"Input",ExpressionUUID->"08b8b721-4c80-41d8-aa26-812e5a808ebb"],

Cell[CellGroupData[{

Cell[BoxData["$ShowTimeThreshold"], \
"Input",ExpressionUUID->"fa9025c0-5934-4e30-bf36-11af270a5d98"],

Cell[BoxData["1"], \
"Output",ExpressionUUID->"6e5c066d-8971-41ba-ac59-c6ad2316e426"]
}, Open  ]],

Cell[TextData[{
 "We also read the package (this is not automatic in ",
 StyleBox["xCore",
  FontSlant->"Italic"],
 " anymore since its version 0.6.2). This is not included in the package."
}], "Text",ExpressionUUID->"5080d00e-3045-4e55-b2af-adcbb52fbc37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", 
  "xAct/ExpressionManipulation.m"}]], \
"Input",ExpressionUUID->"b7b35ba5-3e0c-41e1-8299-43969925be7f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(ColorPositions\\)\[NoBreak] in \
\[NoBreak]\\!\\(Options[ColorPositions]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"c875521d-68e9-4f2d-b5fc-d07d027c0110"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(ColorPositions\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(ColorPositions[\\(\\(positionlist_, \\(\\(opts___ ? \
OptionQ\\)\\)\\)\\)]\\)\\)[expr_]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"cc981b9a-c39f-416b-bc5e-50edc1014e5b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(CompleteTheSquare\\)\[NoBreak] in \
\[NoBreak]\\!\\(CompleteTheSquare[\\(\\(expr_, \\(\\(var_ : x\\)\\)\\)\\)]\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"c1472d15-8ff5-4ba3-b4fe-e555346833bd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "wrsym"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(ErsekComplexity\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"SetDelayed::wrsym\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"189d94cb-6809-4a5b-83ed-06eef0f3a060"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "wrsym"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(ErsekComplexity\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"Set::wrsym\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"126c2a79-eb1b-42e7-b073-38b633dc3bd2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(EvaluateAt\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(EvaluateAt[\\(\\(\\(\\(posn : \\(\\(_Integer | \
\\(\\({__Integer}\\)\\)\\)\\)\\)\\), \\(\\(f_ : \
Identity\\)\\)\\)\\)]\\)\\)[expr_]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"630bcdb7-ba03-495e-857d-4d2e00129b8a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(SetDelayed :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", \
"MSG",ExpressionUUID->"709acb95-ba0f-46ef-b561-984f12ce566a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.5. Usage messages ", \
"Subsubsection",ExpressionUUID->"919b2b26-d135-45f3-ae86-cd57bf65ac21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Definition", " ", "and", " ", "undefinition", " ", "of", " ", "a", " ", 
    "differential", " ", "form", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "just", " ", "a", " ", "wrapper", " ", "for", " ", "DefTensor", " ", 
       "with", " ", "the", " ", "option", " ", "GradeOfTensor"}], "\[Rule]", 
      RowBox[{"{", "Wedge", "}"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DefDiffForm", "::", "usage"}], "=", 
     "\"\<DefDiffForm[form[inds], mani, Deg] defines a tensor valued \
differential form of degree deg on the manifold mani\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UndefDiffForm", "::", "usage"}], "=", 
     "\"\<UndefDiffForm[form] undefines the differential form form\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Grade", " ", "of", " ", "a", " ", "differential", " ", "form"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Deg", "::", "usage"}], "=", 
     "\"\<Deg[form] returns the grade of a differential form\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffFormQ", "::", "usage"}], "=", 
     "\"\<DiffFormQ is an option for LieToCovD which specifies whether the \
expression which is acted upon should be regarded as a differential form or \
not. This is an option added by xTerior and it is not present any other \
package using LieToCovD.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exterior", " ", "derivative", " ", "and", " ", "exterior", " ", 
     "covariant", " ", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "::", "usage"}], "=", 
     "\"\<Diff[form] computes the exterior derivative of form. \
Diff[form,covd] computes the exterior covariant derivative of form with \
respect to the covariant derivative covd.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPotential", "::", "usage"}], "=", 
     "\"\<FindPotential[form, point, chart] uses the Poincar\[EAcute] lemma \
to compute a potential for a closed form form (no checks are carried out to \
ensure that the form is actually closed). The form must be written in some \
explicit coordinates belonging to chart and the argument point is the point, \
assumed to be in the same coordinate chart as form, which defines a \
star-shaped region where the potential is differentiable. A change in the \
point will give in general a different potential\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Computation", " ", "of", " ", "the", " ", "exterior", " ", "covariant", 
     " ", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeExtD", "::", "usage"}], "=", 
     "\"\<ChangeExtD[expr,cd1,cd2] expresses the exterior covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the exterior covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Computation", " ", "of", " ", "the", " ", "generalized", " ", 
     RowBox[{"(", 
      RowBox[{"index", "-", "free"}], ")"}], " ", "covariant", " ", 
     "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeGenCovD", "::", "usage"}], "=", 
     "\"\<ChangeGenCovD[expr,cd1,cd2] expresses the generalized covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the generalized covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "dual"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "::", "usage"}], "=", 
     "\"\<Hodge[metric][expr] is the Hodge dual of expr defined with respect \
to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "::", "usage"}], "=", 
     "\"\<ExpandHodgeDual[expr,Coframe[mani],g] expands out all the Hodge \
duals of the exterior powers of Coframe[mani], defined with respect to the \
metric g. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded. The Coframe label can be replaced by dx if we are using \
the holonomic coframe.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Co", "-", "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "::", "usage"}], "=", 
     "\"\<Codiff[metric][form] is the co-differential of form computed with \
respect to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Expansion", " ", "of", " ", "the", " ", "co"}], "-", 
     "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CodiffToDiff", "::", "usage"}], "=", 
     "\"\<CodiffToDiff[expr] replaces all the instances of the \
co-differential in expr by their expansion in terms of the exterior \
derivative.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Interior", " ", "contraction"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Int", "::", "usage"}], "=", 
     "\"\<Int[v][form] is the interior contraction of form with the vector \
(rank 1-tensor) v\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lie", " ", "derivative", " ", "on", " ", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CartanD", "::", "usage"}], "=", 
     "\"\<CartanD[v][form] is the Cartan derivative of form with respect to \
the vector (rank 1-tensor) v. CartanD[v][form,covd] is the Cartan derivative \
with respect to the covariant derivative covd.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Cartan", " ", "formula", " ", "for", " ", "Lie", " ", "derivatives"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CartanDToDiff", "::", "usage"}], "=", 
     "\"\<CartanDToDiff[expr] replaces the Cartan derivative of all the \
differential forms in expr by their expansion obtained by means of the Cartan \
formula\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Put", " ", "derivations", " ", "into", " ", "canonical", " ", "order"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SortDerivations", "::", "usage"}], "=", 
     "\"\<SortDerivations[expr] brings expr into a new expression where all \
the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"$DerivationSortOrder", "::", "usage"}], "=", 
     "\"\<$DerivationSortOrder is a global variable which encodes the default \
ordering of the three derivatives Int, LieD and Diff. The default is \
{LieD,Int,Diff}\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Variational", " ", "derivative", " ", "on", " ", "forms"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarD", "::", "usage"}], "=", 
     "\"\<FormVarD[form,metric][expr] computes the variational derivative of \
expr, which must be a n-form with n the manifold dimension, with respect to \
form. In the computation, exterior derivatives are transformed into \
co-differentials taken with respect of metric.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Canonical", " ", "forms", " ", "on", " ", "the", " ", "frame", " ", 
     "bundle"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Coframe", "::", "usage"}], "=", 
     "\"\<Coframe[mani] is the set of canonical 1-forms defined in the frame \
bundle arising from the manifold mani\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dx", "::", "usage"}], "=", 
     "\"\<dx[mani] represents a holonomic co-frame in the manifold \
mani.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Holonomic", " ", "&"}], " ", "anholonomic", " ", "frames"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PDFrame", "::", "usage"}], "=", 
     "\"\<PDFrame[mani] represents a holonomic frame in the manifold \
mani.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eFrame", "::", "usage"}], "=", 
     "\"\<eFrame[mani] represents a frame in the manifold mani.\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Koszul", " ", "connection"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Koszul", "::", "usage"}], "=", 
     "\"\<Koszul is the head used to introduce the Koszul operator. The \
latter is constructed by appending this head to the xTensor symbol used to \
represent a covariant derivative\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandKoszul", "::", "usage"}], "=", 
     "\"\<ExpandKoszul[expr,cd1,cd2] expands Koszul derivations of frame or \
co-frame elements with respect to cd1 into Christoffel tensors relating the \
covariant derivatives cd1 and cd2\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandCovD", "::", "usage"}], "=", 
     "\"\<ExpandCovD[expr,cd,chart] expands all the generalized covariant \
derivatives of rank 1 tensors in terms of the Koszul derivatives with respect \
to elements of a holonomic frame associated to a coordinate chart\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "connection", " ", "1"}], "-", "form"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "::", "usage"}], "=", 
     "\"\<ConnectionForm[cd,vbundle] represents the connection 1-form \
associated to the covariant derivatives cd defined in the bundle vbundle. If \
vbundle is the tangent bundle of a differentiable manifold then \
ConnectionForm is automatically replaced by ChristoffelForm (see the on-line \
help of ChristoffelForm for further details).\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "curvature", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureForm", "::", "usage"}], "=", 
     "\"\<CurvatureForm[cd,vbundle] represents the curvature 2-form \
associated to the covariant derivative cd. If vbundle is the tangent bundle \
of a differentiable manifold then CurvatureForm is replaced by \
RiemannForm\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Connection", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChristoffelForm", "::", "usage"}], "=", 
     "\"\<ChristoffelForm[cd] is the connection 1-form associated to the \
covariant derivative cd which is a covariant derivative in the tangent bundle \
of a manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Curvature", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RiemannForm", "::", "usage"}], "=", 
     "\"\<RiemannForm[cd] is the curvature 2-form associated to the covariant \
derivative cd which is a covariant derivative in the frame bundle of a \
manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Transformation", " ", "of", " ", "the", " ", "connection", " ", "form", 
     " ", "to", " ", "the", " ", "connection", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionFormToTensor", "::", "usage"}], "=", 
     "\"\<ConnectionFormToTensor[expr,covd,frame] transforms all instances of \
the connection form into the (A)Christoffel tensor which relates the \
covariant derivative defining the connection form and covd. The variable \
frame can take the value of either Coframe or dx. If the (A)Christoffel \
tensor does not exist it is created automatically.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureFormToTensor", "::", "usage"}], "=", 
     "\"\<CurvatureFormToTensor[expr,frame] transforms all the instances of \
the curvature form into the related Riemann or FRiemann tensor, inserting the \
corresponding frame (either Coframe or dx).\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeCurvatureForm", "::", "usage"}], "=", 
     "\"\<ChangeCurvatureForm[curvature,cd1,cd2] writes the curvature 2-form \
curvature[cd1,vbundle] in terms of the curvature 2-form \
curvature[cd2,vbundle]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "torsion", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TorsionForm", "::", "usage"}], "=", 
     "\"\<TorsionForm[cd] represents the torsion 2-form arising from the \
covariant derivative cd (cd must be defined on the tangent bundle of a \
manifold)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cartan", " ", "structure", " ", "equations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "::", "usage"}], "=", 
     "\"\<UseCartan[expr,covd] expands all the instances of the Diff using \
the Cartan structure equations for the connection arising from covd. In this \
way it is possible to expand the exterior derivative of a co-frame, a torsion \
2-form and the curvature 2-form. If covd is the Levi-Civita connection of a \
metric, then the exterior derivatives of that metric and its volume element \
are expanded too. UseCartan[expr,PD] expands all instances of the exterior \
derivative in terms of partial derivatives defined in the list of manifolds \
returned by ManifoldsOf[expr]. It is possible to specify a custom list of \
manifolds as a third argument in the form \
UseCartan[expr,PD,{M1,M2,..}]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Zero", " ", "forms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroDegQ", "::", "usage"}], "=", 
     "\"\<ZeroDegQ[expr] returns True if the degree of expr is zero\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseDimensionStart", "::", "usage"}], "=", 
     "\"\<UseDimensionStart[] is an instruction that, when issued, makes any \
expression with degree greater than the manifold dimension equal to \
zero.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseDimensionStop", "::", "usage"}], "=", 
     "\"\<UseDimensionStop[] cancels the action of UseDimensionStart[]\>\""}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Integration", " ", "of", " ", "differential", " ", "forms", " ", "over", 
     " ", "manifolds", " ", "with", " ", "boundary"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormIntegrate", "::", "usage"}], "=", 
     "\"\<FormIntegrate[form, M] represents the integration of the given \
differential form, of degree n, over the n-dimensional manifold M with \
boundary.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseStokes", "::", "usage"}], "=", 
     "\"\<UseStokes[expr, M] converts subexpressions \
FormIntegrate[Diff[form], M] in expr into FormIntegrate[form, \
ManifoldBoundary[M]], reducing n-dimensional integration to \
(n-1)-integration. UseStokes[expr, form] converts subexpressions \
FormIntegrate[form, ManifoldBoundary[M]] in expr into \
FormIntegrate[Diff[form], M]. UseStokes[expr] performs UseStokes[expr, M] \
wherever possible in expr, to reduce dimensionality of integration.\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"b48d6361-be7b-41ad-9ab6-b26c88984166"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.6. Begin private", \
"Subsubsection",ExpressionUUID->"b29d0841-169b-46f1-a267-1d656dcebbc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"de32e594-bdba-44d6-97cf-be13e417112c"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], \
"Output",ExpressionUUID->"7b1dd60c-ad13-4e71-9c07-3ea294f1e5af"]
}, Open  ]],

Cell["There are ?? reserved words in version 0.9.1 :", \
"Text",ExpressionUUID->"df2186fd-0435-491d-958e-5516464639be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", 
  "]"}]], "Input",ExpressionUUID->"74948f9a-8820-4e31-a2eb-d4b1bb5b4fb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CartanD\"\>", ",", "\<\"CartanDToDiff\"\>", 
   ",", "\<\"ChangeCurvatureForm\"\>", ",", "\<\"ChangeExtD\"\>", 
   ",", "\<\"ChangeGenCovD\"\>", ",", "\<\"ChristoffelForm\"\>", 
   ",", "\<\"Codiff\"\>", ",", "\<\"CodiffToDiff\"\>", ",", "\<\"Coframe\"\>",
    ",", "\<\"ConnectionForm\"\>", ",", "\<\"ConnectionFormToTensor\"\>", 
   ",", "\<\"CurvatureForm\"\>", ",", "\<\"CurvatureFormToTensor\"\>", 
   ",", "\<\"DefDiffForm\"\>", ",", "\<\"Deg\"\>", ",", "\<\"Diff\"\>", 
   ",", "\<\"DiffFormQ\"\>", ",", "\<\"Disclaimer\"\>", ",", "\<\"dx\"\>", 
   ",", "\<\"eFrame\"\>", ",", "\<\"ExpandCovD\"\>", 
   ",", "\<\"ExpandHodgeDual\"\>", ",", "\<\"ExpandKoszul\"\>", 
   ",", "\<\"FindPotential\"\>", ",", "\<\"FormIntegrate\"\>", 
   ",", "\<\"FormVarD\"\>", ",", "\<\"Hodge\"\>", ",", "\<\"Int\"\>", 
   ",", "\<\"Koszul\"\>", ",", "\<\"PDFrame\"\>", ",", "\<\"RiemannForm\"\>", 
   ",", "\<\"SortDerivations\"\>", ",", "\<\"TorsionForm\"\>", 
   ",", "\<\"UndefDiffForm\"\>", ",", "\<\"UseCartan\"\>", 
   ",", "\<\"UseDimensionStart\"\>", ",", "\<\"UseDimensionStop\"\>", 
   ",", "\<\"UseStokes\"\>", ",", "\<\"ZeroDegQ\"\>", 
   ",", "\<\"$DerivationSortOrder\"\>", ",", "\<\"$Version\"\>", 
   ",", "\<\"$xTensorVersionExpected\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"418a6e27-8765-4a43-831b-58c8b291de78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", 
  "Length"}]], "Input",ExpressionUUID->"2dec9c48-6660-48a9-9e7e-53e6c394ed72"],

Cell[BoxData["42"], \
"Output",ExpressionUUID->"5e0c2f89-4a54-4ac7-a5d5-a3f84418643d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 InitializationCell->
  True,ExpressionUUID->"7b180ca1-2384-4658-9c1b-67b55d4d2427"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`xTerior`\"\>", ",", "\<\"xAct`xCoba`\"\>", 
   ",", "\<\"xAct`xTensor`\"\>", ",", "\<\"xAct`xPerm`\"\>", 
   ",", "\<\"xAct`xCore`\"\>", ",", "\<\"System`\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"e82ed2aa-9964-4a25-9b1b-66db95705ba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], \
"Input",ExpressionUUID->"0e768e27-e227-4de3-8bc5-5f97d43fe7f6"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], \
"Output",ExpressionUUID->"92d2e800-bb08-4ccf-954c-7f5b91e7dc31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%"], \
"Input",ExpressionUUID->"34ee9e26-3ad3-40f5-bf1f-c88dd373510b"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], \
"Output",ExpressionUUID->"a1022b9f-7e83-47ce-aa44-aa6f25d58975"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Basic structures", "Subsection",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"e5837f10-ad8e-4ceb-aed0-d67a7f172d91"],

Cell[CellGroupData[{

Cell["2.1 Definition of the wedge product", \
"Subsubsection",ExpressionUUID->"8c7f9f3c-5af4-4042-8fa7-993dca06e3cc"],

Cell["\<\
The wedge product is an associative, anticommutative (actually \
supercommutative) graded product with identity 1. The scalars are those \
objects of grade 0, including the identity 1, so that the scalars are \
actually in this case true elements of the algebra. The product by scalar and \
the product of scalars are both Times, so we do not need to specify them.\
\>", "Text",ExpressionUUID->"eac5ba8a-2dfe-460c-832c-5da52db8bbba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefProduct", "[", 
   RowBox[{"Wedge", ",", "\[IndentingNewLine]", 
    RowBox[{"AssociativeProductQ", "\[Rule]", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"CommutativityOfProduct", "\[Rule]", "\"\<SuperCommutative\>\""}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"GradedProductQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"IdentityElementOfProduct", "\[Rule]", "1"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ScalarsOfProduct", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"Grade", "[", 
          RowBox[{"#", ",", "Wedge"}], "]"}], ",", "0"}], "]"}], "&"}], 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"086cdf61-da7d-44a8-9981-3215e1b8b480"],

Cell["Relation between Wedge and Times.", \
"Text",ExpressionUUID->"05cd07e8-4383-49bb-a3fb-42d15346d8e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Wedge", "/:", 
   RowBox[{"GradeOfProduct", "[", 
    RowBox[{"Times", ",", "Wedge"}], "]"}], "=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"b2b74a8c-9a5e-4286-a290-6794a56e0697"],

Cell[TextData[{
 "When working with the exterior algebra the grade is typically called ",
 StyleBox["degree",
  FontSlant->"Italic"],
 ":"
}], "Text",ExpressionUUID->"3693b26f-b3eb-40e0-9e6f-ba9e59589b4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Deg", "[", "expr_", "]"}], ":=", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"4304f356-9e3b-4976-a518-f88917329394"],

Cell["Scalars have zero degree:", \
"Text",ExpressionUUID->"7262eff2-a08d-4809-8df7-43e90a6a3979"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Deg", "[", "2", 
  "]"}]], "Input",ExpressionUUID->"90317186-3064-4e4e-a34b-47bc58c94118"],

Cell[BoxData["0"], \
"Output",ExpressionUUID->"81e3856a-4675-4f76-b10c-d35bd915550b"]
}, Open  ]],

Cell["\<\
A product of scalars is automatically converted into a scalar:\
\>", "Text",ExpressionUUID->"605e54e5-4d4f-43d7-b2a6-ee97010ffd66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Wedge]", "2", "\[Wedge]", 
  "3"}]], "Input",ExpressionUUID->"5ed2e129-96f1-431e-81b4-22d1d217d994"],

Cell[BoxData["6"], \
"Output",ExpressionUUID->"c80cee69-a476-4471-9915-17995462eb54"]
}, Open  ]],

Cell["\<\
The wedge product is eliminated when found with only one argument:\
\>", "Text",ExpressionUUID->"98a9d272-45a7-4e27-a909-c0abcf637b9a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wedge", "[", "a", "]"}], "//", 
  "FullForm"}]], \
"Input",ExpressionUUID->"581a6745-a2c2-46b8-8b64-0c87bde5979e"],

Cell[BoxData[
 TagBox[
  StyleBox["a",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], \
"Output",ExpressionUUID->"708c599a-be33-4a9c-9e20-09aa539db3c9"]
}, Open  ]],

Cell["Note that parentheses are needed sometimes. Compare", \
"Text",ExpressionUUID->"4084f6e8-5355-49d1-86df-6565fd2c20e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "\[Wedge]", "3"}], ")"}], "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", "b"}], ")"}]}], "]"}]}], 
  "}"}]], "Input",ExpressionUUID->"aa6f9ab4-3ad2-46d7-b39a-fd68e3c806b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"a", "\[Wedge]", "3"}], " ", "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", " ", "b"}], ")"}]}], "]"}]}], 
  "}"}]], "Output",ExpressionUUID->"685c05e6-48a6-4f7a-a169-f540de73605d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", 
  "FullForm"}]], \
"Input",ExpressionUUID->"c5494854-8221-4a3a-83f4-021a20f51769"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Hold", "[", 
      RowBox[{"Times", "[", 
       RowBox[{
        RowBox[{"Wedge", "[", 
         RowBox[{"a", ",", "3"}], "]"}], ",", "b"}], "]"}], "]"}], ",", 
     RowBox[{"Hold", "[", 
      RowBox[{"Wedge", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"3", ",", "b"}], "]"}]}], "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], \
"Output",ExpressionUUID->"d1535f51-2af6-492c-a441-de4e8307afda"]
}, Open  ]],

Cell["Behavior of the wedge product with respect to Dagger", \
"Text",ExpressionUUID->"3159fa21-d861-467d-9e86-3afbce423896"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "Dagger"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "@", "expr_Wedge"}], ":=", 
   RowBox[{"Dagger", "/@", "expr"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "@", "Dagger"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ce110a62-bda8-488e-a6fd-97908a3afd3d"],

Cell["\<\
Behavior of the wedge product with respect to CTensor (perhaps this should be \
in xCoba). \
\>", "Text",ExpressionUUID->"23b0434e-47a4-4739-ad03-8f2c5c1f6a85"],

Cell["\<\
Vanishing of forms whose degree is higher than the manifold(s) dimension.\
\>", "Text",ExpressionUUID->"246af8f9-a8e4-4990-86f8-e9d1f6b1f202"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Code", " ", "added", " ", "by", " ", "Jos\[EAcute]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$UseDimensionsQ", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{
    RowBox[{"$DimensionsZeroForms", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetZeroForm", "[", "form_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GradeOfTensor", "[", 
         RowBox[{"form", ",", "Wedge"}], "]"}], ">", 
        RowBox[{"Plus", "@@", 
         RowBox[{"(", 
          RowBox[{"DimOfManifold", "/@", 
           RowBox[{"DependenciesOfTensor", "[", "form", "]"}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"form", "[", "___", "]"}], "=", "0"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"$DimensionsZeroForms", ",", "form"}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnsetZeroForm", "[", "form_", "]"}], ":=", 
     RowBox[{"Unset", "[", 
      RowBox[{"form", "[", "___", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"UseDimensionStart", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"$UseDimensionsQ", ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"$UseDimensionsQ", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Forms", " ", "whose", " ", "degree", " ", "is", " ", "greater", " ", 
         "than", " ", "the", " ", "dimension"}], "*)"}], 
       RowBox[{"SetZeroForm", "/@", "$Tensors"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Expressions", " ", "which", " ", "are", " ", "wedge", " ", 
         "products"}], "*)"}], 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Wedge", "[", "expr__", "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Plus", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Grade", "[", 
                RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
              RowBox[{"{", "expr", "}"}]}], ")"}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", 
               RowBox[{"Union", "@", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"DependenciesOf", "/@", 
                  RowBox[{"{", "expr", "}"}]}], "]"}]}]}], ")"}]}], ")"}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Expressions", " ", "which", " ", "are", " ", "exterior", " ", 
         "derivatives"}], "*)"}], 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "PD"}], "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Grade", "[", 
                 RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
               RowBox[{"{", "expr", "}"}]}], ")"}]}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", 
               RowBox[{"DependenciesOf", "[", "expr", "]"}]}], ")"}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "covd_"}], "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Grade", "[", 
                 RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
               RowBox[{"{", "expr", "}"}]}], ")"}]}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", 
               RowBox[{"DependenciesOf", "[", "expr", "]"}]}], ")"}]}], 
            ")"}]}], ")"}]}]}], ";"}]}], "]"}]}], "\n", "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseDimensionStop", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "$UseDimensionsQ"}], ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"$UseDimensionsQ", "=", "False"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"UnsetZeroForm", "/@", 
        RowBox[{"Union", "@", "$DimensionsZeroForms"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Wedge", "[", "expr__", "]"}]}], "=."}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "PD"}], "]"}]}], "=."}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "covd_"}], "]"}]}], "=."}], ";"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "xTensions", " ", "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{"\"\<xTerior`\>\"", ",", "DefTensor", ",", "\"\<End\>\""}], 
      "]"}], ":=", "DefTensorUseDimensions"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DefTensorUseDimensions", "[", 
      RowBox[{
       RowBox[{"tensor_", "[", "inds___", "]"}], ",", "__"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"$UseDimensionsQ", ",", 
       RowBox[{"SetZeroForm", "[", "tensor", "]"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{
      "\"\<xTerior`\>\"", ",", "UndefTensor", ",", "\"\<Beginning\>\""}], 
      "]"}], ":=", "UndefTensorUseDimensions"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UndefTensorUseDimensions", "[", "tensor_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"$UseDimensionsQ", ",", 
       RowBox[{"UnsetZeroForm", "[", "tensor", "]"}]}], "]"}]}], ";"}], 
   "\n"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"0dbda396-8724-4470-9db0-4c7624af24b0"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.2 Integration of CTensor in Wedge", \
"Subsubsection",ExpressionUUID->"51f99049-e5f7-4039-964a-2974df37d612"],

Cell["\<\
In this section we implement the Wedge product of CTensor objects. This code \
has been supplied by Jos\[EAcute] Mart\[IAcute]n-Garc\[IAcute]a.\
\>", "Text",ExpressionUUID->"d22fb6dc-24ca-40dc-9f1f-fbb557862dab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Grade", " ", "of", " ", "a", " ", "CTensor", " ", "with", " ", "respect", 
    " ", "to", " ", "Wedge"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CTensor", "/:", 
    RowBox[{"Grade", "[", 
     RowBox[{"expr_CTensor", ",", "Wedge"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"list", ",", "grades", ",", 
        RowBox[{"comps", "=", 
         RowBox[{"First", "@", "expr"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "comps", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"grades", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", "list"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"Tally", "[", "grades", "]"}]}], "\[Equal]", "1"}], ",", 
         RowBox[{"grades", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"235b58e8-4361-4f04-800d-e80a13cf5703"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Contracted", " ", "wedge", " ", "product", " ", "of", " ", "CTensor", " ",
     "objects"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"ctensor1_CTensor", "[", 
        RowBox[{"left1___", ",", "a_", ",", "right1___"}], "]"}], ",", 
       RowBox[{"ctensor2_CTensor", "[", 
        RowBox[{"left2___", ",", 
         RowBox[{"-", "a_"}], ",", "right2___"}], "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left1", ",", "a"}], "}"}], "]"}]}], ",", 
         RowBox[{"n2", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left2", ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}]}], ",", "res"}], "}"}], ",", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"xAct`xCoba`Private`CTensorContract", "[", 
          RowBox[{"ctensor1", ",", "ctensor2", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2"}], "}"}], ",", "Wedge"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"left1", ",", "right1", ",", "left2", ",", "right2"}], 
          "]"}], "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"res", ",", "$Failed"}], "]"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"ctensor1_CTensor", "[", 
        RowBox[{"left1___", ",", 
         RowBox[{"-", "a_"}], ",", "right1___"}], "]"}], ",", 
       RowBox[{"ctensor2_CTensor", "[", 
        RowBox[{"left2___", ",", "a_", ",", "right2___"}], "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left1", ",", "a"}], "}"}], "]"}]}], ",", 
         RowBox[{"n2", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left2", ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}]}], ",", "res"}], "}"}], ",", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"xAct`xCoba`Private`CTensorContract", "[", 
          RowBox[{"ctensor1", ",", "ctensor2", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2"}], "}"}], ",", "Wedge"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"left1", ",", "right1", ",", "left2", ",", "right2"}], 
          "]"}], "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"res", ",", "$Failed"}], "]"}]}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"2ba09d49-a359-4dcc-8622-acecdde9bf10"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Wedge", " ", "product", " ", "of", " ", 
   RowBox[{"(", 
    RowBox[{"Frame", " ", "or", " ", "Coframe"}], ")"}], " ", "General", " ", 
   "CTensor", " ", "objects"}], "  ", 
  "*)"}]], "Input",ExpressionUUID->"cc604378-8062-4b7b-bb7c-9f32a8bf3417"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"signatureOrZero", "[", "indices_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DuplicateFreeQ", "[", "indices", "]"}], ",", 
       RowBox[{"Signature", "[", 
        RowBox[{"Ordering", "[", "indices", "]"}], "]"}], ",", "0"}], "]"}]}],
     ";"}], "*)"}], "\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"simplifyBasisWedge", "[", "expr_", "]"}], ":=", 
     RowBox[{"expr", "/.", 
      RowBox[{"wed_Wedge", "\[RuleDelayed]", 
       RowBox[{"simplifyBasisWedge1", "[", "wed", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"simplifyBasisWedge1", "[", 
       RowBox[{"HoldPattern", "[", 
        RowBox[{"Wedge", "[", 
         RowBox[{"factors", ":", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"head", ":", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"xAct`xTerior`Coframe", "|", "xAct`xTerior`dx"}], 
                  ")"}], "[", "_", "]"}], ")"}]}], ")"}], "[", "_", "]"}], 
            ".."}], ")"}]}], "]"}], "]"}], "]"}], ":=", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"indices", "=", 
          RowBox[{"First", "/@", 
           RowBox[{"{", "factors", "}"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"signatureOrZero", "[", "indices", "]"}], " ", 
         RowBox[{"Wedge", "@@", 
          RowBox[{"(", 
           RowBox[{"head", "/@", 
            RowBox[{"Sort", "[", "indices", "]"}]}], ")"}]}]}]}], "]"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"simplifyBasisWedge1", "[", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"expr", ":", 
        RowBox[{"Wedge", "[", 
         RowBox[{"factors", ":", 
          RowBox[{
           RowBox[{"Blank", "[", "]"}], " ", ".."}]}], "]"}]}], "]"}], "]"}], 
     ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indices", "=", 
         RowBox[{"FindFreeIndices", "[", "expr", "]"}]}], "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"indices", "===", 
          RowBox[{"IndexList", "[", "]"}]}], ",", "expr", ",", "$Failed"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Wedge", " ", "product", " ", "of", " ", "general", " ", "CTensor", " ", 
     "objects"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensorWedge", "[", "]"}], ":=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensorWedge", "[", "ctensors__CTensor", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"CTensor", "[", 
        RowBox[{
         RowBox[{"simplifyBasisWedge", "[", 
          RowBox[{
           RowBox[{"xAct`xCoba`Private`tensorproduct", "[", "Wedge", "]"}], "@@",
            "#1"}], "]"}], ",", 
         RowBox[{"Join", "@@", "#2"}], ",", 
         RowBox[{"Plus", "@@", "#3"}]}], "]"}], "&"}], "@@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"List", "@@@", 
        RowBox[{"{", "ctensors", "}"}]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensorWedge", "[", 
      RowBox[{"___", ",", "Zero", ",", "___"}], "]"}], ":=", "Zero"}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{"ctensor1_CTensor", "[", "inds1___", "]"}], ",", 
      RowBox[{"ctensor2_CTensor", "[", "inds2___", "]"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"CTensorWedge", "[", 
       RowBox[{"ctensor1", ",", "ctensor2"}], "]"}], "[", 
      RowBox[{"inds1", ",", "inds2"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"xAct`xTensor`Private`TakePairs", "[", 
       RowBox[{"{", 
        RowBox[{"inds1", ",", "inds2"}], "}"}], "]"}], "===", 
      RowBox[{"{", "}"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Wedge", "[", 
     RowBox[{"ctensor1_CTensor", ",", "ctensor2_CTensor"}], "]"}], ":=", 
    RowBox[{"CTensorWedge", "[", 
     RowBox[{"ctensor1", ",", "ctensor2"}], "]"}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"39378778-6273-46c1-88c9-ebb2dfbb0c97"],

Cell["\<\
Wedge product of frame and co-frame with CTensor objects. We first have a \
definition for Coframe with c - indices, avoiding the use of ToCTensor :\
\>", "Text",ExpressionUUID->"68388ae8-7ba0-4e61-b613-cec839067902"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{"basis", ":", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}], "[", 
       RowBox[{"_", "?", "CIndexQ"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"CTensor", "[", 
       RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
      "b__", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CTensor", "[", 
     RowBox[{
      RowBox[{"Wedge", "[", 
       RowBox[{"basis", ",", "array"}], "]"}], ",", "bases", ",", 
      "addweight"}], "]"}], "[", "b", "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
     "b__", "]"}], ",", 
    RowBox[{"basis", ":", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}], "[", 
      RowBox[{"_", "?", "CIndexQ"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"CTensor", "[", 
    RowBox[{
     RowBox[{"Wedge", "[", 
      RowBox[{"array", ",", "basis"}], "]"}], ",", "bases", ",", 
     "addweight"}], "]"}], "[", "b", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"409d4832-8c9d-4f57-bca2-5457d246dee1"],

Cell["\<\
Then we have another definition for the general case of Wedge, in which the \
Coframes inside the CTensor uniquely identify the frame to use in ToCTensor :\
\
\>", "Text",ExpressionUUID->"7f6be893-a002-41a2-92bb-33d56e232d8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormBases", "[", 
    RowBox[{"CTensor", "[", 
     RowBox[{"array_", ",", "__"}], "]"}], "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"xAct`xPerm`Private`nosign", "/@", 
     RowBox[{"Cases", "[", 
      RowBox[{"array", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}], "[", 
         RowBox[{"{", 
          RowBox[{"_", ",", "frame_"}], "}"}], "]"}], "\[RuleDelayed]", 
        "frame"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"basis", ":", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}]}], ")"}], 
      "[", "ind_", "]"}], ",", 
     RowBox[{"ctensor_CTensor", "[", "inds___", "]"}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"frames", "=", 
       RowBox[{"FormBases", "[", "ctensor", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Wedge", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToCTensor", "[", 
          RowBox[{"basis", ",", "frames"}], "]"}], "[", "ind", "]"}], ",", 
        RowBox[{"ctensor", "[", "inds", "]"}]}], "]"}], "/;", 
      RowBox[{
       RowBox[{"Length", "[", "frames", "]"}], "===", "1"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{"ctensor_CTensor", "[", "inds___", "]"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"basis", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}]}], ")"}], "[",
      "ind_", "]"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"frames", "=", 
      RowBox[{"FormBases", "[", "ctensor", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"ctensor", "[", "inds", "]"}], ",", 
       RowBox[{
        RowBox[{"ToCTensor", "[", 
         RowBox[{"basis", ",", "frames"}], "]"}], "[", "ind", "]"}]}], "]"}], 
     "/;", 
     RowBox[{
      RowBox[{"Length", "[", "frames", "]"}], "===", "1"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"daacb00c-e85c-41d1-8eae-eb9a52e3694c"],

Cell["\<\
Finally we need another definition for the case in which the CTensor is a 0 - \
form :\
\>", "Text",ExpressionUUID->"94cc86ca-7bf9-4904-9c70-d88c877ef47f"],

Cell[BoxData[
 RowBox[{"CTensor", "/:", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"basis", ":", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}]}], ")"}], "[", 
    "a_", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"ctensor", ":", 
     RowBox[{
      RowBox[{"CTensor", "[", 
       RowBox[{"_", ",", "bases_List", ",", "_"}], "]"}], "[", 
      RowBox[{"l___", ",", 
       RowBox[{"-", "a_"}], ",", "___"}], "]"}]}], ")"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"ToCTensor", "[", 
     RowBox[{"basis", ",", 
      RowBox[{"{", 
       RowBox[{"-", 
        RowBox[{"bases", "[", 
         RowBox[{"[", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}], "]"}], "]"}]}], "}"}]}], 
     "]"}], "[", "a", "]"}], " ", "ctensor"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"175f89b4-7624-4024-89e6-04d7aa8218bc"],

Cell[BoxData[
 RowBox[{"CTensor", "/:", 
  RowBox[{"HoldPattern", "[", 
   RowBox[{
    RowBox[{"Wedge", "[", 
     RowBox[{"lw___", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"basis", ":", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Coframe", "|", "dx"}], ")"}], "[", "_", "]"}]}], ")"}], 
       "[", "a_", "]"}], " ", ",", "rw___"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"ctensor", ":", 
      RowBox[{
       RowBox[{"CTensor", "[", 
        RowBox[{"_", ",", "bases_List", ",", "_"}], "]"}], "[", 
       RowBox[{"l___", ",", 
        RowBox[{"-", "a_"}], ",", "___"}], "]"}]}], ")"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Wedge", "[", 
    RowBox[{"lw", ",", 
     RowBox[{
      RowBox[{"ToCTensor", "[", 
       RowBox[{"basis", ",", 
        RowBox[{"{", 
         RowBox[{"-", 
          RowBox[{"bases", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", 
             RowBox[{"{", 
              RowBox[{"l", ",", 
               RowBox[{"-", "a"}]}], "}"}], "]"}], "]"}], "]"}]}], "}"}]}], 
       "]"}], "[", "a", "]"}], ",", "rw"}], "]"}], " ", 
   "ctensor"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"9ae59404-27db-41f3-b2da-75386d02f731"],

Cell["Wedge product of index free quantities with CTensor objects:", \
"Text",ExpressionUUID->"2327971e-53e0-4acd-a91c-b76750e34617"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Wedge", "[", 
    RowBox[{"ten_", ",", 
     RowBox[{
      RowBox[{"CTensor", "[", 
       RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
      "b__", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{
       RowBox[{"Wedge", "[", 
        RowBox[{"ten", ",", "array"}], "]"}], ",", "bases", ",", 
       "addweight"}], "]"}], "[", "b", "]"}], "/;", 
    RowBox[{
     RowBox[{"FindFreeIndices", "@", "ten"}], "===", 
     RowBox[{"IndexList", "[", "]"}]}]}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
     "b__", "]"}], ",", "ten_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"CTensor", "[", 
     RowBox[{
      RowBox[{"Wedge", "[", 
       RowBox[{"array", ",", "ten"}], "]"}], ",", "bases", ",", "addweight"}],
      "]"}], "[", "b", "]"}], "/;", 
   RowBox[{
    RowBox[{"FindFreeIndices", "@", "ten"}], "===", 
    RowBox[{"IndexList", "[", "]"}]}]}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"f72595c7-1e6a-4e77-a111-5b6092ff520d"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.3 Definition of the CircleTimes product", \
"Subsubsection",ExpressionUUID->"8c71f0af-47c2-4ad8-a06a-8d6f4e4dde68"],

Cell["By default we define the CircleTimes \[OpenCurlyDoubleQuote]\
\[CircleTimes]\[CloseCurlyDoubleQuote] product.", \
"Text",ExpressionUUID->"289ee2bd-9b87-4766-99d5-f3bfddf27b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$DefInfoQ", "=", "False"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"55a7bf68-7a44-45fe-8437-508f21268d90"],

Cell[BoxData[
 RowBox[{"DefProduct", "[", 
  RowBox[{"CircleTimes", ",", "\[IndentingNewLine]", 
   RowBox[{"AssociativeProductQ", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"IdentityElementOfProduct", "\[Rule]", "1"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GradedProductQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ScalarsOfProduct", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"#", ",", "CircleTimes"}], "]"}], ",", "0"}], "]"}], "&"}], 
     ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PrintAs", "\[Rule]", "\"\<\[CircleTimes]\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"3197a4a0-d6ab-4ac7-a830-b986e319ebb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$DefInfoQ", "=", "True"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"aacb6e82-ffa9-4d38-92ab-9a9a3b62e080"],

Cell["Grade of CircleTimes with respect to Times", \
"Text",ExpressionUUID->"5644cd21-3c3f-4c71-836f-2aa9e4a55f5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"GradeOfProduct", "[", 
    RowBox[{"Times", ",", "CircleTimes"}], "]"}], "=", "0"}], ";"}]], "Input",
 
 InitializationCell->
  True,ExpressionUUID->"08aa7271-feeb-4416-a35a-7c711e951fb5"],

Cell["\<\
Exterior algebra grade and tensor grade should coincide on elementary objects:\
\>", "Text",ExpressionUUID->"c34444cc-28be-424f-b7e1-8e3b2aeff4e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{"head_", ",", "CircleTimes"}], "]"}], ":=", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{"head", ",", "Wedge"}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"5991debf-6c72-4819-b18c-77369721f5d3"],

Cell["\<\
We also need to specify the Grade of the inert - head expressions :\
\>", "Text",ExpressionUUID->"5697d332-8d55-4769-b60a-9f24d48eeb11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"Grade", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"expr_", ",", "_"}], "]"}], ",", "CircleTimes"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"expr", ",", "CircleTimes"}], "]"}], "+", "1"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"fe88d6af-09c9-45d9-a03e-358238be8aad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"Grade", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Hodge", "[", "metricg_", "]"}], "[", "expr_", "]"}], ",", 
     "CircleTimes"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"DimOfVBundle", "[", 
     RowBox[{"VBundleOfMetric", "[", "metricg", "]"}], "]"}], "-", 
    RowBox[{"Grade", "[", 
     RowBox[{"expr", ",", "CircleTimes"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"920eb460-af80-463a-9a59-2b9590d9a486"],

Cell["Behavior with respect to Dagger", \
"Text",ExpressionUUID->"5caa7cc6-04c0-4907-90d2-d33d132fd723"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "Dagger"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "@", "expr_CircleTimes"}], ":=", 
   RowBox[{"Dagger", "/@", "expr"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "@", "Dagger"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"43177fec-c530-418f-9367-702b52769f3d"],

Cell["\<\
The CircleTimes - grade of a form coincides with the Wedge - grade of that \
form. However, the Wedge - grade is not well defined for generic expressions \
having positive CircleTimes - grade unless they are forms.That is why we have \
given CircleTimes - grade in terms of Wedge - grade and not viceversa.There \
is no general way in which we can know the relations between the grades of a \
given expression in several products.The user must define carefully the \
relations. Usually it is safer to declare independently the grades in each \
product. Recall that objects for which a grade has not been given are taken \
to have degree 0.\
\>", "Text",ExpressionUUID->"82d16c8e-298e-421a-8d56-3be0f900e62c"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.4 Integration of CTensor in CircleTimes", \
"Subsubsection",ExpressionUUID->"dc8fdc0c-f826-48e6-9070-b9ce96df2834"],

Cell["\<\
In this section we implement the CircleTimes product of CTensor objects. This \
code has been supplied by Jos\[EAcute] Mart\[IAcute]n-Garc\[IAcute]a.\
\>", "Text",ExpressionUUID->"85f80734-7599-4610-9932-18bd8d9471e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Grade", " ", "of", " ", "a", " ", "CTensor", " ", "with", " ", "respect", 
    " ", "to", " ", "CircleTimes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CTensor", "/:", 
    RowBox[{"Grade", "[", 
     RowBox[{"expr_CTensor", ",", "CircleTimes"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"list", ",", "grades", ",", 
        RowBox[{"comps", "=", 
         RowBox[{"First", "@", "expr"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"list", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", "comps", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"grades", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"#", ",", "CircleTimes"}], "]"}], "&"}], "/@", "list"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"Tally", "[", "grades", "]"}]}], "\[Equal]", "1"}], ",", 
         RowBox[{"grades", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "$Failed"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"012c56cf-1830-4047-b64a-a097f31abcdc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Algebra", " ", "with", " ", "unit", " ", "element"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xAct`xCoba`Private`tensorproduct", "[", "CircleTimes", "]"}], 
     "[", "]"}], "=", "1"}], ";"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"84cc51a6-7d10-43c9-988b-765641f49079"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Contracted", " ", "CircleTimes", " ", "product", " ", "of", " ", 
    "CTensor", " ", "objects"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", 
      RowBox[{
       RowBox[{"ctensor1_CTensor", "[", 
        RowBox[{"left1___", ",", "a_", ",", "right1___"}], "]"}], ",", 
       RowBox[{"ctensor2_CTensor", "[", 
        RowBox[{"left2___", ",", 
         RowBox[{"-", "a_"}], ",", "right2___"}], "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left1", ",", "a"}], "}"}], "]"}]}], ",", 
         RowBox[{"n2", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left2", ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}]}], ",", "res"}], "}"}], ",", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"xAct`xCoba`Private`CTensorContract", "[", 
          RowBox[{"ctensor1", ",", "ctensor2", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2"}], "}"}], ",", "CircleTimes"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"left1", ",", "right1", ",", "left2", ",", "right2"}], 
          "]"}], "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"res", ",", "$Failed"}], "]"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CircleTimes", "[", 
      RowBox[{
       RowBox[{"ctensor1_CTensor", "[", 
        RowBox[{"left1___", ",", 
         RowBox[{"-", "a_"}], ",", "right1___"}], "]"}], ",", 
       RowBox[{"ctensor2_CTensor", "[", 
        RowBox[{"left2___", ",", "a_", ",", "right2___"}], "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left1", ",", "a"}], "}"}], "]"}]}], ",", 
         RowBox[{"n2", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"left2", ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}]}], ",", "res"}], "}"}], ",", 
       RowBox[{
        RowBox[{"res", "=", 
         RowBox[{"xAct`xCoba`Private`CTensorContract", "[", 
          RowBox[{"ctensor1", ",", "ctensor2", ",", 
           RowBox[{"{", 
            RowBox[{"n1", ",", "n2"}], "}"}], ",", "CircleTimes"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"left1", ",", "right1", ",", "left2", ",", "right2"}], 
          "]"}], "/;", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"res", ",", "$Failed"}], "]"}]}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"7ed0b68b-e4d4-4295-9a04-0c64a8f1533c"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "CircleTimes", " ", "product", " ", "of", " ", "General", " ", "CTensor", 
   " ", "objects"}], "  ", 
  "*)"}]], "Input",ExpressionUUID->"276f9db8-973c-4838-924b-d60319497e45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simplifyBasisCircleTimes", "[", "expr_", "]"}], ":=", 
    RowBox[{"expr", "/.", 
     RowBox[{"wed_CircleTimes", "\[RuleDelayed]", 
      RowBox[{"simplifyBasisCircleTimes1", "[", "wed", "]"}]}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simplifyBasisCircleTimes1", "[", 
     RowBox[{"HoldPattern", "[", 
      RowBox[{"expr", ":", 
       RowBox[{"CircleTimes", "[", 
        RowBox[{"factors", ":", 
         RowBox[{
          RowBox[{"Blank", "[", "]"}], " ", ".."}]}], "]"}]}], "]"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"indices", "=", 
        RowBox[{"FindFreeIndices", "[", "expr", "]"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"indices", "===", 
         RowBox[{"IndexList", "[", "]"}]}], ",", "expr", ",", "$Failed"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
   "CircelTimes", " ", "product", " ", "of", " ", "general", " ", "CTensor", 
    " ", "objects"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CTensorCircleTimes", "[", "]"}], ":=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CTensorCircleTimes", "[", "ctensors__CTensor", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{
       RowBox[{"simplifyBasisCircleTimes", "[", 
        RowBox[{
         RowBox[{
         "xAct`xCoba`Private`tensorproduct", "[", "CircleTimes", "]"}], "@@", 
         "#1"}], "]"}], ",", 
       RowBox[{"Join", "@@", "#2"}], ",", 
       RowBox[{"Plus", "@@", "#3"}]}], "]"}], "&"}], "@@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"List", "@@@", 
      RowBox[{"{", "ctensors", "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CTensorCircleTimes", "[", 
     RowBox[{"___", ",", "Zero", ",", "___"}], "]"}], ":=", "Zero"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "[", 
    RowBox[{
     RowBox[{"ctensor1_CTensor", "[", "inds1___", "]"}], ",", 
     RowBox[{"ctensor2_CTensor", "[", "inds2___", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensorCircleTimes", "[", 
      RowBox[{"ctensor1", ",", "ctensor2"}], "]"}], "[", 
     RowBox[{"inds1", ",", "inds2"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"xAct`xTensor`Private`TakePairs", "[", 
      RowBox[{"{", 
       RowBox[{"inds1", ",", "inds2"}], "}"}], "]"}], "===", 
     RowBox[{"{", "}"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircleTimes", "[", 
   RowBox[{"ctensor1_CTensor", ",", "ctensor2_CTensor"}], "]"}], ":=", 
  RowBox[{"CTensorCircleTimes", "[", 
   RowBox[{"ctensor1", ",", "ctensor2"}], "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"83fe63f7-2de5-4276-a7a0-2790e8a640c8"],

Cell["\<\
CircleTimes product of index free quantities with CTensor objects:\
\>", "Text",ExpressionUUID->"e58d5a69-b0a9-4570-988e-0399071a469a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "[", 
    RowBox[{"ten_", ",", 
     RowBox[{
      RowBox[{"CTensor", "[", 
       RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
      "b__", "]"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{
       RowBox[{"CircleTimes", "[", 
        RowBox[{"ten", ",", "array"}], "]"}], ",", "bases", ",", 
       "addweight"}], "]"}], "[", "b", "]"}], "/;", 
    RowBox[{
     RowBox[{"FindFreeIndices", "@", "ten"}], "===", 
     RowBox[{"IndexList", "[", "]"}]}]}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"CircleTimes", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{"array_", ",", "bases_List", ",", "addweight_"}], "]"}], "[", 
     "b__", "]"}], ",", "ten_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"CTensor", "[", 
     RowBox[{
      RowBox[{"CircleTimes", "[", 
       RowBox[{"array", ",", "ten"}], "]"}], ",", "bases", ",", "addweight"}],
      "]"}], "[", "b", "]"}], "/;", 
   RowBox[{
    RowBox[{"FindFreeIndices", "@", "ten"}], "===", 
    RowBox[{"IndexList", "[", "]"}]}]}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"10951c8f-81ad-4774-a7d9-649ae5692417"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.4 Definition and undefinition of differential forms", \
"Subsubsection",ExpressionUUID->"b764af59-1876-4318-b219-0f7b986cb50c"],

Cell["\<\
Definition and undefinition of differential forms. This is simply DefTensor \
with the appropriate options\
\>", "Text",ExpressionUUID->"e59d9755-c7bb-4af1-8ab6-b85741fdc5a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "DefDiffForm"}]], \
"Input",ExpressionUUID->"b3a3bea2-d320-40bb-a2cd-751241d68479"],

Cell[BoxData[
 StyleBox["\<\"DefDiffForm[form[inds], mani, Deg] defines a tensor valued \
differential form of degree deg on the manifold mani\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"5332aa6c-f118-46bb-8189-9e316ced0733"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefDiffForm", "[", 
   RowBox[{"form_", ",", "mani_", ",", "deg_", ",", 
    RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"DefTensor", "[", 
     RowBox[{"form", ",", "mani", ",", 
      RowBox[{"GradeOfTensor", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], "]"}],
     ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"622d729d-0760-4617-be11-19df4e926f57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefDiffForm", "[", 
   RowBox[{"form_", ",", "mani_", ",", "deg_", ",", "sym_", ",", 
    RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"DefTensor", "[", 
     RowBox[{"form", ",", "mani", ",", "sym", ",", 
      RowBox[{"GradeOfTensor", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], "]"}],
     ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"727fc8d5-4178-40c8-870b-1633089ddd1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "DefDiffForm"}], ":=", 
   RowBox[{"Options", "@", "DefTensor"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"80a8e1e5-0160-4298-9c97-84c595375fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UndefDiffForm", ":=", "UndefTensor"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c3bec9bf-0b31-4a10-ad4e-8cc2f6cdbc02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"DefDiffForm", ",", "UndefDiffForm"}], "]"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"9514ea4e-783d-4786-8aca-23c36f2e2e14"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.5 Graded derivations", \
"Subsubsection",ExpressionUUID->"0b572e0f-e9df-446a-85b3-e128c3e6da15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", 
  "DefInertHead"}]], \
"Input",ExpressionUUID->"f5592ebf-1425-4013-8bb5-d25939ff457b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LinearQ", "\[Rule]", "False"}], ",", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Master", "\[Rule]", "Null"}], ",", 
   RowBox[{"PrintAs", "\[Rule]", "Identity"}], ",", 
   RowBox[{"ProtectNewSymbol", "\[RuleDelayed]", "$ProtectNewSymbols"}], ",", 
   
   RowBox[{"DefInfo", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"inert head\"\>", ",", "\<\"\"\>"}], "}"}]}]}], 
  "}"}]], "Output",ExpressionUUID->"aefa2374-cda7-4dd3-84ed-30804c89eacf"]
}, Open  ]],

Cell["\<\
This function will be used to declare the three derivations we need, namely \
diff, Int[v] and lie[v]. \
\>", "Text",ExpressionUUID->"2402dd32-2e3e-4957-b3f6-164ae9bc2bfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DefGradedDerivation", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PrintAs", "\[Rule]", "Identity"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Master", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"dd07cb25-5823-454f-9461-a5f002951cfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GradeOfDerivation", "[", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"v_", ",", "rest___"}], "]"}], ",", "prod_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GradeOfDerivation", "[", 
     RowBox[{"head", ",", "prod"}], "]"}], "+", 
    RowBox[{"Grade", "[", 
     RowBox[{"v", ",", "prod"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"25298756-cc83-43b3-bbcd-43929f4846fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefGradedDerivation", "[", 
    RowBox[{"der_", ",", 
     RowBox[{"prod_", "?", "ProductQ"}], ",", 
     RowBox[{"dergrade_", ":", "0"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"head", "=", 
       RowBox[{"SubHead", "[", "der", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "pa", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pa", "}"}], "=", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"{", "PrintAs", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "DefInertHead", " ", "will", " ", "take", " ", "care", " ", "of", 
           " ", "scalar"}], "-", 
          RowBox[{"homogeneity", " ", "and", " ", "linearity"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"DefInertHead", "[", 
         RowBox[{"der", ",", "\[IndentingNewLine]", 
          RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"ContractThrough", "\[Rule]", 
           RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PrintAs", "\[Rule]", "pa"}], ",", 
          RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Other", " ", "properties", " ", "of", " ", "a", " ", "derivation"}],
          " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"MakeDerivation", "[", 
         RowBox[{"head", ",", "der", ",", 
          RowBox[{"NoPattern", "[", "der", "]"}], ",", "prod", ",", 
          "dergrade"}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Nonatomic", " ", "derivation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"der", "=!=", "head"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "additivity", " ", "in", " ", "the", " ", "vector", " ", "slot", 
            " ", 
            RowBox[{"(", 
             RowBox[{"but", " ", "not", " ", 
              RowBox[{"homogeneity", "!"}]}], ")"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "0", "]"}], "[", "__", "]"}], ":=", "0"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "v_Plus", "]"}], "[", "args__", "]"}], ":=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "#", "]"}], "[", "args", "]"}], "&"}], "/@",
              "v"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Subscript", " ", "vector", " ", "argument", " ", "for", " ", 
             "formatting"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pa", "===", "Identity"}], ",", 
             RowBox[{"pa", "=", 
              RowBox[{"PrintAs", "[", "head", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"head", "/:", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v_", "]"}], "[", "form_", "]"}], ",", 
              "StandardForm"}], "]"}], ":=", 
            RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v", "]"}], "[", "form", "]"}], ",", 
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"SubscriptBox", "[", 
                  RowBox[{"pa", ",", 
                   RowBox[{"MakeBoxes", "[", 
                    RowBox[{"v", ",", "StandardForm"}], "]"}]}], "]"}], ",", 
                 "\"\<[\>\"", ",", 
                 RowBox[{"MakeBoxes", "[", 
                  RowBox[{"form", ",", "StandardForm"}], "]"}], ",", 
                 "\"\<]\>\""}], "}"}], "]"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"0fa1061a-146e-43e8-a6f8-a30de4ec0d48"],

Cell["\<\
This part is separated in order to avoid renaming confusion between derL and \
derR:\
\>", "Text",ExpressionUUID->"ad90a542-26eb-4117-a058-b7927392bc5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeDerivation", "[", 
    RowBox[{
    "head_", ",", "derL_", ",", "derR_", ",", "prod_", ",", "dergrade_"}], 
    "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grade", "=", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"derR", ",", "prod"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Addition", " ", "of", " ", "grades", " ", "in", " ", "algebra"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"head", "/:", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"head", ",", "prod"}], "]"}], ":=", "dergrade"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"head", "/:", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"derL", "[", 
          RowBox[{"expr_", ",", "___"}], "]"}], ",", "prod"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "prod"}], "]"}], "+", "grade"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"The", " ", 
        RowBox[{"(", "graded", ")"}], " ", "Leibniz", " ", "rule"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{"expr_prod", ",", "rest___"}], "]"}], ":=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Grade", "[", 
                RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
              RowBox[{"List", "@@", "expr"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"grade", " ", "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], " ", ")"}]}], 
            "\[IndentingNewLine]", 
            RowBox[{"MapAt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"derR", "[", 
                RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr", ",", 
              "i"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "Agreement", " ", "with", " ", "a", " ", "regular", " ", "derivative",
          " ", "when", " ", "acting", " ", "on", " ", "scalar", " ", 
         "functions", "??"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], 
         ",", "rest___"}], "]"}], ":=", 
       RowBox[{"xAct`xTensor`Private`multiD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"derR", "[", 
           RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", 
         RowBox[{"func", "[", "args", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Dependencies", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AtomQ", "[", "derR", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"head", "/:", 
         RowBox[{"DependenciesOfInertHead", "[", "derL", "]"}], ":=", 
         RowBox[{"DependenciesOf", "[", 
          RowBox[{"First", "[", "derR", "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"5c6c86d2-6e1b-4512-80e5-031618163d62"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.6 Exterior differentiation", \
"Subsubsection",ExpressionUUID->"0c9f3fd2-d887-4621-8a94-34e4fac0add8"],

Cell["\<\
The second key ingredient for exterior algebra is the differential operator. \
This a concept defined per manifold, or equivalently per tangent-bundle, \
though in this notebook we create only one differential operator.\
\>", "Text",ExpressionUUID->"13a75003-6852-4965-85cb-f66402efbc25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "Diff"}]], "Input",ExpressionUUID->"b4e00495-7eaf-4b31-a7c7-53d24e5e54c2"],

Cell[BoxData[
 StyleBox["\<\"Diff[form] computes the exterior derivative of form. \
Diff[form,covd] computes the exterior covariant derivative of form with \
respect to the covariant derivative covd.\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"c812bc3b-654e-484f-bb21-86e841f36417"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{"Diff", ",", "Wedge", ",", 
    RowBox[{"+", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<d\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"f146d73e-0987-47ee-9c5c-97fd558488ed"],

Cell["We always have PD as the covariant derivative.", \
"Text",ExpressionUUID->"9d2d7d02-c4d5-4e4b-852c-97c0f5054274"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "[", "expr_", "]"}], ":=", 
  RowBox[{"Diff", "[", 
   RowBox[{"expr", ",", "PD"}], "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8dbbc539-117b-4b4f-9184-e3bebcd8a618"],

Cell["Superscript formatting for covariant exterior derivatives", \
"Text",ExpressionUUID->"7964d397-2201-46e8-abf9-bca13c295690"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Diff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", "Diff", "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", "Diff", "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"f8244d64-24d1-4c90-898b-b1b984b7b6e6"],

Cell["Thread over lists and equal", \
"Text",ExpressionUUID->"ccbb1a8d-6de6-456b-a2e3-e54199ab3f88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{"expr_", "?", "ArrayQ"}], ",", "cd_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"#", ",", "cd"}], "]"}], "&"}], "/@", "expr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{"expr_Equal", ",", "cd_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"#", ",", "cd"}], "]"}], "&"}], "/@", "expr"}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"2154a41e-d6ba-4919-8595-99605650b18c"],

Cell["The exterior derivative applied twice is zero:", \
"Text",ExpressionUUID->"5f6b8a81-a925-4764-95c7-d3d959ef62a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "[", 
   RowBox[{"expr_Diff", ",", "PD"}], "]"}], ":=", "0"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8de1f4fb-9083-48e1-881b-8f97717ca808"],

Cell["\<\
Exterior derivative of basis objects is zero. TODO: This is not correct.\
\>", "Text",ExpressionUUID->"fe30f3c6-a858-415b-8232-dfcb86f1376b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{"_Basis", ",", "PD"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"3af094f1-d403-4dbe-ad83-55b2978eaa97"],

Cell["We still need definition when acting on Times", \
"Text",ExpressionUUID->"fb3ec78f-f2ef-4c77-8af2-ff2a678e5f0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"notZero", "=", 
    RowBox[{
     RowBox[{"0", "=!=", "#"}], "&"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"expr_Times", ",", "cd_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", "notZero"}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Diff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{"Diff", "[", 
              RowBox[{"form", ",", "cd"}], "]"}]}], "+", 
            RowBox[{"diff0", "[", 
             RowBox[{"scalar", ",", "cd", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"diff0", "[", 
           RowBox[{"expr", ",", "cd"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Only", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"scalar_Times", ",", "cd_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Diff", "[", 
           RowBox[{"#", ",", "cd"}], "]"}], "&"}], ",", "scalar", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "scalar", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"scalar_", ",", "cd_"}], "]"}], ":=", 
     RowBox[{"Diff", "[", 
      RowBox[{"scalar", ",", "cd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Scalars", " ", "and", " ", "a", " ", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"scalar_Times", ",", "cd_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"diff0", "[", 
           RowBox[{"#", ",", "cd", ",", "form"}], "]"}], "&"}], ",", "scalar",
          ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "scalar", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"scalar_", ",", "cd_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"Diff", "[", 
        RowBox[{"scalar", ",", "cd"}], "]"}], ",", "form"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"27c532ca-c4f4-431e-ab04-74007c855656"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "=!=", "#1"}], 
  "&"}]], "Output",ExpressionUUID->"91b57079-b54d-45fd-a03c-6ff34ac8d262"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{"x_", "?", "ConstantQ"}], ",", "cd_"}], "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"89145b59-a1a2-4d3f-94b0-8a9662eca6cc"],

Cell["Behavior with respect to Dagger.", \
"Text",ExpressionUUID->"5c94e82d-0837-4dbb-b749-731c41c5f343"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "/:", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Dagger", "[", 
     RowBox[{"Diff", "[", 
      RowBox[{"expr_", ",", "cd_"}], "]"}], "]"}], "]"}], ":=", 
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{"Dagger", "[", "expr", "]"}], ",", "cd"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"fe4b0428-910e-46c5-a6aa-87a4bb959c0e"],

Cell["Behaviour with respect to CTensor", \
"Text",ExpressionUUID->"df48cc0f-3729-4a40-809d-2b061dcdf1a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CTensor", "[", 
       RowBox[{"array_", ",", "bases_List", ",", "weight_"}], "]"}], "[", 
      "inds__", "]"}], ",", "cd_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CTensor", "[", 
     RowBox[{
      RowBox[{"Diff", "[", 
       RowBox[{"array", ",", "cd"}], "]"}], ",", "bases", ",", "weight"}], 
     "]"}], "[", "inds", "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"9770d262-0eaf-43d5-b332-4452162bcd17"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.7 Introduction of co-frame, eFrame and PDFrame", \
"Subsubsection",ExpressionUUID->"89113e7a-075e-4fea-9a32-4d893bd7c79d"],

Cell[TextData[{
 "We create the non-atomic tensor ",
 StyleBox["\[Theta][M]", "InlineFormula"],
 " representing a co-frame. Note that the formatting does not contain the \
manifold as this information is already visible in the abstract index. The \
abstract index may belong to the tangent space of the manifold \
\[OpenCurlyDoubleQuote]M\[CloseCurlyDoubleQuote] or to any other vector \
bundle with base M. In the case of the abstract index belonging to TangentM \
we can think of \[Theta][M] as the set of \[OpenCurlyDoubleQuote]canonical \
1-forms\[CloseCurlyDoubleQuote]. "
}], "Text",ExpressionUUID->"d18fa5f4-b297-4823-8cc7-446ec9543828"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coframe", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"Coframe", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   "\"\<\[Theta]\>\""}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"a9e9dddf-b192-4721-ad10-ea08d7a96e7b"],

Cell["Holonomic Co-frame", \
"Text",ExpressionUUID->"64b71fa5-23fc-4b3b-9898-8feb0f22f82a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"dx", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", "\"\<dx\>\""}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"2a1ee46a-09df-41b4-8681-e5de22ecd177"],

Cell["Condition of the co-frame being holonomic.", \
"Text",ExpressionUUID->"5725602d-ddf8-4103-96ef-42d244f1c6aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dx", "[", 
       RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "ind_", "]"}], ",", 
     "PD"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"44a1565b-b856-43cc-aaaf-61ad477436d0"],

Cell["General frame:", \
"Text",ExpressionUUID->"35f1f1cb-3ebb-4425-be8d-589095c12234"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"-", 
     RowBox[{"Tangent", "@", "mani"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eFrame", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"eFrame", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "CircleTimes"}], "]"}],
    "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"eFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", "\"\<e\>\""}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"b6d30db5-7844-40a0-b4ab-e342ff70d97e"],

Cell["General holonomic frame:", \
"Text",ExpressionUUID->"a0cec1ea-b6b8-4c0a-bee0-32f0f0eb49c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"-", 
     RowBox[{"Tangent", "@", "mani"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDFrame", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"PDFrame", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "CircleTimes"}], "]"}],
    "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"PDFrame", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   "\"\<\\!\\(\\*FractionBox[\\(\[PartialD]\\),\\(\[PartialD]x\\)]\\)\>\""}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"3e771e1f-c50b-4ca6-a0df-87cb7bc0ea1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "xTensions", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{"\"\<xTerior`\>\"", ",", "DefChart", ",", "\"\<End\>\""}], 
      "]"}], ":=", "setdiffs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"setdiffs", "[", 
      RowBox[{"chartname_", ",", "__"}], "]"}], ":=", 
     RowBox[{"Thread", "[", 
      RowBox[{"ComponentValue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", "[", 
            RowBox[{"ManifoldOfChart", "@", "chartname"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"#", ",", "chartname"}], "}"}], "]"}], "&"}], "/@", 
         RowBox[{"CNumbersOf", "@", "chartname"}]}], ",", 
        RowBox[{"Diff", "/@", 
         RowBox[{"ScalarsOfChart", "@", "chartname"}]}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"7d1ae547-d301-4c83-9b9a-c766a03256f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTension", "[", 
    RowBox[{"\"\<xTerior`\>\"", ",", "DefChart", ",", "\"\<End\>\""}], "]"}], 
   ":=", "defFreeAlgebraChart"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defFreeAlgebraChart", "[", 
   RowBox[{"basis_", ",", "__"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"scalars", "=", 
       RowBox[{"ScalarsOfChart", "[", "basis", "]"}]}], ",", 
      RowBox[{"numbers", "=", 
       RowBox[{"CNumbersOf", "@", "basis"}]}], ",", 
      RowBox[{"mani", "=", 
       RowBox[{"ManifoldOfChart", "@", "basis"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Define", " ", "the", " ", "algebra", " ", "elements", " ", "forming", 
      " ", "the", " ", "basis", " ", "of", " ", "the", " ", "free", " ", 
      "algebra"}], " ", "*)"}], "\t\t\t\t ", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DefTensor", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"GiveSymbol", "[", 
            RowBox[{"basis", ",", 
             RowBox[{"Abs", "@", "#1"}]}], "]"}], "[", "]"}], ",", "mani", 
          ",", 
          RowBox[{"PrintAs", "\[Rule]", 
           RowBox[{"ColorString", "[", 
            RowBox[{
             RowBox[{
             "\"\<\\!\\(\\*FractionBox[\\(\[PartialD]\\), \\(\[PartialD]\>\"",
               "<>", 
              RowBox[{"PrintAs", "[", 
               RowBox[{"Evaluate", "@", 
                RowBox[{"(", 
                 RowBox[{"Head", "@", "#2"}], ")"}]}], "]"}], "<>", 
              "\"\<\\)]\\)\>\""}], ",", 
             RowBox[{"BasisColor", "@", "basis"}]}], "]"}]}], ",", 
          RowBox[{"GradeOfTensor", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"CircleTimes", "\[Rule]", "1"}], "}"}]}], ",", 
          RowBox[{"Master", "\[Rule]", "basis"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"numbers", ",", "scalars"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Assign", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"ComponentValue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", "[", 
            RowBox[{"ManifoldOfChart", "@", "basis"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"#", ",", "basis"}], "}"}], "]"}], "&"}], "/@", 
         RowBox[{"CNumbersOf", "@", "basis"}]}], ",", 
        RowBox[{"Diff", "/@", 
         RowBox[{"ScalarsOfChart", "@", "basis"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Thread", "[", 
      RowBox[{"ComponentValue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PDFrame", "[", "mani", "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "basis"}]}], "}"}], "]"}], "&"}], "/@", "numbers"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"GiveSymbol", "[", 
            RowBox[{"basis", ",", "#"}], "]"}], "[", "]"}], "&"}], "/@", 
         "numbers"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"e9b917fa-fa12-4166-a02b-5873ad007404"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTension", "[", 
    RowBox[{"\"\<xTerior`\>\"", ",", "DefBasis", ",", "\"\<End\>\""}], "]"}], 
   ":=", "defFreeAlgebraBasis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defFreeAlgebraBasis", "[", 
   RowBox[{"basis_", ",", "__"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"numbers", "=", 
       RowBox[{"CNumbersOf", "@", "basis"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"mani", "=", 
       RowBox[{"BaseOfVBundle", "@", 
        RowBox[{"VBundleOfBasis", "@", "basis"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"ChartQ", "@", "basis"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Define", " ", "the", " ", "algebra", " ", "elements", " ", "forming", 
        " ", "the", " ", "basis", " ", "of", " ", "the", " ", "free", " ", 
        "algebra"}], " ", "*)"}], "\t\t\t\t ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"DefTensor", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"GiveSymbol", "[", 
             RowBox[{"basis", ",", 
              RowBox[{"Abs", "@", "#"}]}], "]"}], "[", "]"}], ",", "mani", 
           ",", 
           RowBox[{"GradeOfTensor", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"CircleTimes", "\[Rule]", "1"}], "}"}]}], ",", 
           RowBox[{"Master", "\[Rule]", "basis"}]}], "]"}], "&"}], "/@", 
        "numbers"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Assign", " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"ComponentValue", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"eFrame", "[", "mani", "]"}], "[", 
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"-", "basis"}]}], "}"}], "]"}], "&"}], "/@", 
           "numbers"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"basis", ",", "#"}], "]"}], "[", "]"}], "&"}], "/@", 
           "numbers"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"b7e5331e-3cd0-4f11-890c-e61884e2ff75"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.8 The Hodge dual", \
"Subsubsection",ExpressionUUID->"d8a671fb-bd93-4fa7-b1da-ad86758f92d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "Hodge"}]], "Input",ExpressionUUID->"22686ddc-27bb-4fb6-b102-a2928ee4ebc6"],

Cell[BoxData[
 StyleBox["\<\"Hodge[metric][expr] is the Hodge dual of expr defined with \
respect to metric\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"888f022e-86cf-432a-b0bc-825c2884fd3f"]
}, Open  ]],

Cell["\<\
The third basic ingredient of exterior algebra is Hodge duality, which \
requires the presence of a metric.\
\>", "Text",ExpressionUUID->"a2a37d5b-f351-4a9d-ab50-032caa4d7d23"],

Cell[BoxData[
 RowBox[{"DefInertHead", "[", 
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"5b89e5f2-e131-4048-9e47-560662b67364"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hodge", "/:", 
   RowBox[{"PrintAs", "@", 
    RowBox[{"Hodge", "[", "metric_", "]"}]}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "metric", "]"}], "===", "CTensor"}], ",", 
     "\"\<*\>\"", ",", 
     StyleBox[
      RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(*\\), \\(\>\"", "<>", 
       RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True]}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"a032052f-a0c2-4598-bc39-eb0eada1ab12"],

Cell["Thread over lists and equal", \
"Text",ExpressionUUID->"dddda320-62e3-4193-8dca-dd468bd2fee0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_List", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hodge", "[", "metric", "]"}], "[", "#", "]"}], "&"}], "/@", 
    "expr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_Equal", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hodge", "[", "metric", "]"}], "[", "#", "]"}], "&"}], "/@", 
    "expr"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"c7b88098-b6e8-440d-814a-cc6d552f1b71"],

Cell["Hodge of a CTensor object", \
"Text",ExpressionUUID->"09d6770e-d27e-467f-a9aa-20c0b8dda10a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", 
    RowBox[{
     RowBox[{"CTensor", "[", 
      RowBox[{"array_", ",", "bases_List", ",", "weight_"}], "]"}], "[", 
     "inds__", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CTensor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Hodge", "[", "metric", "]"}], "[", "array", "]"}], ",", 
      "bases", ",", "weight"}], "]"}], "[", "inds", "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"fa9d42ef-6185-4685-b59c-ac7c02049c65"],

Cell["Hodge of the product of two objects", \
"Text",ExpressionUUID->"e70cb2f0-7fc3-4d01-a266-691f9a613849"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "[", 
   RowBox[{"x_", " ", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"Hodge", "[", "metric", "]"}], "[", "y", "]"}]}], "/;", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"x", ",", "Wedge"}], "]"}], "===", "0"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8615421b-bcec-4e62-9488-31c6d97faa93"],

Cell["\<\
[Jose: This previous definition overlaps with LinearQ->True, so we might want \
to rethink that option in relation with the products and ScalarsOfProduct.]\
\>", "Text",ExpressionUUID->"d4d47228-de2f-4a28-9145-95879101749d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DimOfMetric", "[", "metric_", "]"}], ":=", 
  RowBox[{"DimOfVBundle", "[", 
   RowBox[{"VBundleOfMetric", "[", "metric", "]"}], "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"4d6d20ad-1131-4060-9e97-f2ab14dcba04"],

Cell[BoxData[
 RowBox[{"Hodge", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ",", 
    "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"d4edb6c5-d265-4209-94d6-f29e7fa6fed1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "@", 
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "Wedge"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", "1"}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"SignatureOfMetric", "[", "metric", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "expr"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"46120fa5-adb9-417b-a008-e79c811113fc"],

Cell["\<\
This function converts Hodge duals of product of the coframe basis (either \
holonomic or non-holonomic):\
\>", "Text",ExpressionUUID->"4179f7a3-17c6-40ca-92aa-0bb4a457ccd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "ExpandHodgeDual"}]], \
"Input",ExpressionUUID->"2200c5e1-4673-433a-b202-03a6129485e7"],

Cell[BoxData[
 StyleBox["\<\"ExpandHodgeDual[expr,Coframe[mani],g] expands out all the \
Hodge duals of the exterior powers of Coframe[mani], defined with respect to \
the metric g. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded. The Coframe label can be replaced by dx if we are using \
the holonomic coframe.\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"1f4e7300-b64b-491b-99fe-0be28cfaeb93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expand", " ", "dual", " ", "of", " ", "differentials", " ", "of", " ", 
    "coordinate", " ", "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dx", "[", 
        RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
     RowBox[{"ExpandHodgeDual1", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"Reverse", "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"List", "@@", 
            RowBox[{"TensorValues", "@", 
             RowBox[{"dx", "[", "mani", "]"}]}]}], "]"}]}]}], ")"}], ",", 
       RowBox[{"dx", "[", "mani", "]"}], ",", "met"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Expand", " ", "of", " ", "the", " ", "wedge", " ", "product", " ", "of",
       " ", "canonical", " ", "1"}], "-", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"coframe", ":", 
          RowBox[{"(", 
           RowBox[{"Coframe", "|", "dx"}], ")"}]}], ")"}], "[", 
        RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
     RowBox[{"ExpandHodgeDual1", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"coframe", "[", "mani", "]"}], ",", "met"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ae926eac-3173-4b66-8522-defc6c872dee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"coframe", ":", 
        RowBox[{"(", 
         RowBox[{"Coframe", "|", "dx"}], ")"}]}], ")"}], "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Hodge", "[", "met", "]"}], "[", 
          RowBox[{"form", ":", 
           RowBox[{"Wedge", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], ".."}], 
            "]"}]}], "]"}], "|", 
         RowBox[{"form", ":", 
          RowBox[{
           RowBox[{"Hodge", "[", "met", "]"}], "[", 
           RowBox[{
            RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], "]"}]}]}],
         "]"}], "\[RuleDelayed]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", "=", 
            RowBox[{"DimOfMetric", "[", "met", "]"}]}], ",", 
           RowBox[{"n", "=", 
            RowBox[{"Length", "[", "form", "]"}]}], ",", 
           RowBox[{"inds", "=", 
            RowBox[{"Sequence", "@@@", 
             RowBox[{"List", "@@", "form"}]}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dummies", "=", 
             RowBox[{"DummyIn", "/@", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"VBundleOfMetric", "[", "met", "]"}], ",", 
                RowBox[{"dim", "-", "n"}]}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"dim", "-", "n"}], ")"}], "!"}]}], 
            RowBox[{
             RowBox[{"epsilon", "[", "met", "]"}], "@@", 
             RowBox[{"Join", "[", 
              RowBox[{"inds", ",", 
               RowBox[{"ChangeIndex", "/@", "dummies"}]}], "]"}]}], 
            RowBox[{"Wedge", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"coframe", "[", "mani", "]"}], "/@", "dummies"}], 
              ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "[", "form_", "]"}], "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dim", "=", 
            RowBox[{"DimOfMetric", "[", "met", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dummies", "=", 
              RowBox[{"DummyIn", "/@", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"VBundleOfMetric", "[", "met", "]"}], ",", "dim"}], 
                "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"form", "/", 
              RowBox[{
               RowBox[{"(", "dim", ")"}], "!"}]}], 
             RowBox[{
              RowBox[{"epsilon", "[", "met", "]"}], "@@", 
              RowBox[{"(", 
               RowBox[{"ChangeIndex", "/@", "dummies"}], ")"}]}], 
             RowBox[{"Wedge", "@@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"coframe", "[", "mani", "]"}], "/@", "dummies"}], 
               ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "/;", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Deg", "[", "form", "]"}], "===", "0"}], ")"}]}]}]}], 
     "}"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"2391fa0b-174d-421c-8064-143feda921ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", "Coframe", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual1", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Coframe", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ea81f0b6-215d-4802-9a84-2b10a27390ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", "dx", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual1", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"dx", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"13dc0cb7-71ab-417e-b2be-516051e0f55c"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.9 The co-differential", \
"Subsubsection",ExpressionUUID->"05ff1aa9-0074-40c3-a6d7-faad5ef3aff8"],

Cell["We introduce the co-differential.", \
"Text",ExpressionUUID->"80d44060-3339-4bc4-aba6-4968bb63b4dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefInertHead", "[", 
   RowBox[{
    RowBox[{"Codiff", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ContractThrough", "\[Rule]", "delta"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"fbb8ef2a-d99f-4478-a558-e2c36b82e64f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Codiff", "/:", 
   RowBox[{"PrintAs", "@", 
    RowBox[{"Codiff", "[", "metric_", "]"}]}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "@", "metric"}], "===", "CTensor"}], ",", 
     "\"\<\[Delta]\>\"", ",", 
     StyleBox[
      RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(\\[Delta]\\), \\(\>\"", "<>", 
       RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True]}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"1295791a-f655-48c6-82de-14921e8c8037"],

Cell[BoxData[
 RowBox[{"Codiff", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
     RowBox[{"expr_", ",", "___"}], "]"}], ",", "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ea819d4c-c352-4c46-970b-c72ab8c660ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Codiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", 
         RowBox[{"Codiff", "[", "metric", "]"}], "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Codiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", 
           RowBox[{"Codiff", "[", "metric", "]"}], "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"d306bb62-0842-47da-ac92-5bc360f7d18a"],

Cell["We always have PD as the covariant derivative.", \
"Text",ExpressionUUID->"67d592c5-9290-40ee-9f8a-69ed03b0a6c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"Codiff", "[", "met_", "]"}], "[", "expr_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Codiff", "[", "met", "]"}], "[", 
    RowBox[{"expr", ",", "PD"}], "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"385d6894-1ed5-4411-9ceb-9059d585ebf9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CodiffToDiff", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "[", "met_", "]"}], "[", 
     RowBox[{"expr1_", ",", 
      RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"DimOfMetric", "[", "met", "]"}], 
         RowBox[{"Grade", "[", 
          RowBox[{"expr1", ",", "Wedge"}], "]"}]}], "+", 
        RowBox[{"DimOfMetric", "[", "met", "]"}], "+", "1", "+", 
        RowBox[{
         RowBox[{"SignatureOfMetric", "[", "met", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"Hodge", "[", "met", "]"}], "@", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "@", "expr1"}], ",", "covd"}], 
       "]"}]}]}]}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"f2dee957-d83e-4caa-917e-0007fd81b542"],

Cell["For convenience we program this identity:", \
"Text",ExpressionUUID->"e9770f10-3234-48cd-b2f4-97eb4f9a336d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
   RowBox[{
    RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
    RowBox[{"expr_", ",", "PD"}], "]"}], "]"}], ":=", "0"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"2f83349d-1c7b-42c6-99f8-f579852f69c1"],

Cell["Co-differential of basis objects is zero.", \
"Text",ExpressionUUID->"bf094506-51ff-4bc2-ad82-708ba539a4d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "[", 
    RowBox[{"_Basis", ",", 
     RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ea446898-83a4-4ab3-9512-1b608f6ba1ab"],

Cell["Thread over lists and equal", \
"Text",ExpressionUUID->"12b6edff-6cc8-4662-99c2-6914c64554fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "@", "expr_List"}], ":=", 
   RowBox[{"Codiff", "/@", "expr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "@", "expr_Equal"}], ":=", 
   RowBox[{"Codiff", "/@", "expr"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"67450ade-286e-4cf8-8bcd-93d520e728c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.10 Poincar\[EAcute] lemma", \
"Subsubsection",ExpressionUUID->"833fd67c-1204-4701-bcf7-d26e8ef94628"],

Cell["\<\
We implement the computation of the potential for an exact form (Poincar\
\[EAcute] lemma)\
\>", "Text",ExpressionUUID->"75ab570a-8c36-404c-a3b1-b81d49ca04b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FindPotential", "[", 
    RowBox[{"expr_Plus", ",", "point_List", ",", 
     RowBox[{"chart_", "?", "ChartQ"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "Integrate", "]"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPotential", "[", 
      RowBox[{"#", ",", "point", ",", "chart", ",", "options"}], "]"}], "&"}],
     "/@", "expr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindPotential", "[", 
    RowBox[{"expr_Times", ",", "point_List", ",", 
     RowBox[{"chart_", "?", "ChartQ"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "Integrate", "]"}]}]}], "]"}], ":=", 
   RowBox[{"FindPotential", "[", 
    RowBox[{
     RowBox[{"Expand", "@", "expr"}], ",", "point", ",", "chart", ",", 
     "options"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"795710c3-3ce5-4d7c-aef5-ef8497a2f496"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Simplest", " ", "cases", " ", "for", " ", "grade", " ", "1", " ", 
    "forms"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindPotential", "[", 
      RowBox[{"expr_Diff", ",", "point_List", ",", 
       RowBox[{"chart_", "?", "ChartQ"}], ",", 
       RowBox[{"options", ":", 
        RowBox[{"OptionsPattern", "[", "Integrate", "]"}]}]}], "]"}], ":=", 
     RowBox[{"Part", "[", 
      RowBox[{"expr", ",", "1"}], "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPotential", "[", 
      RowBox[{
       RowBox[{"factor_", " ", "expr_Diff"}], ",", "point_List", ",", 
       RowBox[{"chart_", "?", "ChartQ"}], ",", 
       RowBox[{"options", ":", 
        RowBox[{"OptionsPattern", "[", "Integrate", "]"}]}]}], "]"}], ":=", 
     RowBox[{"Integrate1", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"factor", "/.", 
          RowBox[{"Thread", "[", 
           RowBox[{"Rule", "[", 
            RowBox[{
             RowBox[{"ScalarsOfChart", "@", "chart"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Times", "[", 
                 RowBox[{"#", ",", "t"}], "]"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ScalarsOfChart", "@", "chart"}], "-", "point"}], 
                ")"}]}], "+", "point"}]}], "]"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Part", "[", 
           RowBox[{"expr", ",", "1"}], "]"}], "-", 
          RowBox[{"Part", "[", 
           RowBox[{"point", ",", 
            RowBox[{"First", "@", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"ScalarsOfChart", "@", "chart"}], ",", 
                RowBox[{"Part", "[", 
                 RowBox[{"expr", ",", "1"}], "]"}]}], "]"}]}]}]}], "]"}]}], 
         ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "options"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Do", " ", "the", " ", "actual", " ", "integration"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Integrate1", "/:", 
     RowBox[{"HoldPattern", "@", 
      RowBox[{"Plus", "[", "var__Integrate1", "]"}]}], ":=", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Plus", "@@", 
        RowBox[{"First", "/@", 
         RowBox[{"{", "var", "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e45064ca-76bc-4a2f-9ae9-03636544492d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Poincare", " ", "Lemma", " ", "for", " ", "higher", " ", "degree", " ", 
    "forms"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FindPotential", "[", 
     RowBox[{
      RowBox[{"factor_.", "expr_Wedge"}], ",", "point_List", ",", 
      RowBox[{"chart_", "?", "ChartQ"}], ",", 
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "Integrate", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"factor", "/.", 
         RowBox[{"Thread", "[", 
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"ScalarsOfChart", "@", "chart"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Times", "[", 
                RowBox[{"#", ",", "t"}], "]"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ScalarsOfChart", "@", "chart"}], "-", "point"}], 
               ")"}]}], "+", "point"}]}], "]"}], "]"}]}], ")"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], 
          RowBox[{"t", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Deg", "@", "expr"}], "-", "1"}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"expr", ",", "i", ",", "1"}], "]"}], "-", 
            RowBox[{"Part", "[", 
             RowBox[{"point", ",", 
              RowBox[{"First", "@", 
               RowBox[{"Flatten", "@", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"ScalarsOfChart", "@", "chart"}], ",", 
                  RowBox[{"Part", "[", 
                   RowBox[{"expr", ",", "i", ",", "1"}], "]"}]}], "]"}]}]}]}],
              "]"}]}], ")"}], 
          RowBox[{"Delete", "[", 
           RowBox[{"expr", ",", 
            RowBox[{"{", "i", "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "options"}], "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"b6b1c19b-1799-473b-9849-f7a5331bac2b"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.11. Integration of differential forms", \
"Subsubsection",ExpressionUUID->"0d8178db-5901-49de-b762-210deecc8365"],

Cell["Formatting of integration of differential forms:", \
"Text",ExpressionUUID->"14beede0-b57d-48e6-8c39-11cc5a62d851"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormIntegrate", "::", "dim"}], "=", 
   "\"\<Degree of form `1` is incompatible with dimension of manifold \
`2`.\>\""}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"78206323-c5ff-482f-afa4-b4f9d7735bba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InertHeadQ", "[", "FormIntegrate", "]"}], "^:=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LinearQ", "[", "FormIntegrate", "]"}], "^:=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormIntegrate", "[", 
    RowBox[{"expr_Plus", ",", 
     RowBox[{"man_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"FormIntegrate", "[", 
      RowBox[{"#", ",", "man"}], "]"}], "&"}], "/@", "expr"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormIntegrate", "[", 
    RowBox[{"form_", ",", "EmptyManifold"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormIntegrate", "[", 
    RowBox[{
     RowBox[{"c_", "?", "ConstantQ"}], ",", 
     RowBox[{"man_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{"c", "/;", 
    RowBox[{
     RowBox[{"DimOfManifold", "[", "man", "]"}], "==", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormIntegrate", "[", 
    RowBox[{"form_", ",", 
     RowBox[{"man_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"form", "===", "0"}], ",", "0", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Throw", "[", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"FormIntegrate", "::", "dim"}], ",", "form", ",", "man"}], 
         "]"}], "]"}], ";", "$Failed"}]}], "\[IndentingNewLine]", "]"}], "/;", 
    RowBox[{
     RowBox[{"Deg", "[", "form", "]"}], "=!=", 
     RowBox[{"DimOfManifold", "[", "man", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToCanonical", "[", 
    RowBox[{
     RowBox[{"FormIntegrate", "[", 
      RowBox[{"form_", ",", "man_"}], "]"}], ",", "opts___"}], "]"}], "^:=", 
   RowBox[{"FormIntegrate", "[", 
    RowBox[{
     RowBox[{"ToCanonical", "[", 
      RowBox[{"form", ",", "opts"}], "]"}], ",", "man"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FormIntegrate", "/:", 
   RowBox[{"Grade", "[", 
    RowBox[{
     RowBox[{"FormIntegrate", "[", 
      RowBox[{"form_", ",", "man_"}], "]"}], ",", "Wedge"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"Deg", "[", "form", "]"}], "===", 
     RowBox[{"DimOfManifold", "[", "man", "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"15ec6cfe-af33-42d3-8867-07df35781728"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Formatting", ".", " ", "Do"}], " ", "not", " ", "remove", " ", 
    "the", " ", 
    RowBox[{"ugly", " ", "?", "InertHeadQ"}], " ", "check", " ", 
    RowBox[{"here", ".", " ", "It"}], " ", "would", " ", "break", " ", 
    "typesetting"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FormIntegrate", "/:", 
     RowBox[{"MakeBoxes", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormIntegrate", "?", "InertHeadQ"}], "[", 
        RowBox[{"form_", ",", "man_"}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SubscriptBox", "[", 
         RowBox[{"\"\<\[Integral]\>\"", ",", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{"man", ",", "StandardForm"}], "]"}]}], "]"}], ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}]}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"This", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "work"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MakeExpression", "[", 
      RowBox[{
       RowBox[{"RowBox", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SubscriptBox", "[", 
           RowBox[{"\"\<\[Integral]\>\"", ",", "man_"}], "]"}], ",", 
          "form_"}], "}"}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
     RowBox[{"FormIntegrate", "[", 
      RowBox[{
       RowBox[{"MakeExpression", "[", 
        RowBox[{"form", ",", "StandardForm"}], "]"}], ",", 
       RowBox[{"MakeExpression", "[", 
        RowBox[{"man", ",", "StandardForm"}], "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"226e5775-aa13-444a-aae3-428a9780e34c"],

Cell["\<\
Use the Stokes theorem. By default it converts n-dimensional integration into \
(n-1)-dimensional integration, but using the two-argument form, UseStokes can \
work in both directions:\
\>", "Text",ExpressionUUID->"0ad7f659-c4b5-4bfc-afac-4855c0f29ea0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UseStokes", "[", "expr_", "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"FormIntegrate", "[", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{"form_", ",", "PD"}], "]"}], ",", "man_"}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"FormIntegrate", "[", 
      RowBox[{"form", ",", 
       RowBox[{"ManifoldBoundary", "[", "man", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UseStokes", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"man_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"FormIntegrate", "[", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{"form_", ",", "PD"}], "]"}], ",", "man"}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"FormIntegrate", "[", 
      RowBox[{"form", ",", 
       RowBox[{"ManifoldBoundary", "[", "man", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UseStokes", "[", 
    RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"FormIntegrate", "[", 
       RowBox[{"form", ",", 
        RowBox[{"ManifoldBoundary", "[", "man_", "]"}]}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"FormIntegrate", "[", 
      RowBox[{
       RowBox[{"Diff", "[", "form", "]"}], ",", "man"}], "]"}]}]}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"39e12867-64c3-45ea-b4da-66f53530f730"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "DefInertHead", 
  "]"}]], "Input",ExpressionUUID->"8149220b-83f0-49e5-a38e-7b9110d1fb7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LinearQ", "\[Rule]", "False"}], ",", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Master", "\[Rule]", "Null"}], ",", 
   RowBox[{"PrintAs", "\[Rule]", "Identity"}], ",", 
   RowBox[{"ProtectNewSymbol", "\[RuleDelayed]", "$ProtectNewSymbols"}], ",", 
   
   RowBox[{"DefInfo", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"inert head\"\>", ",", "\<\"\"\>"}], "}"}]}]}], 
  "}"}]], "Output",ExpressionUUID->"50e1588a-708b-4332-9233-0648b39f6e16"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.12 Koszul operator and its properties", \
"Subsubsection",ExpressionUUID->"08089326-83ad-4dbf-8719-c31e4f3f9ec7"],

Cell[TextData[{
 "Koszul operator is a xTension of ",
 StyleBox["DefCovD",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"62566226-3b64-45a9-ad9e-8eb504866463"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "xTensions", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Actual", " ", "definition", " ", "of", " ", "the", " ", "Koszul", " ", 
    "operator"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{"\"\<xTerior`\>\"", ",", "DefCovD", ",", "\"\<End\>\""}], "]"}],
      ":=", "defKoszulCovD"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Properties", " ", "of", " ", "the", " ", "Koszul", " ", "operator", " ", 
     "when", " ", "acting", " ", "on", " ", "the", " ", "elements", " ", "of",
      " ", "a", " ", "chart"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{"\"\<xCoba`\>\"", ",", "DefChart", ",", "\"\<End\>\""}], "]"}], 
     ":=", "setKoszulValue"}], ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"7380bfea-6ffb-4999-af88-7205472323ca"],

Cell["\<\
Actual definition of the Koszul operator. In addition we also define the \
corresponding \[OpenCurlyDoubleQuote]index free covariant derivative\
\[CloseCurlyDoubleQuote]:\
\>", "Text",ExpressionUUID->"55b3ddca-9ed2-44be-b6d9-6f845851579c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"defKoszulCovD", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"covd_", "?", "CovDQ"}], "[", "_", "]"}], ",", "__"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"covdsymbol", "=", 
       RowBox[{"GiveSymbol", "[", 
        RowBox[{"Koszul", ",", "covd"}], "]"}]}], ",", 
      RowBox[{"covdsymbolf", "=", 
       RowBox[{"GiveSymbol", "[", 
        RowBox[{"CovD", ",", "covd"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xAct`xTerior`Private`DefGradedDerivation", "[", 
      RowBox[{
       RowBox[{"covdsymbol", "[", "v_", "]"}], ",", "CircleTimes", ",", "0", 
       ",", 
       RowBox[{"PrintAs", "\[Rule]", 
        RowBox[{"Last", "@", 
         RowBox[{"SymbolOfCovD", "[", "covd", "]"}]}]}], ",", 
       RowBox[{"Master", "\[Rule]", "covd"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DefInertHead", "[", 
      RowBox[{"covdsymbolf", ",", 
       RowBox[{"PrintAs", "\[Rule]", 
        RowBox[{"Last", "@", 
         RowBox[{"SymbolOfCovD", "[", "covd", "]"}]}]}], ",", 
       RowBox[{"LinearQ", "\[Rule]", "True"}], ",", 
       RowBox[{"Master", "\[Rule]", "covd"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"covdsymbol", "[", "v_", "]"}], "[", 
        RowBox[{"expr_", "?", "ConstantQ"}], "]"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"covdsymbol", "[", 
         RowBox[{"factor_", " ", "v_"}], "]"}], "[", "expr_", "]"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"factor", " ", 
        RowBox[{
         RowBox[{"covdsymbol", "[", "v", "]"}], "[", "expr", "]"}]}], "/;", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"factor", ",", "CircleTimes"}], "]"}], "===", "0"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"covdsymbol", "[", "v_", "]"}], "[", 
        RowBox[{"expr1_", " ", "expr2_"}], "]"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"expr2", " ", 
        RowBox[{
         RowBox[{"covdsymbol", "[", "v", "]"}], "[", "expr1", "]"}]}], "+", 
       RowBox[{"expr1", " ", 
        RowBox[{
         RowBox[{"covdsymbol", "[", "v", "]"}], "[", "expr2", "]"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"covdsymbolf", "[", 
        RowBox[{"expr_", "?", "ConstantQ"}], "]"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"covdsymbolf", "[", "expr_", "]"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Diff", "[", "expr", "]"}], "/;", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "CircleTimes"}], "]"}], "===", "0"}]}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"covdsymbolf", "[", 
        RowBox[{"expr1_", " ", "expr2_"}], "]"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"CircleTimes", "[", 
        RowBox[{
         RowBox[{"covdsymbolf", "[", "expr1", "]"}], ",", "expr2"}], "]"}], 
       "+", 
       RowBox[{"CircleTimes", "[", 
        RowBox[{
         RowBox[{"covdsymbolf", "[", "expr2", "]"}], ",", "expr1"}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CircleTimes", "/:", 
      RowBox[{"HoldPattern", "@", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"covdsymbolf", "[", "expr_", "]"}], ",", "CircleTimes"}], 
        "]"}]}], ":=", 
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "CircleTimes"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Wedge", "/:", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"covdsymbolf", "[", "expr_", "]"}], ",", "Wedge"}], "]"}], 
       "]"}], ":=", 
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "Wedge"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CircleTimes", "/:", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"covdsymbolf", "[", "expr_", "]"}], ",", "CircleTimes"}], 
        "]"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "CircleTimes"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"covd", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a_", "?", "NumberQ"}], ",", "basis_"}], "}"}], "]"}], "@",
         "expr_"}], "]"}], ":=", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ChartQ", "[", "basis", "]"}], "&&", 
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "CircleTimes"}], "]"}], "\[GreaterEqual]", 
          "1"}]}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"covdsymbol", "[", 
          RowBox[{
           RowBox[{"PDFrame", "[", 
            RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", "basis"}], "}"}], "]"}], "]"}], "[", "expr", 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BasisQ", "[", "basis", "]"}], "&&", 
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "CircleTimes"}], "]"}], "\[GreaterEqual]", 
          "1"}]}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"covdsymbol", "[", 
          RowBox[{
           RowBox[{"eFrame", "[", 
            RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", "basis"}], "}"}], "]"}], "]"}], "[", "expr", 
         "]"}], ",", "\[IndentingNewLine]", "True", ",", 
        "\[IndentingNewLine]", "\t", "$Failed"}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"covd", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a_", "?", "NumberQ"}], ",", 
           RowBox[{"-", "basis_"}]}], "}"}], "]"}], "@", "expr_"}], "]"}], ":=",
       "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ChartQ", "[", "basis", "]"}], "&&", 
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "CircleTimes"}], "]"}], "\[GreaterEqual]", 
          "1"}]}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"covdsymbol", "[", 
          RowBox[{
           RowBox[{"PDFrame", "[", 
            RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"-", "basis"}]}], "}"}], "]"}], "]"}], "[", "expr", 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BasisQ", "[", "basis", "]"}], "&&", 
         RowBox[{
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "CircleTimes"}], "]"}], "\[GreaterEqual]", 
          "1"}]}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"covdsymbol", "[", 
          RowBox[{
           RowBox[{"eFrame", "[", 
            RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"-", "basis"}]}], "}"}], "]"}], "]"}], "[", "expr", 
         "]"}], ",", "\[IndentingNewLine]", "True", ",", 
        "\[IndentingNewLine]", "\t", "$Failed"}], "\[IndentingNewLine]", 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"550cefe3-60e6-4d41-ad24-c019a39391ad"],

Cell["\<\
Action of the Koszul operator on the holonomic elements of a coordinate \
chart: \
\>", "Text",ExpressionUUID->"21fae88c-2a16-4f6c-a41f-535958585ca6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setKoszulValue", "[", 
   RowBox[{
    RowBox[{"chart_", "?", "ChartQ"}], ",", "__"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"covd", "=", 
      RowBox[{"PDOfBasis", "[", "chart", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sym0", "=", 
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"Koszul", ",", "covd"}], "]"}]}], ",", 
        RowBox[{"sym1", "=", 
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"PD", ",", "chart"}], "]"}]}], ",", 
        RowBox[{"mani", "=", 
         RowBox[{"ManifoldOfChart", "[", "chart", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"sym0", "[", 
              RowBox[{
               RowBox[{"PDFrame", "[", "mani", "]"}], "[", 
               RowBox[{"{", 
                RowBox[{"#1", ",", 
                 RowBox[{"-", "chart"}]}], "}"}], "]"}], "]"}], "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"ScalarsOfChart", "[", "chart", "]"}], ",", "#2"}], 
              "]"}]}], ",", 
            RowBox[{
             RowBox[{"sym1", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"-", "chart"}]}], "}"}], "]"}], "[", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"ScalarsOfChart", "[", "chart", "]"}], ",", "#2"}], 
              "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"CNumbersOf", "@", "chart"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"ScalarsOfChart", "@", "chart"}]}]}], "]"}]}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Set", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"sym0", "[", 
              RowBox[{
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"chart", ",", "#1"}], "]"}], "[", "]"}], "]"}], "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"ScalarsOfChart", "[", "chart", "]"}], ",", "#2"}], 
              "]"}]}], ",", 
            RowBox[{
             RowBox[{"sym1", "[", 
              RowBox[{"{", 
               RowBox[{"#1", ",", 
                RowBox[{"-", "chart"}]}], "}"}], "]"}], "[", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"ScalarsOfChart", "[", "chart", "]"}], ",", "#2"}], 
              "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"CNumbersOf", "@", "chart"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"ScalarsOfChart", "@", "chart"}]}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 
 InitializationCell->
  True,ExpressionUUID->"8b9fbf07-8337-47e5-aa33-6f9aa2d31be5"],

Cell["\<\
Expansion of the action of Koszul operator on frame elements:\
\>", "Text",ExpressionUUID->"f55ce5de-da79-4535-ae4d-2334ae27a75a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandKoszul", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"covd1_", "?", "CovDQ"}], ",", 
     RowBox[{"covd2_", "?", "CovDQ"}]}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"Koszul", ",", "covd1"}], "]"}], "[", 
         RowBox[{
          RowBox[{"eFrame", "[", 
           RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "a_", "]"}], 
         "]"}], "[", 
        RowBox[{
         RowBox[{"eFrame", "[", 
          RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "b_", "]"}], "]"}],
        "\[RuleDelayed]", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "[", 
            RowBox[{"Tangent", "[", "mani", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Christoffel", "[", 
            RowBox[{"covd1", ",", "covd2"}], "]"}], "[", 
           RowBox[{"c", ",", "a", ",", "b"}], "]"}], 
          RowBox[{
           RowBox[{"eFrame", "[", "mani", "]"}], "[", 
           RowBox[{"-", "c"}], "]"}]}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"Koszul", ",", "covd1"}], "]"}], "[", 
         RowBox[{
          RowBox[{"eFrame", "[", 
           RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "a_", "]"}], 
         "]"}], "[", 
        RowBox[{
         RowBox[{"Coframe", "[", 
          RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "b_", "]"}], "]"}],
        "\[RuleDelayed]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "[", 
            RowBox[{"Tangent", "[", "mani", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Christoffel", "[", 
             RowBox[{"covd1", ",", "covd2"}], "]"}], "[", 
            RowBox[{"b", ",", "a", ",", 
             RowBox[{"-", "c"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"Coframe", "[", "mani", "]"}], "[", "c", "]"}]}]}], 
        "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"Koszul", ",", "covd1"}], "]"}], "[", 
         RowBox[{
          RowBox[{"PDFrame", "[", 
           RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "a_", "]"}], 
         "]"}], "[", 
        RowBox[{
         RowBox[{"PDFrame", "[", 
          RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "b_", "]"}], "]"}],
        "\[RuleDelayed]", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "[", 
            RowBox[{"Tangent", "[", "mani", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Christoffel", "[", 
            RowBox[{"covd1", ",", "covd2"}], "]"}], "[", 
           RowBox[{"c", ",", "a", ",", "b"}], "]"}], 
          RowBox[{
           RowBox[{"PDFrame", "[", "mani", "]"}], "[", 
           RowBox[{"-", "c"}], "]"}]}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"GiveSymbol", "[", 
          RowBox[{"Koszul", ",", "covd1"}], "]"}], "[", 
         RowBox[{
          RowBox[{"PDFrame", "[", 
           RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "a_", "]"}], 
         "]"}], "[", 
        RowBox[{
         RowBox[{"dx", "[", 
          RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "b_", "]"}], "]"}],
        "\[RuleDelayed]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "[", 
            RowBox[{"Tangent", "[", "mani", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Christoffel", "[", 
             RowBox[{"covd1", ",", "covd2"}], "]"}], "[", 
            RowBox[{"b", ",", "a", ",", 
             RowBox[{"-", "c"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"dx", "[", "mani", "]"}], "[", "c", "]"}]}]}], "]"}]}]}], 
     "}"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"dbd4c8fb-40ff-4191-9d16-1bc18daeaa1d"],

Cell["\<\
Expansion with respect to a coordinate chart of the generalized covariant \
derivative of rank 1 tensors\
\>", "Text",ExpressionUUID->"dc2d958e-2123-49d0-a8d0-a42734815807"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandCovD", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"covd_", "?", "CovDQ"}], ",", 
    RowBox[{"chart_", "?", "ChartQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"covdf", "=", 
       RowBox[{"GiveSymbol", "[", 
        RowBox[{"CovD", ",", "covd"}], "]"}]}], ",", 
      RowBox[{"M", "=", 
       RowBox[{"ManifoldOfChart", "[", "chart", "]"}]}], ",", 
      RowBox[{"covdk", "=", 
       RowBox[{"GiveSymbol", "[", 
        RowBox[{"Koszul", ",", "covd"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{"expr", "/.", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"covdf", "[", "expr1_", "]"}], "]"}], ":>", 
       RowBox[{
        RowBox[{"Plus", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dx", "[", "M", "]"}], "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", "chart"}], "}"}], "]"}], "\[CircleTimes]", 
             RowBox[{
              RowBox[{"covdk", "[", 
               RowBox[{
                RowBox[{"PDFrame", "[", "M", "]"}], "[", 
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "chart"}]}], "}"}], "]"}], "]"}], "[", "expr1",
               "]"}]}], "&"}], "/@", 
           RowBox[{"CNumbersOf", "@", "chart"}]}], ")"}]}], "/;", 
        RowBox[{
         RowBox[{"Grade", "[", 
          RowBox[{"expr1", ",", "CircleTimes"}], "]"}], "===", "1"}]}]}]}], 
     ")"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8455488e-5d4d-46bc-9279-552c00335214"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Graded derivations", "Subsection",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4ddcc27f-4446-401a-a778-dcc4e023dd44"],

Cell[CellGroupData[{

Cell["3.1 Connection forms ", \
"Subsubsection",ExpressionUUID->"8d1b3e3a-9fe0-4f4f-9b85-2b4c599187bf"],

Cell["\<\
There are two objects we need for covariant exterior derivatives. First, \
1-forms taking values in VB\[CircleTimes]-VB which represent the tensorial \
difference between two connections. Second, 2-forms taking values in VB\
\[CircleTimes]-VB which represent the curvature of an individual connection. \
We\[CloseCurlyQuote]ll use nonatomic heads for both of these. The notation \
will be
  ConnectionForm[CD1,CD2,VB][A,-B]
  CurvatureForm[CD,VB][A,-B]\
\>", "Text",ExpressionUUID->"53463c6a-76ce-4756-a45c-c89872baadf4"],

Cell["\<\
From a mathematical point of view the connection form should not be regarded \
as the tensorial difference between two connections. The reason for this is \
that the connection form is defined as a 1-form in the frame bundle regarded \
as a differentiable manifold and in this sense it is truly tensorial. One \
loses the tensorial character when one does a splitting of the frame bundle \
into the base manifold and the fibres. For this reason we use the following \
notation for the connection form:

ConnectionForm[CD,VB][A,-B]

This notation has been implemented in this notebook.\
\>", "Text",ExpressionUUID->"3503c4a2-c35a-48c1-abc2-97bafddbcb23"],

Cell[TextData[{
 "First, making these nonatomic-head tensors. We start by the general \
connection form. ",
 StyleBox[" What happens with the MastersOf a non-atomic symbol ? Given that \
a non-atomic tensor cannot be undefined I guess that it makes no sense to ask \
about its Masters,  right ?  Also I guess that it cannot be Servant of \
anything either.",
  FontWeight->"Bold"]
}], "Text",ExpressionUUID->"890a10be-da8b-4e97-846c-e3a11ec65441"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{
      RowBox[{"cd_", "?", "CovDQ"}], ",", "_"}], "]"}], "]"}], "^=", "True"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConnectionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<nonsymmetric Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd1", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", 
         RowBox[{"cd1", ",", "vb"}], "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd1", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd1", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "^=", "\"\<A\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"PD", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"26ec25bc-f887-4ec3-9c66-98e3fbcd697e"],

Cell["\<\
We introduce now the ChristoffelForm (connection form for a connection in the \
frame bundle). \
\>", "Text",ExpressionUUID->"60a9e2da-bde8-4996-88f7-1b6b13e56bcb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ChristoffelForm", "[", 
     RowBox[{"cd1_", "?", "CovDQ"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", 
     RowBox[{"cd1_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChristoffelForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ChristoffelForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"ChristoffelForm", "[", "cd1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<nonsymmetric frame bundle Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd1", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", "cd1", "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Should", " ", "we", " ", "put", " ", 
     RowBox[{"Union", "@@", 
      RowBox[{"HostsOf", "/@", 
       RowBox[{"{", 
        RowBox[{"cd1", ",", "cd2", ",", "vb"}], "}"}]}]}], " ", 
     RowBox[{"here", "?", " ", "Yes"}]}], ",", " ", 
    RowBox[{"but", " ", "addint", " ", "also", " ", "cd1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "^=", 
   "\"\<\[CapitalGamma]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PrintAs", "[", 
      RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"Head", "@", "cd1"}], "=!=", "CCovD"}]}], ")"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ChristoffelForm", "[", "PD", "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"83260919-c740-4ed0-9b02-61b0912dbc39"],

Cell["Connection form when the metric is given as a CTensor", \
"Text",ExpressionUUID->"a9da2451-93b8-4bf9-8bfd-bc0966251177"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", "exr_CCovD", "]"}], ":=", 
   RowBox[{"Head", "@", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ind", "=", 
         RowBox[{"DummyIn", "@", 
          RowBox[{"VBundleOfBasis", "[", 
           RowBox[{"-", 
            RowBox[{"First", "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}]}]}],
         ",", "a1", ",", "a2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a1", ",", "a2"}], "}"}], "=", 
        RowBox[{"GetIndicesOfVBundle", "[", 
         RowBox[{
          RowBox[{"VBundleOfBasis", "[", 
           RowBox[{"-", 
            RowBox[{"First", "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}], 
          ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Part", "[", 
          RowBox[{"exr", ",", "2"}], "]"}], "[", 
         RowBox[{"a1", ",", 
          RowBox[{"-", "ind"}], ",", 
          RowBox[{"-", "a2"}]}], "]"}], " ", 
        RowBox[{
         RowBox[{"ToCTensor", "[", 
          RowBox[{
           RowBox[{"Coframe", "[", 
            RowBox[{"BaseOfVBundle", "@", 
             RowBox[{"VBundleOfBasis", "[", 
              RowBox[{"-", 
               RowBox[{"First", "@", 
                RowBox[{"Part", "[", 
                 RowBox[{
                  RowBox[{"Part", "[", 
                   RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", 
             RowBox[{"First", "@", 
              RowBox[{"Part", "[", 
               RowBox[{
                RowBox[{"Part", "[", 
                 RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
            "}"}]}], "]"}], "[", "ind", "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"224d5a43-eb63-451d-a972-75130c350271"],

Cell["\<\
Automatic replacement of the connection form by the Christoffel form when the \
connection corresponds to a connection in a frame bundle.\
\>", "Text",ExpressionUUID->"1390080f-b1c7-437d-9b42-76497f8750ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1_", ",", "vb_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ChristoffelForm", "[", "cd1", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], "===", "vb"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", 
    RowBox[{"cd_", ",", "tangentbundle_"}], "]"}], ":=", 
   RowBox[{"ChristoffelForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"d2d49fe5-82e7-47d1-9ba9-3b755fd4b4dc"],

Cell["\<\
PD is regarded as a trivial connection in a principal bundle. Hence:\
\>", "Text",ExpressionUUID->"49913a5f-9bd0-4f81-b790-ac3a2438ef17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"PD", ",", "vb_"}], "]"}], ":=", "Zero"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", "PD", "]"}], ":=", "Zero"}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"3da0b525-d87f-4130-9e87-304fd2a64e0f"],

Cell["\<\
Transformation of the connection form into the connection tensor plus \
co-frame.\
\>", "Text",ExpressionUUID->"36647c39-cbca-46e9-943c-fd7d45416890"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionFormToTensor", "[", 
    RowBox[{"expr_", ",", "covd_", ",", 
     RowBox[{"frame", ":", 
      RowBox[{"(", 
       RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", 
        RowBox[{"ind1_", ",", "ind2_"}], "]"}], ":>", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "@", 
              RowBox[{"First", "@", 
               RowBox[{"VBundlesOfCovD", "@", "covd"}]}]}]}], ",", "i1", ",", 
            "i2"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"i1", "=", 
            RowBox[{"NewIndexIn", "[", 
             RowBox[{"VBundleOfIndex", "[", "ind1", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"i2", "=", 
            RowBox[{"NewIndexIn", "[", 
             RowBox[{"VBundleOfIndex", "[", "ind2", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
                RowBox[{"i1", ",", 
                 RowBox[{"-", "a"}], ",", "i2"}], "]"}], ",", 
               RowBox[{"ManifoldOfCovD", "@", "covd"}]}], "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
             RowBox[{"ind1", ",", 
              RowBox[{"-", "a"}], ",", "ind2"}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1_", ",", "vbundle_"}], "]"}], "[", 
        RowBox[{"ind1_", ",", "ind2_"}], "]"}], "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "@", 
              RowBox[{"Tangent", "@", 
               RowBox[{"BaseOfVBundle", "@", "vbundle"}]}]}]}], ",", "i1", 
            ",", "i2"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"i1", "=", 
            RowBox[{"NewIndexIn", "[", 
             RowBox[{"VBundleOfIndex", "[", "ind1", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"i2", "=", 
            RowBox[{"NewIndexIn", "[", 
             RowBox[{"VBundleOfIndex", "[", "ind2", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], 
                "[", 
                RowBox[{"i1", ",", 
                 RowBox[{"-", "a"}], ",", "i2"}], "]"}], ",", 
               RowBox[{"BaseOfVBundle", "@", "vbundle"}]}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], "[", 
             RowBox[{"ind1", ",", 
              RowBox[{"-", "a"}], ",", "ind2"}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"BaseOfVBundle", "@", "vbundle"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}]}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"0b56c614-fece-4268-bb09-6e9707e2b80e"],

Cell["\<\
If the covariant derivative is PD then the code takes the following simpler \
form:\
\>", "Text",ExpressionUUID->"e0b01cb7-0380-4c30-b5aa-c8edbbc5a3a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectionFormToTensor", "[", 
   RowBox[{"expr_", ",", "PD", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", 
       RowBox[{"ind1_", ",", "ind2_"}], "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Christoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"ind1", ",", 
           RowBox[{"-", "a"}], ",", "ind2"}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "_"}], "]"}], "[", 
       RowBox[{"ind1_", ",", "ind2_"}], "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"AChristoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"ind1", ",", 
           RowBox[{"-", "a"}], ",", "ind2"}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"c418af21-8c50-447b-aade-e6f00a4abcce"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Curvature forms ", \
"Subsubsection",ExpressionUUID->"a8116df6-83af-495c-a918-4634e70027cf"],

Cell["Now for the curvature form:", \
"Text",ExpressionUUID->"4fe5662a-4e8f-4f6b-9cc3-4af9d13326f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurvatureForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"cd", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", 
         RowBox[{"cd", ",", "vb"}], "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "^=", "\"\<F\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ec302d18-16fe-4900-8a53-d274a5eb8a89"],

Cell["Case of a connection in the frame bundle (RiemannForm)", \
"Text",ExpressionUUID->"06ccdb06-5a71-4f87-82ff-bd6e192f5916"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"RiemannForm", "[", 
     RowBox[{"cd_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RiemannForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"RiemannForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"RiemannForm", "[", 
      RowBox[{"cd_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MetricOfCovD", "@", "cd"}], "=!=", "Null"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Antisymmetric", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "Cycles"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"StrongGenSet", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"GenSet", "[", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form in the frame bundle\>\"", ",", "\"\<\>\""}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", "cd", "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "^=", "\"\<R\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PrintAs", "[", 
      RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"Head", "@", "cd"}], "=!=", "CCovD"}]}], ")"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"81467c5e-a7d3-47cf-86f7-a57ca9f44fcc"],

Cell["Riemann form of a CTensor expression", \
"Text",ExpressionUUID->"4a29f317-c1dc-426f-8109-272a29466cca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", "exr_CCovD", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Riemann", "[", "exr", "]"}], "=!=", "Zero"}], ",", 
     RowBox[{"Head", "@", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ind1", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"VBundleOfBasis", "[", 
             RowBox[{"-", 
              RowBox[{"First", "@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], 
             "]"}]}]}], ",", 
          RowBox[{"ind2", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"VBundleOfBasis", "[", 
             RowBox[{"-", 
              RowBox[{"First", "@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], 
             "]"}]}]}], ",", "a1", ",", "a2"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a1", ",", "a2"}], "}"}], "=", 
          RowBox[{"GetIndicesOfVBundle", "[", 
           RowBox[{
            RowBox[{"VBundleOfBasis", "[", 
             RowBox[{"-", 
              RowBox[{"First", "@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}], 
            ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Riemann", "[", "exr", "]"}], "[", 
           RowBox[{
            RowBox[{"-", "ind1"}], ",", 
            RowBox[{"-", "ind2"}], ",", 
            RowBox[{"-", "a1"}], ",", "a2"}], "]"}], " ", 
          RowBox[{"Wedge", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToCTensor", "[", 
              RowBox[{
               RowBox[{"Coframe", "[", 
                RowBox[{"BaseOfVBundle", "@", 
                 RowBox[{"VBundleOfBasis", "[", 
                  RowBox[{"-", 
                   RowBox[{"First", "@", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"-", 
                 RowBox[{"First", "@", 
                  RowBox[{"Part", "[", 
                   RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
                "}"}]}], "]"}], "[", "ind1", "]"}], ",", 
            RowBox[{
             RowBox[{"ToCTensor", "[", 
              RowBox[{
               RowBox[{"Coframe", "[", 
                RowBox[{"BaseOfVBundle", "@", 
                 RowBox[{"VBundleOfBasis", "[", 
                  RowBox[{"-", 
                   RowBox[{"First", "@", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"-", 
                 RowBox[{"First", "@", 
                  RowBox[{"Part", "[", 
                   RowBox[{
                    RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
                "}"}]}], "]"}], "[", "ind2", "]"}]}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "Zero"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"49c8431a-4174-44a7-80fc-c7ccb384ed27"],

Cell["\<\
Automatic replacement of the curvature form if the covariant derivative \
corresponds to a covariant derivative defined in the tangent bundle.\
\>", "Text",ExpressionUUID->"c30d0ace-7b71-439c-9c44-c0aa291ec26b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{
     RowBox[{"cd_", "?", "CovDQ"}], ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RiemannForm", "[", "cd", "]"}], "/;", 
    RowBox[{"vbundle", "===", 
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", 
    RowBox[{"cd_", ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"8231a905-bb50-4026-89b5-e1f0c2baaddf"],

Cell["\<\
Transformation of the Curvature form into the curvature tensor plus co-frame.\
\
\>", "Text",ExpressionUUID->"37f07bda-f148-4523-808b-b7db2478de3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CurvatureFormToTensor", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "@", 
       RowBox[{
        RowBox[{"CurvatureForm", "[", 
         RowBox[{"cd1_", ",", 
          RowBox[{"vbundle1_", "?", "VBundleQ"}]}], "]"}], "[", "inds__", 
        "]"}]}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"FRiemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"-", "$RiemannSign"}], " ", 
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Riemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"cd16b9c2-0305-4fd8-bc53-e6fdfad303c0"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.3 The torsion 2-form", \
"Subsubsection",ExpressionUUID->"b9791a21-6536-45c0-ab24-de653ae5086c"],

Cell["\<\
The torsion 2-form (only for covariant derivatives on the tangent bundle)\
\>", "Text",ExpressionUUID->"cda9c493-ce62-428c-810c-ac654c80a077"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", 
     RowBox[{"ManifoldOfCovD", "@", "cd"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TorsionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"TorsionForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dagger", "[", 
   RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
  RowBox[{"TorsionForm", "[", "cd", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Torsion 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"HostsOf", "@", "cd"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"HostsOf", "@", "cd"}], " ", 
    RowBox[{"here", "?", " ", "OK"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"8c9542e7-378d-4124-96db-f99bc950579e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "^=", 
   "\"\<\[GothicCapitalT]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PrintAs", "[", 
      RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"Head", "@", "cd"}], "=!=", "CCovD"}]}], ")"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"21b333a8-c5fc-41a0-a358-f4e1075b9894"],

Cell["\<\
Torsion form of a covariant derivative of a metric given as a CTensor\
\>", "Text",ExpressionUUID->"1ed8ebec-aba9-4783-b9a9-77d08b24e9e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TorsionForm", "[", "exr_CCovD", "]"}], ":=", 
   RowBox[{"Head", "@", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ind1", "=", 
         RowBox[{"DummyIn", "@", 
          RowBox[{"VBundleOfBasis", "[", 
           RowBox[{"-", 
            RowBox[{"First", "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}]}]}],
         ",", 
        RowBox[{"ind2", "=", 
         RowBox[{"DummyIn", "@", 
          RowBox[{"VBundleOfBasis", "[", 
           RowBox[{"-", 
            RowBox[{"First", "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}]}]}],
         ",", "a1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "a1", "}"}], "=", 
        RowBox[{"GetIndicesOfVBundle", "[", 
         RowBox[{
          RowBox[{"VBundleOfBasis", "[", 
           RowBox[{"-", 
            RowBox[{"First", "@", 
             RowBox[{"Part", "[", 
              RowBox[{
               RowBox[{"Last", "@", "exr"}], ",", "2"}], "]"}]}]}], "]"}], 
          ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Torsion", "[", "exr", "]"}], "[", 
         RowBox[{"a1", ",", 
          RowBox[{"-", "ind1"}], ",", 
          RowBox[{"-", "ind2"}]}], "]"}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ToCTensor", "[", 
           RowBox[{
            RowBox[{"Coframe", "[", 
             RowBox[{"BaseOfVBundle", "@", 
              RowBox[{"VBundleOfBasis", "[", 
               RowBox[{"-", 
                RowBox[{"First", "@", 
                 RowBox[{"Part", "[", 
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              RowBox[{"First", "@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"Part", "[", 
                  RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
             "}"}]}], "]"}], "[", "ind1", "]"}], "\[Wedge]", 
         RowBox[{
          RowBox[{"ToCTensor", "[", 
           RowBox[{
            RowBox[{"Coframe", "[", 
             RowBox[{"BaseOfVBundle", "@", 
              RowBox[{"VBundleOfBasis", "[", 
               RowBox[{"-", 
                RowBox[{"First", "@", 
                 RowBox[{"Part", "[", 
                  RowBox[{
                   RowBox[{"Part", "[", 
                    RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"-", 
              RowBox[{"First", "@", 
               RowBox[{"Part", "[", 
                RowBox[{
                 RowBox[{"Part", "[", 
                  RowBox[{"exr", ",", "3"}], "]"}], ",", "2"}], "]"}]}]}], 
             "}"}]}], "]"}], "[", "ind2", "]"}]}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"984dfa67-51ec-4f90-aa43-5acc5a22a3b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
3.4 Change of exterior covariant derivative and generalized covariant \
derivative\
\>", "Subsubsection",ExpressionUUID->"fa8a1542-de45-4948-8698-495ae63b7c4e"],

Cell["\<\
We will use a convention that there should be a correspondence 
  AChr1[CD1,CD2,VB][A,-B] \[Rule] AChristoffel[CD1,CD2][A,-\[Mu],-B] \
\[Theta][\[Mu]]
  FRiem2[CD,VB][A,-B] \[Rule] 1/2 FRiemann[CD][-\[Mu],-\[Nu],-B,A] \[Theta][\
\[Mu]]\[Wedge]\[Theta][\[Nu]]          (notice different ordering of A,B on \
two sides)
  Torsion2[CD][\[Alpha]] \[Rule] 1/2 Torsion[CD][\[Alpha],-\[Beta],-\[Gamma]] \
\[Theta][\[Beta]]\[Wedge]\[Theta][\[Gamma]]
We\[CloseCurlyQuote]ll want to be able to
  1) Change from diff[form,CD1] to diff[form,CD2], introducing \
AChr1[CD1,CD2,...] as needed
  2) Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed
  3) Change from FRiem2[CD1,VB] to FRiem2[CD2,VB], introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]\
\>", "Text",ExpressionUUID->"e67a9d5a-d694-4f81-9501-2cd2a50a84f4"],

Cell[TextData[{
 "1. Change from diff[form,CD1] to diff[form,CD2]. The formula is:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]],ExpressionUUID->
  "f116ec0a-10f1-455d-90a7-4756f945bfad"],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
    SuperscriptBox["v", "B"]}], TraditionalForm]],ExpressionUUID->
  "012a078c-ca55-46f1-8d75-6d708b70a5b3"],
 "     (where VB is the VBundle of A; plus sign for +VB, minus sign for -VB)\n\
TODO: What about densities? Alfonso: I\[CloseCurlyQuote]m not sure whether \
the distinction \[OpenCurlyDoubleQuote]true tensor\[CloseCurlyDoubleQuote] / \
\[OpenCurlyDoubleQuote]tensor density\[CloseCurlyDoubleQuote] holds in this \
context."
}], "Text",ExpressionUUID->"da46ffb8-4a4d-44ac-bf28-8ed6e9e27fbf"],

Cell["\<\
TODO: describe the action of the \[OpenCurlyDoubleQuote]Generalized Covariant \
derivative\[CloseCurlyDoubleQuote].\
\>", "Text",ExpressionUUID->"22f24990-078f-4fbb-afaa-132eabb27cf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "ChangeExtD"}]], \
"Input",ExpressionUUID->"fdf5d662-69af-48b5-bc54-76da4129760d"],

Cell[BoxData[
 StyleBox["\<\"ChangeExtD[expr,cd1,cd2] expresses the exterior covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the exterior covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"3493e0a3-d7e7-48c8-89bd-726e39768c20"]
}, Open  ]],

Cell["\<\
ConnectionForm with two covariant derivatives as arguments represents the \
difference between two connection forms which carry only a covariant \
derivative in the argument.\
\>", "Text",ExpressionUUID->"71995f46-1645-4363-af9b-02644e76ba93"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "cd2_", ",", "vbundle_"}], "]"}], "[", "inds__", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "vbundle"}], "]"}], "[", "inds", "]"}], "-", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd2", ",", "vbundle"}], "]"}], "[", "inds", "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"55a7f445-e56d-4101-8cc1-671baf8baaa6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd_", "?", "CovDQ"}], ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChangeExtD", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"cd1_", "?", "CovDQ"}], ",", 
      RowBox[{"cd2_", ":", "PD"}]}], "]"}], ":=", 
    RowBox[{"expr", "/.", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{"expr1_", ",", "cd1"}], "]"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"makeChangeExtD", "[", 
       RowBox[{
        RowBox[{"ChangeExtD", "[", 
         RowBox[{"expr1", ",", "cd1", ",", "cd2"}], "]"}], ",", "cd1", ",", 
        "cd2"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"covd2_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeExtD", "[", 
       RowBox[{"#1", ",", "#2", ",", "covd2"}], "]"}], "&"}], ",", "expr", 
     ",", "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", "x_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ChangeExtD", "::", "unknown"}], ",", 
      "\"\<covariant derivative\>\"", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"bbefe3f2-d145-42f6-9c11-0dfefa1bf324"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "only", " ", "gives", " ", "a", " ", "correct", " ", 
     "result", " ", "for", " ", "an", " ", "expression", " ", "which", " ", 
     "is", " ", "a", " ", "sum", " ", "of", " ", "simple", " ", "tensor", " ",
      "monomials"}], ",", " ", 
    RowBox[{
    "each", " ", "simple", " ", "term", " ", "being", " ", "the", " ", 
     "product", " ", "of", " ", "rank", " ", "1", " ", "basis", " ", 
     "elements"}]}], "   ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ChangeGenCovD", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}], ",", "cd_"}], "]"}], ":=", "expr"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ChangeGenCovD", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"cd1_", "?", "CovDQ"}], ",", 
      RowBox[{"cd2_", ":", "PD"}]}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"covdf", "=", 
        RowBox[{"GiveSymbol", "[", 
         RowBox[{"CovD", ",", "cd1"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "epk", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"epk", "=", 
          RowBox[{
           RowBox[{"SeparateBasis", "[", "AIndex", "]"}], "[", "expr", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FindIndices", "[", "expr", "]"}], "\[Equal]", 
            RowBox[{"IndexList", "[", "]"}]}], ",", 
           RowBox[{"Return", "[", "expr", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"epk", "/.", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{"covdf", "[", "expr1_", "]"}], "]"}], "\[RuleDelayed]", 
           "\[IndentingNewLine]", 
           RowBox[{"makeChangeCovD", "[", 
            RowBox[{"expr1", ",", "cd1", ",", "cd2"}], "]"}]}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeGenCovD", "[", 
      RowBox[{"expr_", ",", "list_List", ",", 
       RowBox[{"covd2_", ":", "PD"}]}], "]"}], ":=", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ChangeGenCovD", "[", 
         RowBox[{"#1", ",", "#2", ",", "covd2"}], "]"}], "&"}], ",", "expr", 
       ",", "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeGenCovD", "[", 
      RowBox[{"expr_", ",", "x_", ",", 
       RowBox[{"_", ":", "PD"}]}], "]"}], ":=", 
     RowBox[{"Throw", "@", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"ChangeGenCovD", "::", "unknown"}], ",", 
        "\"\<covariant derivative\>\"", ",", "x"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeGenCovD", "[", "expr_", "]"}], ":=", 
     RowBox[{"ChangeGenCovD", "[", 
      RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ea94d3fa-d5af-4c9e-9009-a52d26591657"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeChangeExtD", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbs", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"Union", ",", 
         RowBox[{"VBundlesOfCovD", "/@", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cd1", ",", "cd2"}], "}"}], ",", "PD"}], "]"}]}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Diff", "[", 
        RowBox[{"expr", ",", "cd2"}], "]"}], "+", 
       RowBox[{"Plus", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"addAChr1", "[", 
           RowBox[{"expr", ",", "cd1", ",", "cd2"}], "]"}], ",", 
          RowBox[{"xAct`xTensor`Private`selecton", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"FindFreeIndices", "@", "expr"}], ",", "GIndexQ"}], 
             "]"}], ",", "vbs"}], "]"}]}], "]"}]}]}], "//", "ReduceAChr1"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"0a48d7fb-1066-4422-8409-f71ff713e2ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeChangeCovD", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vbs", "=", 
        RowBox[{"Apply", "[", 
         RowBox[{"Union", ",", 
          RowBox[{"VBundlesOfCovD", "/@", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cd1", ",", "cd2"}], "}"}], ",", "PD"}], "]"}]}]}], 
         "]"}]}], ",", 
       RowBox[{"covd2", "=", 
        RowBox[{"GiveSymbol", "[", 
         RowBox[{"CovD", ",", "cd2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"covd2", "[", "expr", "]"}], "+", 
       RowBox[{"Plus", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"addAChr2", "[", 
           RowBox[{"expr", ",", "cd1", ",", "cd2"}], "]"}], ",", 
          RowBox[{"xAct`xTensor`Private`selecton", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"IndexList", "@@", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{
                 RowBox[{"List", "@@", 
                  RowBox[{"FindIndices", "@", "expr"}]}], ",", 
                 RowBox[{"Alternatives", "@@", 
                  RowBox[{"List", "@", 
                   RowBox[{"FindDummyIndices", "@", "expr"}]}]}]}], "]"}]}], 
              ",", "GIndexQ"}], "]"}], ",", "vbs"}], "]"}]}], "]"}]}]}], "//",
       "ReduceAChr1"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"85f6fecd-e44d-4d45-ab23-008c4f98c61d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "cd2", ",", 
       RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
     RowBox[{"oldind", ",", 
      RowBox[{"-", "dummy"}]}], "]"}], ",", 
    RowBox[{"ReplaceIndex", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConnectionForm", "[", 
       RowBox[{"cd1", ",", "cd2", ",", 
        RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"0cde80c6-b2c8-4403-9585-c408c40cca82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addAChr2", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"CircleTimes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConnectionForm", "[", 
       RowBox[{"cd1", ",", "cd2", ",", 
        RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
      RowBox[{"oldind", ",", 
       RowBox[{"-", "dummy"}]}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addAChr2", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"CircleTimes", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "cd2", ",", 
       RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
     RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
    RowBox[{"ReplaceIndex", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"oldind", "\[Rule]", 
       RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ec38621a-9497-4fae-a299-6f447231a8be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ChangeGenCovD", "[", "%", 
  "]"}]], "Input",ExpressionUUID->"6827de8b-fe05-46b2-a110-324f12414e46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   InterpretationBox[
    StyleBox[
     RowBox[{"d", "[", 
      InterpretationBox[
       StyleBox[GridBox[{
          {"T", 
           StyleBox[GridBox[{
              {" ", " "},
              {"a", "b"}
             },
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.], {
                  Offset[0.034999999999999996`]}, 
                 Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                  Offset[0.]}}, "RowsIndexed" -> {}}],
            FontSize->Rational[39, 4]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Center}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.034999999999999996`]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        ShowAutoStyles->False,
        AutoSpacing->False],
       $CellContext`T[-$CellContext`a, -$CellContext`b],
       Editable->False], "]"}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTerior`Diff[
     $CellContext`T[-$CellContext`a, -$CellContext`b], xAct`xTensor`PD],
    Editable->False], "\[CircleTimes]", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"\[Theta]", 
        StyleBox[GridBox[{
           {"a"},
           {" "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
               Offset[0.]}}, "RowsIndexed" -> {}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTerior`Coframe[$CellContext`M][$CellContext`a],
    Editable->False], "\[CircleTimes]", 
   InterpretationBox[
    StyleBox[GridBox[{
       {"\[Theta]", 
        StyleBox[GridBox[{
           {"b"},
           {" "}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
               Offset[0.]}}, "RowsIndexed" -> {}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTerior`Coframe[$CellContext`M][$CellContext`b],
    Editable->False]}], "+", 
  RowBox[{
   InterpretationBox[
    StyleBox[GridBox[{
       {"T", 
        StyleBox[GridBox[{
           {" ", " "},
           {"a", "b"}
          },
          GridBoxSpacings->{"Columns" -> {
              Offset[0.], {
               Offset[0.034999999999999996`]}, 
              Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
               Offset[0.]}}, "RowsIndexed" -> {}}],
         FontSize->Rational[39, 4]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Center}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.034999999999999996`]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    $CellContext`T[-$CellContext`a, -$CellContext`b],
    Editable->False], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"xAct`xTerior`Private`addAChr2", "[", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          StyleBox[GridBox[{
             {"\[Theta]", 
              StyleBox[GridBox[{
                 {"a"},
                 {" "}
                },
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
               FontSize->Rational[39, 4]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Center}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Coframe[$CellContext`M][$CellContext`a],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[GridBox[{
             {"\[Theta]", 
              StyleBox[GridBox[{
                 {"b"},
                 {" "}
                },
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
               FontSize->Rational[39, 4]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Center}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Coframe[$CellContext`M][$CellContext`b],
          Editable->False]}], ",", "CD", ",", "PD"}], "]"}], "[", 
      InterpretationBox[
       StyleBox[
        RowBox[{"\[PartialD]", "[", 
         RowBox[{
          InterpretationBox[
           StyleBox[GridBox[{
              {"\[Theta]", 
               StyleBox[GridBox[{
                  {"a"},
                  {" "}
                 },
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
                FontSize->Rational[39, 4]]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Center}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.034999999999999996`]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Coframe[$CellContext`M][$CellContext`a],
           Editable->False], "\[CircleTimes]", 
          InterpretationBox[
           StyleBox[GridBox[{
              {"\[Theta]", 
               StyleBox[GridBox[{
                  {"b"},
                  {" "}
                 },
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
                FontSize->Rational[39, 4]]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Center}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.034999999999999996`]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            ShowAutoStyles->False,
            AutoSpacing->False],
           xAct`xTerior`Coframe[$CellContext`M][$CellContext`b],
           Editable->False]}], "]"}],
        ShowAutoStyles->False,
        AutoSpacing->False],
       $CellContext`CovDPD[
        CircleTimes[
         xAct`xTerior`Coframe[$CellContext`M][$CellContext`a], 
         xAct`xTerior`Coframe[$CellContext`M][$CellContext`b]], 
        xAct`xTensor`PD],
       Editable->False], "]"}], "+", 
     RowBox[{
      RowBox[{"xAct`xTerior`Private`addAChr2", "[", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          StyleBox[GridBox[{
             {"\[Theta]", 
              StyleBox[GridBox[{
                 {"a"},
                 {" "}
                },
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
               FontSize->Rational[39, 4]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Center}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Coframe[$CellContext`M][$CellContext`a],
          Editable->False], "\[CircleTimes]", 
         InterpretationBox[
          StyleBox[GridBox[{
             {"\[Theta]", 
              StyleBox[GridBox[{
                 {"b"},
                 {" "}
                },
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.], {
                    Offset[0.034999999999999996`]}, 
                    Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {{
                    Offset[0.]}}, "RowsIndexed" -> {}}],
               FontSize->Rational[39, 4]]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Center}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.034999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           ShowAutoStyles->False,
           AutoSpacing->False],
          xAct`xTerior`Coframe[$CellContext`M][$CellContext`b],
          Editable->False]}], ",", "CD", ",", "PD"}], "]"}], "[", 
      InterpretationBox[
       StyleBox[
        RowBox[{
         StyleBox["{",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "p$2642"}], "}"}], ",", "\[ThinSpace]", 
          RowBox[{"{", 
           RowBox[{"b", ",", "p$2643"}], "}"}]}], 
         StyleBox["}",
          FontColor->RGBColor[0, 0, 1]]}],
        ShowAutoStyles->False,
        AutoSpacing->False],
       xAct`xTensor`IndexList[{$CellContext`a, $CellContext`p$2642}, \
{$CellContext`b, $CellContext`p$2643}],
       Editable->False], "]"}]}], 
    ")"}]}]}]], \
"Output",ExpressionUUID->"703342e7-b099-4386-a120-e631528fac4e"]
}, Open  ]],

Cell[TextData[{
 "Note that\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]],ExpressionUUID->
  "d00eca8d-56a5-4138-ba80-e810adf800dd"],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SuperscriptBox["v", "A"]}], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "-", " ", 
     RowBox[{
      SuperscriptBox["d", "CD2"], 
      SuperscriptBox["v", "A"]}]}], "=", 
    RowBox[{
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm], "+", 
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm]}]}], TraditionalForm]],ExpressionUUID->
  "52bfe2e3-243c-434b-bfd6-27749a3d617a"],
 "\nand so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "+", 
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"]}]}], TraditionalForm]],ExpressionUUID->
  "a2008d18-280f-4680-a5cf-03abdaf6e7e1"],
 ".\nNow ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    RowBox[{"A", "[", 
     RowBox[{"CD", ",", "PD", ",", "VB"}], "]"}], 
    RowBox[{"   ", "B"}], "A"], TraditionalForm]],ExpressionUUID->
  "6059374c-dd4d-4c95-9625-d14c3f7b2610"],
 "=0  iff FreeQ[VBundlesOfCovD[CD],VB]. This allows the simplification of \
A[CD1,CD2,VB] when only one of {CD1,CD2} has VB in VBundlesOfCovD."
}], "Text",ExpressionUUID->"6a4d9c25-08a5-433d-874d-382889d20a9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceAChr1", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1", ",", "PD", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd2", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd2"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"PD", ",", "cd2", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd1", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd1"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}]}], "}"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"5d61717f-3eb3-432b-ae2e-da6dad1b34b6"],

Cell[TextData[{
 "2. Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed. \
The formula:\n",
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["v", "A"]}], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"\[Del]", 
        RowBox[{",", "VB"}]}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
     SuperscriptBox["v", "B"]}]}], TraditionalForm]],ExpressionUUID->
  "700f0d7d-56f4-410d-a5f5-bee4bda52144"],
 "             (where VB is the VBundle of A; plus sign for +VB, minus sign \
for -VB)"
}], "Text",ExpressionUUID->"cddd8d28-5b7f-48ef-b68b-bb96397e9a56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "[", 
   RowBox[{
    RowBox[{"Diff", "[", 
     RowBox[{"expr_", ",", "PD"}], "]"}], ",", "PD"}], "]"}], ":=", 
  "0"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"595230ee-9d52-49e6-9590-ba63b3792f1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "@", 
    RowBox[{"Diff", "[", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{"expr_", ",", "cd_"}], "]"}], "]"}], ",", "cd_"}], "]"}]}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Plus", "@@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"addFRiem2", "[", 
       RowBox[{"expr", ",", "cd"}], "]"}], ",", 
      RowBox[{"xAct`xTensor`Private`selecton", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"FindFreeIndices", "@", "expr"}], ",", "AIndexQ"}], "]"}], 
        ",", 
        RowBox[{"VBundlesOfCovD", "@", "cd"}]}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"4708c9d5-598a-4d8e-8bdc-6ab632b7425f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"addFRiem2", "[", 
      RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd", ",", 
         RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
       RowBox[{"oldind", ",", 
        RowBox[{"-", "dummy"}]}], "]"}], ",", 
      RowBox[{"ReplaceIndex", "[", 
       RowBox[{"expr", ",", 
        RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addFRiem2", "[", 
    RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CurvatureForm", "[", 
       RowBox[{"cd", ",", 
        RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"6a4146e9-7d09-4e0c-b78e-45bad51c2638"],

Cell["Just in case, add the following definitions:", \
"Text",ExpressionUUID->"82351589-0856-4b48-a0f2-8a7808a1718e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"PD", ",", "_"}], "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"caf5de97-6cbe-4721-b0ea-78a5d3ab7f66"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", "PD", "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ef2c6fb0-4901-4caf-885b-d6ea333f6775"],

Cell[TextData[{
 "3. Change from FRiem2[CD1,VB] to FRiem2[CD2,VB],  introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]. The formula:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"F", "[", 
      RowBox[{"CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"CD1", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "A"]}], "+", 
     RowBox[{
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "C"}], "A"], "\[Wedge]", 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "C"]}]}]}], TraditionalForm]],ExpressionUUID->
  "ee78e267-3326-4b74-b81c-e0f73b7d9f55"]
}], "Text",ExpressionUUID->"c0b995ac-d9c3-4605-bdc1-cfc249ecda10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "cd_", ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd1_", "?", "CurvatureQ"}], ",", 
     RowBox[{"cd2_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"ReduceAChr1", "[", 
    RowBox[{"expr", "/.", 
     RowBox[{"changeCurvatureFormRules", "[", 
      RowBox[{"cd1", ",", "cd2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"cd2_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeCurvatureForm", "[", 
       RowBox[{"#1", ",", "#2", ",", "cd2"}], "]"}], "&"}], ",", "expr", ",", 
     "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"68ba8b1f-0d1d-4c17-a72e-172bf1b88919"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"changeCurvatureFormRules", "[", 
    RowBox[{"cd2_", ",", "cd1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd2", ",", 
         RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", "vb"}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ConnectionForm", "[", 
            RowBox[{"cd2", ",", "cd1", ",", "vb"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CurvatureForm", "[", 
           RowBox[{"cd1", ",", "vb"}], "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd2", "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"Tangent", "@", 
             RowBox[{"ManifoldOfCovD", "@", "cd2"}]}]}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ChristoffelForm", "[", 
            RowBox[{"cd2", ",", "cd1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"RiemannForm", "[", "cd1", "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"0de10080-1b3b-4154-a6ad-3bb790910de4"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.5 UseCartan", \
"Subsubsection",ExpressionUUID->"6a331a8a-9800-41ef-8626-7baf41485763"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "UseCartan"}]], \
"Input",ExpressionUUID->"0014322a-f616-45e7-8f02-69bfc188e552"],

Cell[BoxData[
 StyleBox["\<\"UseCartan[expr,covd] expands all the instances of the Diff \
using the Cartan structure equations for the connection arising from covd. In \
this way it is possible to expand the exterior derivative of a co-frame, a \
torsion 2-form and the curvature 2-form. If covd is the Levi-Civita \
connection of a metric, then the exterior derivatives of that metric and its \
volume element are expanded too. UseCartan[expr,PD] expands all instances of \
the exterior derivative in terms of partial derivatives defined in the list \
of manifolds returned by ManifoldsOf[expr]. It is possible to specify a \
custom list of manifolds as a third argument in the form \
UseCartan[expr,PD,{M1,M2,..}]\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"fef6a408-8b7d-496e-bda2-f73bf4e40cc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Thread", " ", "over", " ", "equations", " ", "and", " ", "lists"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_List", ",", "covd_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "covd"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_List", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "PD", ",", 
         RowBox[{"{", "mani", "}"}]}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_Equal", ",", "covd_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "covd"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_Equal", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "PD", ",", 
         RowBox[{"{", "mani", "}"}]}], "]"}], "&"}], "/@", "expr"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e89f442d-08bd-4108-bebb-8b143a76e2a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", " ", 
    "PD"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"expr", "/.", 
       RowBox[{
        RowBox[{"Diff", "@", "expr1_"}], ":>", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "/@", 
              RowBox[{"(", 
               RowBox[{"Tangent", "/@", 
                RowBox[{"{", "mani", "}"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"Inner", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"dx", "[", "#1", "]"}], "[", "#2", "]"}], 
               RowBox[{
                RowBox[{"PD", "[", 
                 RowBox[{"-", "#2"}], "]"}], "@", "expr1"}]}], "&"}], ",", 
             RowBox[{"{", "mani", "}"}], ",", "a", ",", "Plus"}], "]"}]}], 
          "]"}], "/;", 
         RowBox[{
          RowBox[{"Deg", "@", "expr1"}], "===", "0"}]}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_", ",", "PD"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"expr", "/.", 
       RowBox[{
        RowBox[{"Diff", "@", "expr1_"}], ":>", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "/@", 
              RowBox[{"(", 
               RowBox[{"Tangent", "/@", 
                RowBox[{"ManifoldsOf", "@", "expr"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"Inner", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"dx", "[", "#1", "]"}], "[", "#2", "]"}], 
               RowBox[{
                RowBox[{"PD", "[", 
                 RowBox[{"-", "#2"}], "]"}], "@", "expr1"}]}], "&"}], ",", 
             RowBox[{"ManifoldsOf", "@", "expr"}], ",", "a", ",", "Plus"}], 
            "]"}]}], "]"}], "/;", 
         RowBox[{
          RowBox[{"Deg", "@", "expr1"}], "===", "0"}]}]}]}], ")"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"8ef801ca-942c-4b66-9fce-8c1bcd54651a"],

Cell["\<\
We encode the Cartan equations in a set of rules. We also encode the action \
of the exterior derivative on a function whose arguments are scalars of a \
coordinate chart.\
\>", "Text",ExpressionUUID->"5b5120ba-9a34-497c-acb2-203f0c2a944d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UseCartan", "[", 
    RowBox[{"expr_", ",", "covd_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"metric", "=", 
        RowBox[{"MetricOfCovD", "[", "covd", "]"}]}], ",", 
       RowBox[{"basis", "=", 
        RowBox[{"BasisOfCovD", "[", "covd", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"expr", "/.", 
      RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "coframe"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Coframe", "[", "mani_", "]"}], "[", 
              RowBox[{"ind_", "?", "UpIndexQ"}], "]"}], ",", "PD"}], "]"}], 
           "]"}], "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"TorsionQ", "@", "covd"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"ConnectionForm", "[", 
                   RowBox[{"covd", ",", 
                    RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
                  RowBox[{"ind", ",", 
                   RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
                RowBox[{
                 RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}], 
               "+", 
               RowBox[{
                RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "ind", 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"ConnectionForm", "[", 
                  RowBox[{"covd", ",", 
                   RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
                 RowBox[{"ind", ",", 
                  RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
               RowBox[{
                RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}]}], 
             "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
           "connection"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"connection", ":", 
                 RowBox[{"(", 
                  RowBox[{"ConnectionForm", "|", "ChristoffelForm"}], ")"}]}],
                 ")"}], "[", 
               RowBox[{"covd", ",", 
                RowBox[{"vbundle_", ":", 
                 RowBox[{"Tangent", "@", 
                  RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
              RowBox[{
               RowBox[{"a1_", "?", "UpIndexQ"}], ",", 
               RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"CurvatureForm", "[", 
               RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
              RowBox[{"a1", ",", 
               RowBox[{"-", "a2"}]}], "]"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"connection", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a1", ",", 
                RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
              RowBox[{
               RowBox[{"connection", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "a2"}]}], "]"}]}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
           "torsion"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"TorsionForm", "[", "covd", "]"}], "[", 
              RowBox[{"ind_", "?", "UpIndexQ"}], "]"}], ",", "PD"}], "]"}], 
           "]"}], "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Coframe", "[", 
                RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", 
               "]"}], "\[Wedge]", 
              RowBox[{
               RowBox[{"RiemannForm", "[", "covd", "]"}], "[", 
               RowBox[{"ind", ",", 
                RowBox[{"-", "a"}]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
               RowBox[{"ind", ",", 
                RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
              RowBox[{
               RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "a", 
               "]"}]}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
           "curvature"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"curvature", ":", 
                 RowBox[{"(", 
                  RowBox[{"CurvatureForm", "|", "RiemannForm"}], ")"}]}], 
                ")"}], "[", 
               RowBox[{"covd", ",", 
                RowBox[{"vbundle_", ":", 
                 RowBox[{"Tangent", "@", 
                  RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
              RowBox[{
               RowBox[{"a1_", "?", "UpIndexQ"}], ",", 
               RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ConnectionForm", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
              RowBox[{
               RowBox[{"curvature", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a1", ",", 
                RowBox[{"-", "a"}]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"curvature", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a", ",", 
                RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
              RowBox[{
               RowBox[{"ConnectionForm", "[", 
                RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
               RowBox[{"a1", ",", 
                RowBox[{"-", "a"}]}], "]"}]}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric",
            " ", 
           RowBox[{"(", 
            RowBox[{"indices", " ", "downstairs"}], ")"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"metr_", "?", "MetricQ"}], "[", 
              RowBox[{
               RowBox[{"-", "a1_"}], ",", 
               RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", "=", 
               RowBox[{"DummyIn", "@", 
                RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
                RowBox[{"a", ",", 
                 RowBox[{"-", "a1"}]}], "]"}], 
               RowBox[{"metric", "[", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", 
                 RowBox[{"-", "a2"}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{
                RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
                RowBox[{"a", ",", 
                 RowBox[{"-", "a2"}]}], "]"}], 
               RowBox[{"metric", "[", 
                RowBox[{
                 RowBox[{"-", "a"}], ",", 
                 RowBox[{"-", "a1"}]}], "]"}]}]}]}], "]"}], "/;", 
           RowBox[{
            RowBox[{"MetricOfCovD", "[", "covd", "]"}], "===", "metr"}]}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric",
            " ", 
           RowBox[{"(", 
            RowBox[{"indices", " ", "upstairs"}], ")"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{"a1_Symbol", ",", "a2_Symbol"}], "]"}], ",", "PD"}], 
            "]"}], "]"}], "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
             RowBox[{"a1", ",", "a2"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
            RowBox[{"a2", ",", "a1"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"(*", " ", 
          RowBox[{
          "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", 
           " ", "the", " ", "parallel", " ", "derivative", " ", "of", " ", 
           "a", " ", "coordinate", " ", "chart"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"HoldPattern", "@", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{"expr1_", "?", "ScalarQ"}], ",", "PD"}], "]"}]}], 
          "\[RuleDelayed]", 
          RowBox[{
           RowBox[{"Inner", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"covd", "[", 
                 RowBox[{"{", 
                  RowBox[{"#1", ",", 
                   RowBox[{"-", 
                    RowBox[{"BasisOfCovD", "@", "covd"}]}]}], "}"}], "]"}], 
                "@", "expr1"}], " ", 
               RowBox[{"Diff", "@", "#2"}]}], "&"}], ",", 
             RowBox[{"CNumbersOf", "[", 
              RowBox[{"basis", ",", 
               RowBox[{"VBundleOfBasis", "[", "basis", "]"}]}], "]"}], ",", 
             RowBox[{"ScalarsOfChart", "[", "basis", "]"}], ",", "Plus"}], 
            "]"}], "/;", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Deg", "@", "expr1"}], "===", "0"}], "&&", 
             RowBox[{"basis", "=!=", "Null"}]}], ")"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"metric", "=!=", "Null"}], ",", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"eps", "=", 
               RowBox[{"epsilon", "[", "metric", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"HoldPattern", "[", 
               RowBox[{"Diff", "[", 
                RowBox[{
                 RowBox[{"eps", "[", 
                  RowBox[{"inds__", "?", "DownIndexQ"}], "]"}], ",", "PD"}], 
                "]"}], "]"}], "\[RuleDelayed]", 
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", "=", 
                  RowBox[{"DummyIn", "[", 
                   RowBox[{"VBundleOfMetric", "[", "metric", "]"}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"-", "a"}]}], "]"}], 
                 RowBox[{"eps", "[", "inds", "]"}]}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"b68c8477-523a-4f7e-a2df-a7929590882d"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.6 Interior product and Lie derivative", \
"Subsubsection",ExpressionUUID->"48f0645f-3e75-4af2-92d3-9f2f1e707a82"],

Cell["\<\
We define the interior product of form with a vector as a derivation of \
degree -1.\
\>", "Text",ExpressionUUID->"c889c365-5786-4064-857e-e318da67a416"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "Int"}]], "Input",ExpressionUUID->"f59f2c2d-97ba-4008-a744-c1fbdbad38ce"],

Cell[BoxData[
 StyleBox["\<\"Int[v][form] is the interior contraction of form with the \
vector (rank 1-tensor) v\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"1ecf21b0-68fd-4cbf-a75f-d9870941e69d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], ",", "Wedge", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<\[Iota]\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"abf77843-23b9-4a0d-9bd3-637a73f68fff"],

Cell["Main properties of the interior product:", \
"Text",ExpressionUUID->"b8ad33a9-e3f3-47c3-b182-5ae8a65eda80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{"f_", " ", "form_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", " ", 
     RowBox[{
      RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}], "/;", 
    RowBox[{
     RowBox[{"Deg", "@", "f"}], "===", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"Deg", "@", "f"}], "===", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{"f", " ", 
    RowBox[{
     RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", "ind1_Symbol", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Coframe", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"v", "[", "ind2", "]"}], "/;", 
    RowBox[{"v", "=!=", 
     RowBox[{"Coframe", "[", "mani", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", "ind1_Symbol", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"dx", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"v", "[", "ind2", "]"}], "/;", 
    RowBox[{"v", "=!=", 
     RowBox[{"dx", "[", "mani", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", 
      RowBox[{"-", "ind1_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Coframe", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"-", "ind1"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"First", "@", 
       RowBox[{"MetricsOfVBundle", "@", 
        RowBox[{"Tangent", "@", "mani"}]}]}], ")"}], "[", 
     RowBox[{"ind1", ",", "ind2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", 
      RowBox[{"-", "ind1_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"dx", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"-", "ind1"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"First", "@", 
       RowBox[{"MetricsOfVBundle", "@", 
        RowBox[{"Tangent", "@", "mani"}]}]}], ")"}], "[", 
     RowBox[{"ind1", ",", "ind2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"Basis", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cnumber1_", "?", "IntegerQ"}], ",", 
         RowBox[{"-", 
          RowBox[{"basisname_", "?", "BasisQ"}]}]}], "}"}], ",", 
       "ind_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"dx", "[", "mani_", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cnumber2_", "?", "IntegerQ"}], ",", 
       RowBox[{"basisname_", "?", "BasisQ"}]}], "}"}], "]"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{"cnumber1", "=!=", "cnumber2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"Basis", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cnumber1_", "?", "IntegerQ"}], ",", 
         RowBox[{"-", 
          RowBox[{"basisname_", "?", "BasisQ"}]}]}], "}"}], ",", 
       "ind_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"dx", "[", "mani_", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cnumber2_", "?", "IntegerQ"}], ",", 
       RowBox[{"basisname_", "?", "BasisQ"}]}], "}"}], "]"}], "]"}], ":=", 
   RowBox[{"1", "/;", 
    RowBox[{"cnumber1", "===", "cnumber2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"Basis", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cnumber1_", "?", "IntegerQ"}], ",", 
         RowBox[{"-", 
          RowBox[{"basisname_", "?", "BasisQ"}]}]}], "}"}], ",", 
       "ind_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Coframe", "[", "mani_", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cnumber2_", "?", "IntegerQ"}], ",", 
       RowBox[{"basisname_", "?", "BasisQ"}]}], "}"}], "]"}], "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{"cnumber1", "=!=", "cnumber2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"Basis", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cnumber1_", "?", "IntegerQ"}], ",", 
         RowBox[{"-", 
          RowBox[{"basisname_", "?", "BasisQ"}]}]}], "}"}], ",", 
       "ind_Symbol"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Coframe", "[", "mani_", "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cnumber2_", "?", "IntegerQ"}], ",", 
       RowBox[{"basisname_", "?", "BasisQ"}]}], "}"}], "]"}], "]"}], ":=", 
   RowBox[{"1", "/;", 
    RowBox[{"cnumber1", "===", "cnumber2"}]}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"fcbc54f4-9684-4e22-9eae-80c55d29c52b"],

Cell["Interior contraction of basis objects is zero.", \
"Text",ExpressionUUID->"ea337bbe-a20f-4058-bebb-67524380c6df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", "_Basis", "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"99dcbd08-5d14-44ba-82a4-5bd54f631a36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "CartanD"}]], \
"Input",ExpressionUUID->"8b7864b0-56a9-41e1-b04e-255a86868e38"],

Cell[BoxData[
 StyleBox["\<\"CartanD[v][form] is the Cartan derivative of form with respect \
to the vector (rank 1-tensor) v. CartanD[v][form,covd] is the Cartan \
derivative with respect to the covariant derivative covd.\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"10110ac5-8e74-4b7a-a280-1403cc306f5c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], ",", "Wedge", ",", "0", ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<L\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e3632fd1-6563-4298-b33b-b6783f39e8f8"],

Cell["Lie acting on basis objects is zero.", \
"Text",ExpressionUUID->"5ede7032-e07b-43a8-8d77-0eadc2d07e64"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], "[", "_Basis", "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"b768ed0b-b5a7-45d7-8bea-830bdf890cca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], "[", 
    RowBox[{"_Basis", ",", "_"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"db738c39-8bb7-4b77-a314-0e0cf36cff12"],

Cell["\<\
Superscript formatting for Lie derivatives arising from the exterior \
derivatives\
\>", "Text",ExpressionUUID->"a9db9e22-56dc-438a-bf8e-80765bcb9e8b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CartanD", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SubscriptBox", "[", 
         RowBox[{"\"\<L\>\"", ",", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{"v", ",", "StandardForm"}], "]"}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CartanD", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SubsuperscriptBox", "[", 
         RowBox[{"\"\<L\>\"", ",", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{"v", ",", "StandardForm"}], "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"4e05d9e3-f5d1-4df5-93b8-4540babfce26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{
    RowBox[{"f", " ", 
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}], "+", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{"Diff", "@", "f"}], ",", 
      RowBox[{
       RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"3424ae1b-d531-4ba5-b98d-88d64835943f"],

Cell["We still need definition when acting on Times", \
"Text",ExpressionUUID->"9f17d1e1-f709-4b29-bc2e-490c4c55b253"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Diff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{
              RowBox[{"CartanD", "[", "v", "]"}], "[", "form", "]"}]}], "+", 
            RowBox[{
             RowBox[{"lie0", "[", "v", "]"}], "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"lie0", "[", "v", "]"}], "[", "expr", "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Only", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{"CartanD", "[", "v", "]"}], ",", "expr", ",", "i"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", "expr_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", "expr", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Scalars", " ", "and", " ", "a", " ", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"lie0", "[", "v", "]"}], "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v", "]"}], "[", "expr", "]"}], ",", "form"}],
       "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"68ba555f-c63f-4778-a21c-cb55329077ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], "[", 
    RowBox[{"expr_", "?", "ConstantQ"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"edbf0acc-e1f6-46d2-9123-dc26d3d6f5bc"],

Cell["\<\
Leibinitz rule for xTensor LieD when acting on wedge product expressions:\
\>", "Text",ExpressionUUID->"c212ccec-39c6-44b8-abe2-1782107e7a19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "LieD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LieD", "[", "v_", "]"}], "@", "expr_Wedge"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "@", "expr"}], "/.", 
     RowBox[{"CartanD", "\[Rule]", "LieD"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "LieD"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"2d6a5973-2263-45e8-a7a7-184be76da6ed"],

Cell["\<\
Lie and diff commute (probably not true for covariant exterior derivatives). \
We need to pick a canonical order. Should this be done by a SortDs type \
function?\
\>", "Text",ExpressionUUID->"f070e1e1-3688-4b66-adbb-7620364fa532"],

Cell["Cartan identity:", \
"Text",ExpressionUUID->"2e1adea7-167a-4ce8-a0e2-073d32b562b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CartanDToDiff", "[", "expr_", "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", "form_", "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Diff", "@", 
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", 
         RowBox[{"Diff", "@", "form"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{"form_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
         "]"}], "+", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"form", ",", "covd"}], "]"}]}]}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"de560c86-3164-4f41-8a76-d3c689b96a12"],

Cell["\<\
Lie derivative of a tensor valued differential form. We overload the xTensor \
command LieDToCovD. Note: xTensor LieD doesn\[CloseCurlyQuote]t know how to \
work with wedge products.\
\>", "Text",ExpressionUUID->"211fb2c8-01df-491b-9dff-3243542be47b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "LieDToCovD"}]], \
"Input",ExpressionUUID->"670d1c08-101a-46ac-bb60-aedd49970f30"],

Cell[BoxData[
 StyleBox["\<\"LieDToCovD[expr, covd] transforms LieD[v][expr1] into LieD[v, \
covd][expr1] so that the Lie derivative of expr1 along v is computed in terms \
of the covariant derivative covd.\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"3cf0ea46-3319-477b-bbab-53719b5d6d33"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LieDForm", "[", 
     RowBox[{
      RowBox[{"v_", "[", "ind_", "]"}], ",", 
      RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "@", "ten_"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"DummyIn", "@", 
        RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
     RowBox[{"ToCanonical", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"LieD", "[", 
          RowBox[{
           RowBox[{"v", "[", "ind", "]"}], ",", "covd"}], "]"}], "@", "ten"}],
         "+", 
        RowBox[{
         RowBox[{"CartanD", "[", 
          RowBox[{"v", "[", "ind", "]"}], "]"}], "[", 
         RowBox[{"ten", ",", "covd"}], "]"}], "-", 
        RowBox[{
         RowBox[{"v", "[", "a", "]"}], 
         RowBox[{
          RowBox[{"covd", "[", 
           RowBox[{"-", "a"}], "]"}], "@", "ten"}]}]}], ",", 
       RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LieDFormToCovD", "[", 
    RowBox[{"expr_", ",", "covd_"}], "]"}], ":=", 
   RowBox[{"expr", "//.", 
    RowBox[{
     RowBox[{"LieD", "[", "vector_", "]"}], "\[RuleDelayed]", 
     RowBox[{"LieDForm", "[", 
      RowBox[{"vector", ",", "covd"}], "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"93a65a09-ab11-48ca-a874-571af8d2c9d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "LieDToCovD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LieDToCovD", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"arg_", ":", "PD"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"LieDFormToCovD", "[", 
    RowBox[{"expr", ",", "arg"}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Deg", "@", "expr"}], "\[GreaterEqual]", 
    "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "LieDToCovD"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"3c3aa114-57b3-4bc0-ac1f-6aa5077bfdbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.7 Commuting and sorting of the derivations ", \
"Subsubsection",ExpressionUUID->"cfd62dc7-7975-45cb-ab57-fe7fd43ac49f"],

Cell[TextData[{
 "There are 6 equations in all for the (super-)commutators of the three \
derivations (also the negations of these three equations). It is easy to \
write them down. The LHS\[CloseCurlyQuote]s are just super-commutators of two \
derivations, in whatever order you want. The sign is + just for [odd,odd] so \
that\[CloseCurlyQuote]s for [d,d], [\[Iota],\[Iota]], and [\[Iota],d]. Then \
the RHS is itself a single derivation, with the degree being the sum of \
degrees from the LHS. If there is only one vector argument, it\
\[CloseCurlyQuote]s clear what the RHS should be. When there are two vector \
arguments, then the vector on the RHS is the Lie bracket of the two from the \
LHS, in the order that they came on the LHS.\n \nThe equations are:\n1. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["d", "2"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "1ee1c70f-bab8-4588-8520-7c7dcc7e0190"],
 "\n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], 
      SubscriptBox["\[Iota]", "w"]}], "+", 
     RowBox[{
      SubscriptBox["\[Iota]", "w"], 
      SubscriptBox["\[Iota]", "v"]}]}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"80cb7a65-63b1-4c0f-bb1b-b131686bdabd"],
 "\n3. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], 
      SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "w"], 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", 
    SubscriptBox["\[ScriptCapitalL]", 
     RowBox[{"[", 
      RowBox[{"v", ",", "w"}], "]"}]]}], TraditionalForm]],ExpressionUUID->
  "b37881e1-7f00-48ec-a4df-cd1aac81946d"],
 "\n4. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Iota]", "v"], 
     SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalL]", "w"], 
     SubscriptBox["\[Iota]", "v"]}]}], TraditionalForm]],ExpressionUUID->
  "2551a90d-79e0-4fc3-b208-5f5cb9362fe0"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Iota]", 
    RowBox[{"[", 
     RowBox[{"v", ",", "w"}], "]"}]], TraditionalForm]],ExpressionUUID->
  "4153577c-9f36-479a-94f0-10db495b18fa"],
 "\n5. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], "d"}], "+", 
     RowBox[{"d", " ", 
      SubscriptBox["\[Iota]", "v"]}]}], "=", " ", 
    SubscriptBox["\[ScriptCapitalL]", "v"]}], TraditionalForm]],
  ExpressionUUID->"3d9bab1d-1c97-485b-9e9f-5a7832375cac"],
 "\n6. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], "d"}], "-", 
     RowBox[{"d", " ", 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", "0"}], 
   TraditionalForm]],ExpressionUUID->"dc32f5dd-6df8-437d-8eea-554abb667468"],
 " (\[OpenCurlyDoubleQuote]Cartan\[CloseCurlyQuote]s magic formula\
\[CloseCurlyDoubleQuote])"
}], "Text",ExpressionUUID->"b011dd3b-8452-41a3-80eb-7768a35b61fe"],

Cell["\<\
1. requires no action (it will just be automatically killed).
2, 3. Maybe have this sorted automatically? Any canonical order for v,w \
imposes a canonical order on the derivations.
4, 5, 6\[LongDash]write rules to go in either direction.\
\>", "Text",ExpressionUUID->"ca761050-089c-4ad4-a821-f8ea6408ddb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"dda158d0-8895-432f-a322-095dd3f4b01b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{
        RowBox[{"Int", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "w", "]"}], "@", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}]}], "/;", 
      RowBox[{"!", 
       RowBox[{"OrderedQ", "[", 
        RowBox[{"{", 
         RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"ceb1acef-8c9f-487d-8d76-129efcad2165"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", "=", 
           RowBox[{"First", "@", 
            RowBox[{"FindFreeIndices", "[", "v", "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "@", 
           RowBox[{
            RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}], "+", 
          RowBox[{
           RowBox[{"CartanD", "[", 
            RowBox[{
             RowBox[{"Bracket", "[", 
              RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
           "form"}]}]}], "]"}], "/;", 
       RowBox[{"!", 
        RowBox[{"OrderedQ", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w_", "]"}], "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", "=", 
           RowBox[{"First", "@", 
            RowBox[{"FindFreeIndices", "[", "v", "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CartanD", "[", "v", "]"}], "[", 
             RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}], "+", 
          
          RowBox[{
           RowBox[{"CartanD", "[", 
            RowBox[{
             RowBox[{"Bracket", "[", 
              RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "[", 
           RowBox[{"form", ",", "covd"}], "]"}]}]}], "]"}], "/;", 
       RowBox[{"!", 
        RowBox[{"OrderedQ", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"4a659c10-4e63-4efa-94ba-87e1b141ba22"],

Cell["\<\
Below, SortDerivationsRule[d1,d2][expr] changes instances of d2\[CenterDot]d1 \
into d1\[CenterDot]d2. There is no need to check orderings.\
\>", "Text",ExpressionUUID->"31f3538f-2873-4e20-acd6-5485ca80d5c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "w_", "]"}], "@", 
        RowBox[{
         RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", 
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "@", "form"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"w", ",", "v"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "w_", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", 
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "[", 
           RowBox[{"form", ",", "covd"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"w", ",", "v"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w", "]"}], "@", 
          RowBox[{
           RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "[", 
         RowBox[{"form_", ",", 
          RowBox[{"covd_", "?", "CovDQ"}]}], "]"}]}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w", "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
          "]"}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"329827f2-7fe1-4439-879e-0d4f1c31df8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}], ",", 
        RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "v", "]"}], "@", 
        RowBox[{"Diff", "[", 
         RowBox[{"form", ",", "covd"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{"form", ",", "covd"}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{"Diff", "[", 
        RowBox[{"form_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}]}], "]"}], "\[RuleDelayed]", 
     
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{"form", ",", "covd"}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"dfa0b33c-898f-4744-8bfa-1f6d68ceb0b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "v_", "]"}], "@", "form_"}], ",", "PD"}], 
        "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "@", 
       RowBox[{"Diff", "@", "form"}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "v_", "]"}], "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "@", 
        RowBox[{"Diff", "[", 
         RowBox[{"form_", ",", "PD"}], "]"}]}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Diff", "@", 
       RowBox[{
        RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{
         RowBox[{"Diff", "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CartanD", "[", "v", "]"}], "[", 
         RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"50054eda-f72c-4a0e-ae09-cf5e4674d6a0"],

Cell["\<\
Now we choose a default left-to-right order that we want derivations to have. \
I don\[CloseCurlyQuote]t know if there is a best order (i.e. what encourages \
the largest number of terms to vanish).\
\>", "Text",ExpressionUUID->"a52a2b85-a204-4c2a-8351-a694323353c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "$DerivationSortOrder"}]], \
"Input",ExpressionUUID->"0b2b4a98-c01a-4ce5-965e-e1b70cc9a35d"],

Cell[BoxData[
 StyleBox["\<\"$DerivationSortOrder is a global variable which encodes the \
default ordering of the three derivatives Int, LieD and Diff. The default is \
{LieD,Int,Diff}\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"57c9376d-02c8-4dae-83b4-4c807196f9a2"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Derivations", "=", 
   RowBox[{"{", 
    RowBox[{"CartanD", ",", "Int", ",", "Diff"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$DerivationSortOrder", "=", "$Derivations"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"392c0a7d-6247-455b-91c5-f9a2e4ebbf19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", 
  "SortDerivations"}]], \
"Input",ExpressionUUID->"c3fc9587-dc26-463a-9cea-9bb9dd849267"],

Cell[BoxData[
 StyleBox["\<\"SortDerivations[expr] brings expr into a new expression where \
all the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\"\>", 
  "MSG"]], "Print", \
"PrintUsage",ExpressionUUID->"89898c67-cfcc-4ea3-9b3b-42ee32d31318"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SortDerivations", "[", "expr_", "]"}], ":=", 
  RowBox[{"SortDerivations", "[", 
   RowBox[{"expr", ",", "$DerivationSortOrder"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivations", "[", 
    RowBox[{"expr_", ",", "order_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Make", " ", "sure", " ", "that", " ", "order", " ", "is", " ", "some", 
       " ", "permutation", " ", "of", " ", "$Derivations"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "@", "order"}], "=!=", 
         RowBox[{"Sort", "@", "$Derivations"}]}], ",", 
        RowBox[{
         RowBox[{"Throw", "@", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"SortDerivations", "::", "invalid"}], ",", 
            "\"\<order\>\"", ",", "order"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"expr", "//.", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Join", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"SortDerivationsRule", "[", 
                RowBox[{
                 RowBox[{"order", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"Drop", "[", 
               RowBox[{"order", ",", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "@", "order"}], "-", "1"}]}], "}"}]}], 
          "]"}]}]}], "//.", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"SortDerivationsRule", "[", 
            RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", "order"}], 
         ")"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"ddf9763a-7b9c-4414-a7d6-f3bee9ab4eab"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Variational derivatives of top rank forms", "Subsection",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"301f725b-650d-4c02-801f-dca85b3d7b76"],

Cell[CellGroupData[{

Cell["4.1 FormVarD", \
"Subsubsection",ExpressionUUID->"ecf62e99-474e-425e-83f7-fc23b1f661be"],

Cell["Check that a form has top rank", \
"Text",ExpressionUUID->"c49f8bd5-f42c-402f-8665-9f04144f521b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", "form_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"manifolds", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"DependenciesOf", "@", "form"}], ",", "ManifoldQ"}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "manifolds"}], " ", "\[NotEqual]", " ", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"TopRankQ", "::", "error1"}], ",", 
          "\"\<Forms must have exactly 1 manifold in dependencies.\>\""}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"TopRankQ", "[", 
        RowBox[{"form", ",", 
         RowBox[{"First", "@", "manifolds"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", 
    RowBox[{"form_", ",", 
     RowBox[{"mani_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"form", ",", "Wedge"}], "]"}], "===", 
    RowBox[{"DimOfManifold", "@", "mani"}]}]}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"5e31f032-e854-43b1-a5bc-d1a2b0a06385"],

Cell[TextData[{
 "FormVarD is supposed to be like VarD, but for top-rank forms. A derivative \
is not specified, because the exterior derivative is natural. However, the \
adjoint to the exterior derivative, the codifferential, requires a Hodge \
dual, which we define via a (non-degenerate!) metric. Therefore FormVarD has \
the notation FormVarD[form, metric][expr, rest]. The convention is that expr \
and rest are combined as \[Delta](expr)\[Wedge]rest (here I write the \
variational derivative as \[Delta], and always subscript the codifferential \
as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g"], TraditionalForm]],ExpressionUUID->
  "e7da8e4a-d8d7-4778-90f6-18491078319b"],
 "). This means that when writing the Leibniz rule for the Wedge product, we \
must re-order the factors, i.e.\n  \[Delta](a\[Wedge]b\[Wedge]c) = \[Delta]a\
\[Wedge]b\[Wedge]c + a\[Wedge]\[Delta]b\[Wedge]c + \
a\[Wedge]b\[Wedge]\[Delta]c=\[Delta]a\[Wedge]b\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", 
     RowBox[{"a", "||", "b"}], "|"}]], TraditionalForm]],ExpressionUUID->
  "cb7c3e81-ae2c-4d40-b4e7-f03553158743"],
 "\[Delta]b\[Wedge]a\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"|", "a", "|", 
       RowBox[{"+", 
        RowBox[{"|", "b", "|"}]}]}], ")"}], "|", "c", "|"}]], 
   TraditionalForm]],ExpressionUUID->"4cf376a5-f9d4-416d-aaa4-c18bd8a3ceb1"],
 "\[Delta]c\[Wedge]a\[Wedge]b       etc.\nThe other identities we need \
follow. For a Hodge star,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     SubscriptBox["\[Star]", "g"]}]}], TraditionalForm]],ExpressionUUID->
  "2af7c417-6688-454e-a5b5-a7124a4c5dcb"],
 "b) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]],ExpressionUUID->"31cb4c6f-6a8b-4666-8d91-6db6ae32ff49"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]],ExpressionUUID->
  "b681b5ea-da62-473b-8b75-595050dcf26b"],
 "     \[LineSeparator]where |a|+|*b|=n, and where\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]],ExpressionUUID->"56293496-2414-47a2-83a5-b5ceabb66ba2"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{
       SubscriptBox["i", "1"], 
       SubscriptBox["j", "1"]}]], "..."}], " ", 
    SuperscriptBox["g", 
     RowBox[{
      SubscriptBox["i", "k"], 
      SubscriptBox["j", "k"]}]], 
    SubscriptBox["a", 
     RowBox[{
      RowBox[{
       SubscriptBox["i", "1"], "..."}], 
      SubscriptBox["i", "k"]}]], 
    SubscriptBox["b", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "1"], "..."}], 
      SubscriptBox["j", "k"]}]]}], TraditionalForm]],ExpressionUUID->
  "50e5378f-857a-4330-86da-c53a09ef815a"],
 "\nis the inner product on k-forms given by the metric g, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]],ExpressionUUID->
  "3baa978b-81dd-4f95-bfde-59ef2b355f03"],
 "=\[Star]1 is the metric volume element, given in a coordinate basis by\n  \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dVol", "g"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"|", 
         RowBox[{"det", " ", "g"}], "|"}]], 
       RowBox[{
        SuperscriptBox["dx", "1"], "\[Wedge]"}]}], "..."}], "\[Wedge]", 
     SuperscriptBox["dx", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "dfb11495-b516-4ac1-9911-6546a366dcc2"],
 ".\nWith a real metric and real-valued forms, it is clear that \
\[LeftAngleBracket]a,b\[RightAngleBracket] = \[LeftAngleBracket]b,a\
\[RightAngleBracket] and so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "b"}], ")"}]}], " ", "=", " ", 
    RowBox[{"b", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "a"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"1ebdfcbc-cb62-41c2-be14-1a6f69686e22"],
 "        (for |a|+|*b|=n) \nor in the way we\[CloseCurlyQuote]ll use it,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Star]", "g"], "a"}], ")"}], TraditionalForm]],
  ExpressionUUID->"0988423e-d66b-4b88-ac0c-caa31932260b"],
 "\[Wedge]b = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", "a", "|", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], TraditionalForm]],
  ExpressionUUID->"4e8f16a7-22d3-488b-a167-a9bd44549300"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Star]", "g"], "b"}]}]}], TraditionalForm]],
  ExpressionUUID->"6ae3cd07-2ae0-4873-9711-2f895c69c159"],
 ")      (for |a|+|*b|=n) \nQUESTION: What about \
\[DoubleStruckCapitalC]-valued forms?\nWe also have that diff and codiff (of \
any CovD) are adjoints of each other, in the sense that\n  \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"da", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"]}], TraditionalForm]],ExpressionUUID->
  "293eab9e-6aba-4806-ae70-fbf8fe6b1101"],
 "b = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], "da"}], TraditionalForm]],ExpressionUUID->
  "83a0ccb8-c39f-4a0c-83d7-de75fffead4f"],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], 
    RowBox[{
     SubscriptBox["\[Delta]", "g"], "b"}]}], TraditionalForm]],ExpressionUUID->
  "337ed48d-a014-474c-9cf5-56cdd14205c9"],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", "\[Wedge]"}]}], 
    SubscriptBox["\[Star]", "g"], "a"}], TraditionalForm]],ExpressionUUID->
  "2c9e0555-3e7a-4e5c-bf49-f9fa0eb4c901"],
 "\nThe above rule is convenient with the inverse of Hodge, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], 
     SubscriptBox["\[Star]", "g"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Star]", "g"], 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]]}], "=", "id"}]}], TraditionalForm]],ExpressionUUID->
  "cb8e4b15-35d5-457f-9cd1-6850004f162d"],
 ". This inverse is\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], "a"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"|", "a", "|", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], "s"}], " ", 
     SubscriptBox["\[Star]", "g"], "a"}]}], TraditionalForm]],ExpressionUUID->
  "ce97c20f-7352-4219-a51d-f40f1479471f"],
 "\nwhere s=SignDetOfMetric[g]\nTODO:\n  1. Act on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]],ExpressionUUID->
  "d33f9960-cef6-4ca0-b0db-8a6a7da0f481"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g2"], TraditionalForm]],ExpressionUUID->
  "0412f690-998a-4c00-840c-d66ef433c9f7"],
 " where g2 is a second metric on the same manifold, and is also \
non-degenerate. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]],ExpressionUUID->
  "3ef0ee38-0889-47d7-8900-56c11e0f81c2"],
 " can be converted to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g"], TraditionalForm]],ExpressionUUID->
  "e553d6ff-01a0-4a9f-b7f6-a1822beed140"],
 " by including a ratio of volume elements (the ratio is coordinate-free).\n  \
2. What to do with Lie, Int?\n  3. What about coframe, connection, torsion, \
curvature, etc.?"
}], "Text",ExpressionUUID->"cf068693-dbed-4cdd-8f65-5e2152ac5862"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvHodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
       RowBox[{"n", "=", 
        RowBox[{"DimOfMetric", "@", "metric"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"SignDetOfMetric", "@", "metric"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", 
         RowBox[{"(", 
          RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], "s", " ", 
      RowBox[{
       RowBox[{"Hodge", "[", "metric", "]"}], "@", "expr"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"970c40a1-0695-4353-bd26-cdbd348030d5"],

Cell[TextData[{
 "We will use it as follows:\n  \[Integral] da \[Wedge] c = \[Integral] a \
\[Wedge] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Star]", "g"], 
    SubscriptBox["\[Delta]", "g"], 
    SubsuperscriptBox["\[Star]", "g", 
     RowBox[{"-", "1"}]], "c"}], TraditionalForm]],ExpressionUUID->
  "7a0d905c-0c61-4989-9149-40cd769525b2"],
 "\nand\n  \[Integral] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", " ", "\[Wedge]", " ", "c"}]}], " ", "=", " ", 
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      RowBox[{"b", " ", "\[Wedge]"}], " ", 
      SubscriptBox["\[Star]", "g"], "d", 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]], "c"}]}]}], TraditionalForm]],ExpressionUUID->
  "f3cc0a1b-8fa3-4617-a353-42f64d1405f9"]
}], "Text",ExpressionUUID->"9b285803-7060-4e4a-8349-aac51aef3736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"TODO", ":", 
     RowBox[{
     "More", " ", "checks", " ", "that", " ", "form", " ", "is", " ", 
      "actually", " ", "on", " ", "same", " ", "manifold", " ", "as", " ", 
      "metric"}]}], ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Generate", " ", 
    RowBox[{"rest", ".", " ", "Replace"}], " ", "dummies", " ", "in", " ", 
    RowBox[{"expr", ".", " ", "This"}], " ", "does", " ", "not", " ", "act", 
    " ", "on", " ", "scalar", " ", "arguments", " ", "of", " ", "functions"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", "expr_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TopRankQ", "[", "expr", "]"}], "&&", 
        RowBox[{"ScalarQ", "[", "expr", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{
         RowBox[{"ReplaceDummies", "@", "expr"}], ",", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"General", "::", "error1"}], ",", 
          "\"\<Can only take variational derivative of top-rank form.\>\""}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Thread", " ", "over", " ", "Plus"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Plus", ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{"#", ",", "rest"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_SeriesData", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"xAct`xTensor`Private`SeriesDataMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FormVarD", " ", "on", " ", 
     RowBox[{"products", ":", " ", 
      RowBox[{"sum", " ", "of", " ", 
       RowBox[{"VarDtake", "'"}], "s", " ", "of", " ", "elements"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Times", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"grades", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
              RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ">", "1"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"FormVarD", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}]}], "]"}], ";", "\t", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"FormVarDtake", "[", 
           RowBox[{"form", ",", "met", ",", "rest", ",", 
            RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"count", ",", 
            RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"FormVarD", " ", "on", " ", 
      RowBox[{"wedges", ":", " ", 
       RowBox[{"sum", " ", "of", " ", 
        RowBox[{"FormVarDtake", "'"}], "s", " ", "of", " ", 
        RowBox[{"elements", ".", "\[IndentingNewLine]", "Note"}], " ", "the", 
        " ", "use", " ", "of", " ", "sumgrades", " ", "for", " ", 
        "reordering", " ", "the", " ", "Wedge"}]}]}], ",", " ", 
     RowBox[{"as", " ", "described", " ", 
      RowBox[{"above", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Wedge", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", "grades"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"grades", "[", 
                RowBox[{"[", "count", "]"}], "]"}], "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], ")"}]}], 
            RowBox[{"FormVarDtake", "[", 
             RowBox[{"form", ",", "met", ",", "rest", ",", 
              RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"count", ",", 
             RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "FormVarD", " ", "element", " ", "n", " ", "of", " ", "a", " ", "list", 
     " ", "of", " ", "Wedge", " ", "factors", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", 
       RowBox[{"sign", "--"}], "it", " ", "was", " ", "included", " ", 
       "above"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarDtake", "[", 
      RowBox[{
      "form_", ",", "met_", ",", "rest_", ",", "list_List", ",", 
       "n_Integer"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"Wedge", "[", 
        RowBox[{
         RowBox[{"Wedge", "@@", 
          RowBox[{"Drop", "[", 
           RowBox[{"list", ",", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], ",", "rest"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Scalar", " ", 
      RowBox[{"functions", ".", " ", "Multiargument"}], " ", "generalization",
       " ", "contributed", " ", "by", " ", 
      RowBox[{"Leo", ".", " ", "multiD"}], " ", "is", " ", "not", " ", 
      "enough", " ", 
      RowBox[{"here", ".", "\[IndentingNewLine]", " ", "Since"}], " ", 
      "operating", " ", "on", " ", "a", " ", "scalar", " ", "function"}], ",",
      " ", 
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "need", " ", "extra", " ", 
      RowBox[{"Wedge", "'"}], "s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"repargs", "=", 
         RowBox[{"ReplaceDummies", "/@", 
          RowBox[{"{", "args", "}"}]}]}], "}"}], ",", 
       RowBox[{"Plus", "@@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"FormVarD", "[", 
             RowBox[{"form", ",", "met"}], "]"}], "[", 
            RowBox[{"#1", ",", 
             RowBox[{"rest", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Derivative", "@@", "#2"}], ")"}], "@", "func"}], "@@",
                "repargs"}]}]}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"repargs", ",", 
            RowBox[{"IdentityMatrix", "@", 
             RowBox[{"Length", "@", "repargs"}]}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "Scalar", " ", "head", " ", "because", " ", "in", " ", 
     "general", " ", "the", " ", "result", " ", "is", " ", "not", " ", "a", 
     " ", "scalar"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Scalar", "[", "expr_", "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"ReplaceDummies", "[", "expr", "]"}], ",", "rest"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"x_", "?", "ConstantQ"}], ",", "_"}], "]"}], ":=", "0"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ":", " ", 
       RowBox[{
        RowBox[{"metric", ".", " ", "Do"}], " ", "not", " ", "use", " ", 
        "ContractMetric"}]}]}], ",", " ", 
     RowBox[{"which", " ", "hides", " ", "the", " ", 
      RowBox[{"metric", ".", "\[IndentingNewLine]", 
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "metric", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"metric_", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"metric_Symbol", "?", "MetricQ"}], "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"xAct`xTensor`Private`metricsign", "[", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], 
      RowBox[{"ToCanonical", "[", 
       RowBox[{
        RowBox[{"rest", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "c"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "d"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "d"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "c"}], "]"}]}]}], 
           ")"}], "/", "2"}]}], ",", 
        RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ".", " ", "Place"}], " ", "indices", " ", "in", " ", 
      "proper", " ", "delta", " ", 
      RowBox[{"positions", ".", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "could", " ", "this", " ", "be", " ", "problematic", " ", "for", " ", 
         
         RowBox[{"spinors", "?", "\[IndentingNewLine]", "Note"}]}], ":", " ", 
        
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "deltas", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"clist", "=", 
         RowBox[{"ChangeIndex", "/@", 
          RowBox[{"IndexList", "[", "inds1", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ToCanonical", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImposeSymmetry", "[", 
           RowBox[{
            RowBox[{"Inner", "[", 
             RowBox[{"xAct`xTensor`Private`varddelta", ",", "clist", ",", 
              RowBox[{"IndexList", "[", "inds2", "]"}], ",", "Times"}], "]"}],
             ",", "clist", ",", 
            RowBox[{"SymmetryGroupOfTensor", "[", 
             RowBox[{"form", "[", "inds1", "]"}], "]"}]}], "]"}], "rest"}], 
         ",", 
         RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"A", " ", "different", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form1_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form2_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"0", "/;", 
      RowBox[{"!", 
       RowBox[{"ImplicitTensorDepQ", "[", 
        RowBox[{"form2", ",", "form1"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "identity"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Hodge", "[", "met_", "]"}], "[", "expr_", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
         RowBox[{"n", "=", 
          RowBox[{"DimOfMetric", "@", "met"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"k", 
           RowBox[{"(", 
            RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"expr", ",", 
          RowBox[{
           RowBox[{"Hodge", "[", "met", "]"}], "@", "rest"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"diff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "Diff", " ", "to", " ", "adjust", " ", "to", 
      " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", 
      RowBox[{"cd", ".", " ", "Added"}], " ", "back", " ", 
      RowBox[{"PD", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Diff", "[", 
        RowBox[{"expr_", ",", "PD"}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"FormVarD", "[", 
        RowBox[{"form", ",", "met"}], "]"}], "[", 
       RowBox[{"expr", ",", 
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "@", 
         RowBox[{
          RowBox[{"Codiff", "[", "met", "]"}], "[", 
          RowBox[{
           RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], "]"}]}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"codiff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "Codiff", " ", "to", " ", "adjust", " ", 
      "to", " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", "cd", " ", "and", " ", 
      "replaced", " ", "ExtCovDiff", " ", "by", " ", 
      RowBox[{"Diff", " ", ".", " ", "Added"}], " ", "back", " ", "covd"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Codiff", "[", "met_", "]"}], "[", 
        RowBox[{"expr_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"FormVarD", "[", 
        RowBox[{"form", ",", "met"}], "]"}], "[", 
       RowBox[{"expr", ",", 
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "@", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], ",", 
           "covd"}], "]"}]}]}], "]"}]}]}], ";"}]}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"e965cede-f4a4-4b8b-b147-0b190feb5bb1"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. End private and package", "Subsection",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"4e612ed7-ef82-4812-a7ef-cbb58fbb9934"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->
  True,ExpressionUUID->"e3b26e36-ed74-4e98-a2db-776b71bbb677"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1227.75, 610.5},
WindowMargins->{{Automatic, 103.5}, {8.25, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowSelection->True,
CellLabelAutoDelete->True,
Magnification:>1. Inherited,
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
$CellContext`TrackCellChangeTimes -> False,
ExpressionUUID->"b3e7b92d-b00d-4c53-ab06-9f90e40329f4"
]

